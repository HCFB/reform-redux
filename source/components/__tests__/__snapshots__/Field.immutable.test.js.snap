// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components / Field.immutable snapshot 1`] = `
ReactWrapper {
  Symbol(enzyme.__unrendered__): <Provider
    immutable={true}
  >
    <ForwardRef
      component="input"
      name="test"
    />
  </Provider>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": Provider {
      "__reactInternalMemoizedMergedChildContext": Object {
        "store": Object {
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
          Symbol(observable): [Function],
        },
      },
      "_reactInternalFiber": FiberNode {
        "_debugID": 50,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": FiberNode {
          "_debugID": 49,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "effectTag": 1,
          "expirationTime": 0,
          "firstContextDependency": null,
          "firstEffect": FiberNode {
            "_debugID": 51,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 52,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 53,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 54,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 55,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "disabled": false,
                      "onBlur": [Function],
                      "onChange": [Function],
                      "onFocus": [Function],
                      "value": "",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "disabled": false,
                      "onBlur": [Function],
                      "onChange": [Function],
                      "onFocus": [Function],
                      "value": "",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": <input
                      value=""
                    />,
                    "tag": 7,
                    "treeBaseDuration": 0,
                    "type": "input",
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "component": "input",
                    "disabled": false,
                    "innerRef": null,
                    "name": "test",
                    "value": "",
                  },
                  "memoizedState": Object {
                    "field": Immutable.Map {
                      "value": "",
                      "errors": Immutable.List [],
                      "valid": true,
                      "touched": false,
                      "changed": false,
                      "disabled": false,
                    },
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "component": "input",
                    "disabled": false,
                    "innerRef": null,
                    "name": "test",
                    "value": "",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Field {
                    "__reactInternalMemoizedMaskedChildContext": Object {
                      "_reformRedux": Object {
                        "field": Object {
                          "changeFieldValue": [Function],
                          "changeFieldsValues": [Function],
                          "removeField": [Function],
                          "resetField": [Function],
                          "resetFields": [Function],
                          "setFieldDisabled": [Function],
                          "setFieldErrors": [Function],
                          "setFieldTouched": [Function],
                          "setFieldsDisabled": [Function],
                          "setFieldsErrors": [Function],
                          "setFieldsTouched": [Function],
                        },
                        "form": Object {
                          "fieldsCount": Object {
                            "test": 1,
                          },
                          "initialized": false,
                          "name": "form",
                          "path": Array [
                            "form",
                          ],
                          "registerField": [Function],
                          "resetForm": [Function],
                          "unregisterField": [Function],
                          "updateForm": [Function],
                        },
                      },
                      "store": Object {
                        "dispatch": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                        Symbol(observable): [Function],
                      },
                    },
                    "__reactInternalMemoizedUnmaskedChildContext": Object {
                      "_reformRedux": Object {
                        "field": Object {
                          "changeFieldValue": [Function],
                          "changeFieldsValues": [Function],
                          "removeField": [Function],
                          "resetField": [Function],
                          "resetFields": [Function],
                          "setFieldDisabled": [Function],
                          "setFieldErrors": [Function],
                          "setFieldTouched": [Function],
                          "setFieldsDisabled": [Function],
                          "setFieldsErrors": [Function],
                          "setFieldsTouched": [Function],
                        },
                        "form": Object {
                          "fieldsCount": Object {
                            "test": 1,
                          },
                          "initialized": false,
                          "name": "form",
                          "path": Array [
                            "form",
                          ],
                          "registerField": [Function],
                          "resetForm": [Function],
                          "unregisterField": [Function],
                          "updateForm": [Function],
                        },
                      },
                      "store": Object {
                        "dispatch": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                        Symbol(observable): [Function],
                      },
                    },
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "changeFieldValue": [Function],
                    "changeFieldValueHandler": [Function],
                    "context": Object {
                      "_reformRedux": Object {
                        "field": Object {
                          "changeFieldValue": [Function],
                          "changeFieldsValues": [Function],
                          "removeField": [Function],
                          "resetField": [Function],
                          "resetFields": [Function],
                          "setFieldDisabled": [Function],
                          "setFieldErrors": [Function],
                          "setFieldTouched": [Function],
                          "setFieldsDisabled": [Function],
                          "setFieldsErrors": [Function],
                          "setFieldsTouched": [Function],
                        },
                        "form": Object {
                          "fieldsCount": Object {
                            "test": 1,
                          },
                          "initialized": false,
                          "name": "form",
                          "path": Array [
                            "form",
                          ],
                          "registerField": [Function],
                          "resetForm": [Function],
                          "unregisterField": [Function],
                          "updateForm": [Function],
                        },
                      },
                      "store": Object {
                        "dispatch": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                        Symbol(observable): [Function],
                      },
                    },
                    "getFieldValue": [Function],
                    "initialFieldData": Immutable.Map {
                      "value": "",
                      "errors": Immutable.List [],
                      "valid": true,
                      "touched": false,
                      "changed": false,
                      "disabled": false,
                    },
                    "isCheckbox": [Function],
                    "isRadio": [Function],
                    "isRadioOrCheckbox": [Function],
                    "onBlurFieldHandler": [Function],
                    "onFocusFieldHandler": [Function],
                    "props": Object {
                      "component": "input",
                      "disabled": false,
                      "innerRef": null,
                      "name": "test",
                      "value": "",
                    },
                    "refs": Object {},
                    "registerField": [Function],
                    "setFieldErrors": [Function],
                    "state": Object {
                      "field": Immutable.Map {
                        "value": "",
                        "errors": Immutable.List [],
                        "valid": true,
                        "touched": false,
                        "changed": false,
                        "disabled": false,
                      },
                    },
                    "unsubscribeFromStore": [Function],
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "effectTag": 0,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "component": "input",
                  "name": "test",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "component": "input",
                  "name": "test",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 13,
                "treeBaseDuration": 0,
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "render": [Function],
                },
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "effectTag": 0,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": <ForwardRef
                  component="input"
                  name="test"
                />,
                "onSubmit": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <ForwardRef
                  component="input"
                  name="test"
                />,
                "onSubmit": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": <form>
                <input
                  value=""
                />
              </form>,
              "tag": 7,
              "treeBaseDuration": 0,
              "type": "form",
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "effectTag": 5,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": <ForwardRef
                component="input"
                name="test"
              />,
              "onSubmit": [Function],
              "onSubmitFailed": [Function],
              "path": "form",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": <ForwardRef
                component="input"
                name="test"
              />,
              "onSubmit": [Function],
              "onSubmitFailed": [Function],
              "path": "form",
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Form {
              "__reactInternalMemoizedMaskedChildContext": Object {
                "store": Object {
                  "dispatch": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                  Symbol(observable): [Function],
                },
              },
              "__reactInternalMemoizedMergedChildContext": Object {
                "_reformRedux": Object {
                  "field": Object {
                    "changeFieldValue": [Function],
                    "changeFieldsValues": [Function],
                    "removeField": [Function],
                    "resetField": [Function],
                    "resetFields": [Function],
                    "setFieldDisabled": [Function],
                    "setFieldErrors": [Function],
                    "setFieldTouched": [Function],
                    "setFieldsDisabled": [Function],
                    "setFieldsErrors": [Function],
                    "setFieldsTouched": [Function],
                  },
                  "form": Object {
                    "fieldsCount": Object {
                      "test": 1,
                    },
                    "initialized": false,
                    "name": "form",
                    "path": Array [
                      "form",
                    ],
                    "registerField": [Function],
                    "resetForm": [Function],
                    "unregisterField": [Function],
                    "updateForm": [Function],
                  },
                },
                "store": Object {
                  "dispatch": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                  Symbol(observable): [Function],
                },
              },
              "__reactInternalMemoizedUnmaskedChildContext": Object {
                "store": Object {
                  "dispatch": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                  Symbol(observable): [Function],
                },
              },
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {
                "store": Object {
                  "dispatch": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                  Symbol(observable): [Function],
                },
              },
              "decreaseFieldCount": [Function],
              "fieldsCount": Object {
                "form": Object {
                  "test": 1,
                },
              },
              "fieldsStack": Object {
                "form": Object {
                  "test": Immutable.Map {
                    "value": "",
                    "errors": Immutable.List [],
                    "valid": true,
                    "touched": false,
                    "changed": false,
                    "disabled": false,
                  },
                },
              },
              "fieldsValidateStack": Object {
                "form": Object {
                  "test": Immutable.List [],
                },
              },
              "formName": "form",
              "handleSubmit": [Function],
              "increaseFieldCount": [Function],
              "initialized": true,
              "path": Array [
                "form",
              ],
              "props": Object {
                "children": <ForwardRef
                  component="input"
                  name="test"
                />,
                "onSubmit": [Function],
                "onSubmitFailed": [Function],
                "path": "form",
              },
              "refs": Object {},
              "registerField": [Function],
              "state": null,
              "unregisterField": [Function],
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "index": 0,
          "key": null,
          "lastEffect": FiberNode {
            "_debugID": 51,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 52,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 53,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 54,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 55,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "disabled": false,
                      "onBlur": [Function],
                      "onChange": [Function],
                      "onFocus": [Function],
                      "value": "",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "disabled": false,
                      "onBlur": [Function],
                      "onChange": [Function],
                      "onFocus": [Function],
                      "value": "",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": <input
                      value=""
                    />,
                    "tag": 7,
                    "treeBaseDuration": 0,
                    "type": "input",
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "component": "input",
                    "disabled": false,
                    "innerRef": null,
                    "name": "test",
                    "value": "",
                  },
                  "memoizedState": Object {
                    "field": Immutable.Map {
                      "value": "",
                      "errors": Immutable.List [],
                      "valid": true,
                      "touched": false,
                      "changed": false,
                      "disabled": false,
                    },
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "component": "input",
                    "disabled": false,
                    "innerRef": null,
                    "name": "test",
                    "value": "",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Field {
                    "__reactInternalMemoizedMaskedChildContext": Object {
                      "_reformRedux": Object {
                        "field": Object {
                          "changeFieldValue": [Function],
                          "changeFieldsValues": [Function],
                          "removeField": [Function],
                          "resetField": [Function],
                          "resetFields": [Function],
                          "setFieldDisabled": [Function],
                          "setFieldErrors": [Function],
                          "setFieldTouched": [Function],
                          "setFieldsDisabled": [Function],
                          "setFieldsErrors": [Function],
                          "setFieldsTouched": [Function],
                        },
                        "form": Object {
                          "fieldsCount": Object {
                            "test": 1,
                          },
                          "initialized": false,
                          "name": "form",
                          "path": Array [
                            "form",
                          ],
                          "registerField": [Function],
                          "resetForm": [Function],
                          "unregisterField": [Function],
                          "updateForm": [Function],
                        },
                      },
                      "store": Object {
                        "dispatch": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                        Symbol(observable): [Function],
                      },
                    },
                    "__reactInternalMemoizedUnmaskedChildContext": Object {
                      "_reformRedux": Object {
                        "field": Object {
                          "changeFieldValue": [Function],
                          "changeFieldsValues": [Function],
                          "removeField": [Function],
                          "resetField": [Function],
                          "resetFields": [Function],
                          "setFieldDisabled": [Function],
                          "setFieldErrors": [Function],
                          "setFieldTouched": [Function],
                          "setFieldsDisabled": [Function],
                          "setFieldsErrors": [Function],
                          "setFieldsTouched": [Function],
                        },
                        "form": Object {
                          "fieldsCount": Object {
                            "test": 1,
                          },
                          "initialized": false,
                          "name": "form",
                          "path": Array [
                            "form",
                          ],
                          "registerField": [Function],
                          "resetForm": [Function],
                          "unregisterField": [Function],
                          "updateForm": [Function],
                        },
                      },
                      "store": Object {
                        "dispatch": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                        Symbol(observable): [Function],
                      },
                    },
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "changeFieldValue": [Function],
                    "changeFieldValueHandler": [Function],
                    "context": Object {
                      "_reformRedux": Object {
                        "field": Object {
                          "changeFieldValue": [Function],
                          "changeFieldsValues": [Function],
                          "removeField": [Function],
                          "resetField": [Function],
                          "resetFields": [Function],
                          "setFieldDisabled": [Function],
                          "setFieldErrors": [Function],
                          "setFieldTouched": [Function],
                          "setFieldsDisabled": [Function],
                          "setFieldsErrors": [Function],
                          "setFieldsTouched": [Function],
                        },
                        "form": Object {
                          "fieldsCount": Object {
                            "test": 1,
                          },
                          "initialized": false,
                          "name": "form",
                          "path": Array [
                            "form",
                          ],
                          "registerField": [Function],
                          "resetForm": [Function],
                          "unregisterField": [Function],
                          "updateForm": [Function],
                        },
                      },
                      "store": Object {
                        "dispatch": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                        Symbol(observable): [Function],
                      },
                    },
                    "getFieldValue": [Function],
                    "initialFieldData": Immutable.Map {
                      "value": "",
                      "errors": Immutable.List [],
                      "valid": true,
                      "touched": false,
                      "changed": false,
                      "disabled": false,
                    },
                    "isCheckbox": [Function],
                    "isRadio": [Function],
                    "isRadioOrCheckbox": [Function],
                    "onBlurFieldHandler": [Function],
                    "onFocusFieldHandler": [Function],
                    "props": Object {
                      "component": "input",
                      "disabled": false,
                      "innerRef": null,
                      "name": "test",
                      "value": "",
                    },
                    "refs": Object {},
                    "registerField": [Function],
                    "setFieldErrors": [Function],
                    "state": Object {
                      "field": Immutable.Map {
                        "value": "",
                        "errors": Immutable.List [],
                        "valid": true,
                        "touched": false,
                        "changed": false,
                        "disabled": false,
                      },
                    },
                    "unsubscribeFromStore": [Function],
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "effectTag": 0,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "component": "input",
                  "name": "test",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "component": "input",
                  "name": "test",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 13,
                "treeBaseDuration": 0,
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "render": [Function],
                },
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "effectTag": 0,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": <ForwardRef
                  component="input"
                  name="test"
                />,
                "onSubmit": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <ForwardRef
                  component="input"
                  name="test"
                />,
                "onSubmit": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": <form>
                <input
                  value=""
                />
              </form>,
              "tag": 7,
              "treeBaseDuration": 0,
              "type": "form",
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "effectTag": 5,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": <ForwardRef
                component="input"
                name="test"
              />,
              "onSubmit": [Function],
              "onSubmitFailed": [Function],
              "path": "form",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": <ForwardRef
                component="input"
                name="test"
              />,
              "onSubmit": [Function],
              "onSubmitFailed": [Function],
              "path": "form",
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Form {
              "__reactInternalMemoizedMaskedChildContext": Object {
                "store": Object {
                  "dispatch": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                  Symbol(observable): [Function],
                },
              },
              "__reactInternalMemoizedMergedChildContext": Object {
                "_reformRedux": Object {
                  "field": Object {
                    "changeFieldValue": [Function],
                    "changeFieldsValues": [Function],
                    "removeField": [Function],
                    "resetField": [Function],
                    "resetFields": [Function],
                    "setFieldDisabled": [Function],
                    "setFieldErrors": [Function],
                    "setFieldTouched": [Function],
                    "setFieldsDisabled": [Function],
                    "setFieldsErrors": [Function],
                    "setFieldsTouched": [Function],
                  },
                  "form": Object {
                    "fieldsCount": Object {
                      "test": 1,
                    },
                    "initialized": false,
                    "name": "form",
                    "path": Array [
                      "form",
                    ],
                    "registerField": [Function],
                    "resetForm": [Function],
                    "unregisterField": [Function],
                    "updateForm": [Function],
                  },
                },
                "store": Object {
                  "dispatch": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                  Symbol(observable): [Function],
                },
              },
              "__reactInternalMemoizedUnmaskedChildContext": Object {
                "store": Object {
                  "dispatch": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                  Symbol(observable): [Function],
                },
              },
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {
                "store": Object {
                  "dispatch": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                  Symbol(observable): [Function],
                },
              },
              "decreaseFieldCount": [Function],
              "fieldsCount": Object {
                "form": Object {
                  "test": 1,
                },
              },
              "fieldsStack": Object {
                "form": Object {
                  "test": Immutable.Map {
                    "value": "",
                    "errors": Immutable.List [],
                    "valid": true,
                    "touched": false,
                    "changed": false,
                    "disabled": false,
                  },
                },
              },
              "fieldsValidateStack": Object {
                "form": Object {
                  "test": Immutable.List [],
                },
              },
              "formName": "form",
              "handleSubmit": [Function],
              "increaseFieldCount": [Function],
              "initialized": true,
              "path": Array [
                "form",
              ],
              "props": Object {
                "children": <ForwardRef
                  component="input"
                  name="test"
                />,
                "onSubmit": [Function],
                "onSubmitFailed": [Function],
                "path": "form",
              },
              "refs": Object {},
              "registerField": [Function],
              "state": null,
              "unregisterField": [Function],
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "children": <ForwardRef
                component="input"
                name="test"
              />,
              "immutable": true,
            },
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {
              "children": <ForwardRef
                component="input"
                name="test"
              />,
              "immutable": true,
            },
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "children": <ForwardRef
                component="input"
                name="test"
              />,
              "immutable": true,
            },
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 47,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childExpirationTime": 0,
              "effectTag": 0,
              "expirationTime": 1,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <form>
                    <input
                      value=""
                    />
                  </form>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "timeoutHandle": -1,
              },
              "tag": 5,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <ForwardRef
                            component="input"
                            name="test"
                          />,
                          "immutable": true,
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <ForwardRef
                            component="input"
                            name="test"
                          />,
                          "immutable": true,
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "childExpirationTime": 0,
            "effectTag": 32,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": FiberNode {
              "_debugID": 51,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 52,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 53,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 54,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 55,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "disabled": false,
                        "onBlur": [Function],
                        "onChange": [Function],
                        "onFocus": [Function],
                        "value": "",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "disabled": false,
                        "onBlur": [Function],
                        "onChange": [Function],
                        "onFocus": [Function],
                        "value": "",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": <input
                        value=""
                      />,
                      "tag": 7,
                      "treeBaseDuration": 0,
                      "type": "input",
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "component": "input",
                      "disabled": false,
                      "innerRef": null,
                      "name": "test",
                      "value": "",
                    },
                    "memoizedState": Object {
                      "field": Immutable.Map {
                        "value": "",
                        "errors": Immutable.List [],
                        "valid": true,
                        "touched": false,
                        "changed": false,
                        "disabled": false,
                      },
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "component": "input",
                      "disabled": false,
                      "innerRef": null,
                      "name": "test",
                      "value": "",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": Field {
                      "__reactInternalMemoizedMaskedChildContext": Object {
                        "_reformRedux": Object {
                          "field": Object {
                            "changeFieldValue": [Function],
                            "changeFieldsValues": [Function],
                            "removeField": [Function],
                            "resetField": [Function],
                            "resetFields": [Function],
                            "setFieldDisabled": [Function],
                            "setFieldErrors": [Function],
                            "setFieldTouched": [Function],
                            "setFieldsDisabled": [Function],
                            "setFieldsErrors": [Function],
                            "setFieldsTouched": [Function],
                          },
                          "form": Object {
                            "fieldsCount": Object {
                              "test": 1,
                            },
                            "initialized": false,
                            "name": "form",
                            "path": Array [
                              "form",
                            ],
                            "registerField": [Function],
                            "resetForm": [Function],
                            "unregisterField": [Function],
                            "updateForm": [Function],
                          },
                        },
                        "store": Object {
                          "dispatch": [Function],
                          "getState": [Function],
                          "replaceReducer": [Function],
                          "subscribe": [Function],
                          Symbol(observable): [Function],
                        },
                      },
                      "__reactInternalMemoizedUnmaskedChildContext": Object {
                        "_reformRedux": Object {
                          "field": Object {
                            "changeFieldValue": [Function],
                            "changeFieldsValues": [Function],
                            "removeField": [Function],
                            "resetField": [Function],
                            "resetFields": [Function],
                            "setFieldDisabled": [Function],
                            "setFieldErrors": [Function],
                            "setFieldTouched": [Function],
                            "setFieldsDisabled": [Function],
                            "setFieldsErrors": [Function],
                            "setFieldsTouched": [Function],
                          },
                          "form": Object {
                            "fieldsCount": Object {
                              "test": 1,
                            },
                            "initialized": false,
                            "name": "form",
                            "path": Array [
                              "form",
                            ],
                            "registerField": [Function],
                            "resetForm": [Function],
                            "unregisterField": [Function],
                            "updateForm": [Function],
                          },
                        },
                        "store": Object {
                          "dispatch": [Function],
                          "getState": [Function],
                          "replaceReducer": [Function],
                          "subscribe": [Function],
                          Symbol(observable): [Function],
                        },
                      },
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "changeFieldValue": [Function],
                      "changeFieldValueHandler": [Function],
                      "context": Object {
                        "_reformRedux": Object {
                          "field": Object {
                            "changeFieldValue": [Function],
                            "changeFieldsValues": [Function],
                            "removeField": [Function],
                            "resetField": [Function],
                            "resetFields": [Function],
                            "setFieldDisabled": [Function],
                            "setFieldErrors": [Function],
                            "setFieldTouched": [Function],
                            "setFieldsDisabled": [Function],
                            "setFieldsErrors": [Function],
                            "setFieldsTouched": [Function],
                          },
                          "form": Object {
                            "fieldsCount": Object {
                              "test": 1,
                            },
                            "initialized": false,
                            "name": "form",
                            "path": Array [
                              "form",
                            ],
                            "registerField": [Function],
                            "resetForm": [Function],
                            "unregisterField": [Function],
                            "updateForm": [Function],
                          },
                        },
                        "store": Object {
                          "dispatch": [Function],
                          "getState": [Function],
                          "replaceReducer": [Function],
                          "subscribe": [Function],
                          Symbol(observable): [Function],
                        },
                      },
                      "getFieldValue": [Function],
                      "initialFieldData": Immutable.Map {
                        "value": "",
                        "errors": Immutable.List [],
                        "valid": true,
                        "touched": false,
                        "changed": false,
                        "disabled": false,
                      },
                      "isCheckbox": [Function],
                      "isRadio": [Function],
                      "isRadioOrCheckbox": [Function],
                      "onBlurFieldHandler": [Function],
                      "onFocusFieldHandler": [Function],
                      "props": Object {
                        "component": "input",
                        "disabled": false,
                        "innerRef": null,
                        "name": "test",
                        "value": "",
                      },
                      "refs": Object {},
                      "registerField": [Function],
                      "setFieldErrors": [Function],
                      "state": Object {
                        "field": Immutable.Map {
                          "value": "",
                          "errors": Immutable.List [],
                          "valid": true,
                          "touched": false,
                          "changed": false,
                          "disabled": false,
                        },
                      },
                      "unsubscribeFromStore": [Function],
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "component": "input",
                    "name": "test",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "component": "input",
                    "name": "test",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 13,
                  "treeBaseDuration": 0,
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "render": [Function],
                  },
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "effectTag": 0,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": <ForwardRef
                    component="input"
                    name="test"
                  />,
                  "onSubmit": [Function],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <ForwardRef
                    component="input"
                    name="test"
                  />,
                  "onSubmit": [Function],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": <form>
                  <input
                    value=""
                  />
                </form>,
                "tag": 7,
                "treeBaseDuration": 0,
                "type": "form",
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "effectTag": 5,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": <ForwardRef
                  component="input"
                  name="test"
                />,
                "onSubmit": [Function],
                "onSubmitFailed": [Function],
                "path": "form",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <ForwardRef
                  component="input"
                  name="test"
                />,
                "onSubmit": [Function],
                "onSubmitFailed": [Function],
                "path": "form",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Form {
                "__reactInternalMemoizedMaskedChildContext": Object {
                  "store": Object {
                    "dispatch": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                    Symbol(observable): [Function],
                  },
                },
                "__reactInternalMemoizedMergedChildContext": Object {
                  "_reformRedux": Object {
                    "field": Object {
                      "changeFieldValue": [Function],
                      "changeFieldsValues": [Function],
                      "removeField": [Function],
                      "resetField": [Function],
                      "resetFields": [Function],
                      "setFieldDisabled": [Function],
                      "setFieldErrors": [Function],
                      "setFieldTouched": [Function],
                      "setFieldsDisabled": [Function],
                      "setFieldsErrors": [Function],
                      "setFieldsTouched": [Function],
                    },
                    "form": Object {
                      "fieldsCount": Object {
                        "test": 1,
                      },
                      "initialized": false,
                      "name": "form",
                      "path": Array [
                        "form",
                      ],
                      "registerField": [Function],
                      "resetForm": [Function],
                      "unregisterField": [Function],
                      "updateForm": [Function],
                    },
                  },
                  "store": Object {
                    "dispatch": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                    Symbol(observable): [Function],
                  },
                },
                "__reactInternalMemoizedUnmaskedChildContext": Object {
                  "store": Object {
                    "dispatch": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                    Symbol(observable): [Function],
                  },
                },
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {
                  "store": Object {
                    "dispatch": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                    Symbol(observable): [Function],
                  },
                },
                "decreaseFieldCount": [Function],
                "fieldsCount": Object {
                  "form": Object {
                    "test": 1,
                  },
                },
                "fieldsStack": Object {
                  "form": Object {
                    "test": Immutable.Map {
                      "value": "",
                      "errors": Immutable.List [],
                      "valid": true,
                      "touched": false,
                      "changed": false,
                      "disabled": false,
                    },
                  },
                },
                "fieldsValidateStack": Object {
                  "form": Object {
                    "test": Immutable.List [],
                  },
                },
                "formName": "form",
                "handleSubmit": [Function],
                "increaseFieldCount": [Function],
                "initialized": true,
                "path": Array [
                  "form",
                ],
                "props": Object {
                  "children": <ForwardRef
                    component="input"
                    name="test"
                  />,
                  "onSubmit": [Function],
                  "onSubmitFailed": [Function],
                  "path": "form",
                },
                "refs": Object {},
                "registerField": [Function],
                "state": null,
                "unregisterField": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 2,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                  Object {
                    "children": <ForwardRef
                      component="input"
                      name="test"
                    />,
                    "immutable": true,
                  }
                }
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <form>
                  <input
                    value=""
                  />
                </form>
              </div>,
              "context": Object {},
              "current": [Circular],
              "didError": false,
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "expirationTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "interactionThreadID": 12,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "memoizedInteractions": Set {},
              "nextExpirationTimeToWorkOn": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "timeoutHandle": -1,
            },
            "tag": 5,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "children": <ForwardRef
                        component="input"
                        name="test"
                      />,
                      "immutable": true,
                    }
                  }
                />,
              },
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "children": <ForwardRef
                  component="input"
                  name="test"
                />,
                "immutable": true,
              },
            },
            "refs": Object {},
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "children": <ForwardRef
                  component="input"
                  name="test"
                />,
                "immutable": true,
              },
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 2,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "_debugSource": null,
        "actualDuration": 0,
        "actualStartTime": -1,
        "alternate": null,
        "child": FiberNode {
          "_debugID": 51,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 52,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 53,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 54,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 55,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "disabled": false,
                    "onBlur": [Function],
                    "onChange": [Function],
                    "onFocus": [Function],
                    "value": "",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "disabled": false,
                    "onBlur": [Function],
                    "onChange": [Function],
                    "onFocus": [Function],
                    "value": "",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": <input
                    value=""
                  />,
                  "tag": 7,
                  "treeBaseDuration": 0,
                  "type": "input",
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "effectTag": 1,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "component": "input",
                  "disabled": false,
                  "innerRef": null,
                  "name": "test",
                  "value": "",
                },
                "memoizedState": Object {
                  "field": Immutable.Map {
                    "value": "",
                    "errors": Immutable.List [],
                    "valid": true,
                    "touched": false,
                    "changed": false,
                    "disabled": false,
                  },
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "component": "input",
                  "disabled": false,
                  "innerRef": null,
                  "name": "test",
                  "value": "",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Field {
                  "__reactInternalMemoizedMaskedChildContext": Object {
                    "_reformRedux": Object {
                      "field": Object {
                        "changeFieldValue": [Function],
                        "changeFieldsValues": [Function],
                        "removeField": [Function],
                        "resetField": [Function],
                        "resetFields": [Function],
                        "setFieldDisabled": [Function],
                        "setFieldErrors": [Function],
                        "setFieldTouched": [Function],
                        "setFieldsDisabled": [Function],
                        "setFieldsErrors": [Function],
                        "setFieldsTouched": [Function],
                      },
                      "form": Object {
                        "fieldsCount": Object {
                          "test": 1,
                        },
                        "initialized": false,
                        "name": "form",
                        "path": Array [
                          "form",
                        ],
                        "registerField": [Function],
                        "resetForm": [Function],
                        "unregisterField": [Function],
                        "updateForm": [Function],
                      },
                    },
                    "store": Object {
                      "dispatch": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                      Symbol(observable): [Function],
                    },
                  },
                  "__reactInternalMemoizedUnmaskedChildContext": Object {
                    "_reformRedux": Object {
                      "field": Object {
                        "changeFieldValue": [Function],
                        "changeFieldsValues": [Function],
                        "removeField": [Function],
                        "resetField": [Function],
                        "resetFields": [Function],
                        "setFieldDisabled": [Function],
                        "setFieldErrors": [Function],
                        "setFieldTouched": [Function],
                        "setFieldsDisabled": [Function],
                        "setFieldsErrors": [Function],
                        "setFieldsTouched": [Function],
                      },
                      "form": Object {
                        "fieldsCount": Object {
                          "test": 1,
                        },
                        "initialized": false,
                        "name": "form",
                        "path": Array [
                          "form",
                        ],
                        "registerField": [Function],
                        "resetForm": [Function],
                        "unregisterField": [Function],
                        "updateForm": [Function],
                      },
                    },
                    "store": Object {
                      "dispatch": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                      Symbol(observable): [Function],
                    },
                  },
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "changeFieldValue": [Function],
                  "changeFieldValueHandler": [Function],
                  "context": Object {
                    "_reformRedux": Object {
                      "field": Object {
                        "changeFieldValue": [Function],
                        "changeFieldsValues": [Function],
                        "removeField": [Function],
                        "resetField": [Function],
                        "resetFields": [Function],
                        "setFieldDisabled": [Function],
                        "setFieldErrors": [Function],
                        "setFieldTouched": [Function],
                        "setFieldsDisabled": [Function],
                        "setFieldsErrors": [Function],
                        "setFieldsTouched": [Function],
                      },
                      "form": Object {
                        "fieldsCount": Object {
                          "test": 1,
                        },
                        "initialized": false,
                        "name": "form",
                        "path": Array [
                          "form",
                        ],
                        "registerField": [Function],
                        "resetForm": [Function],
                        "unregisterField": [Function],
                        "updateForm": [Function],
                      },
                    },
                    "store": Object {
                      "dispatch": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                      Symbol(observable): [Function],
                    },
                  },
                  "getFieldValue": [Function],
                  "initialFieldData": Immutable.Map {
                    "value": "",
                    "errors": Immutable.List [],
                    "valid": true,
                    "touched": false,
                    "changed": false,
                    "disabled": false,
                  },
                  "isCheckbox": [Function],
                  "isRadio": [Function],
                  "isRadioOrCheckbox": [Function],
                  "onBlurFieldHandler": [Function],
                  "onFocusFieldHandler": [Function],
                  "props": Object {
                    "component": "input",
                    "disabled": false,
                    "innerRef": null,
                    "name": "test",
                    "value": "",
                  },
                  "refs": Object {},
                  "registerField": [Function],
                  "setFieldErrors": [Function],
                  "state": Object {
                    "field": Immutable.Map {
                      "value": "",
                      "errors": Immutable.List [],
                      "valid": true,
                      "touched": false,
                      "changed": false,
                      "disabled": false,
                    },
                  },
                  "unsubscribeFromStore": [Function],
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 2,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "effectTag": 0,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "component": "input",
                "name": "test",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "component": "input",
                "name": "test",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 13,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "render": [Function],
              },
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "effectTag": 0,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": <ForwardRef
                component="input"
                name="test"
              />,
              "onSubmit": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": <ForwardRef
                component="input"
                name="test"
              />,
              "onSubmit": [Function],
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": <form>
              <input
                value=""
              />
            </form>,
            "tag": 7,
            "treeBaseDuration": 0,
            "type": "form",
            "updateQueue": null,
          },
          "childExpirationTime": 0,
          "effectTag": 5,
          "expirationTime": 0,
          "firstContextDependency": null,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "children": <ForwardRef
              component="input"
              name="test"
            />,
            "onSubmit": [Function],
            "onSubmitFailed": [Function],
            "path": "form",
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": <ForwardRef
              component="input"
              name="test"
            />,
            "onSubmit": [Function],
            "onSubmitFailed": [Function],
            "path": "form",
          },
          "ref": null,
          "return": [Circular],
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": Form {
            "__reactInternalMemoizedMaskedChildContext": Object {
              "store": Object {
                "dispatch": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
                Symbol(observable): [Function],
              },
            },
            "__reactInternalMemoizedMergedChildContext": Object {
              "_reformRedux": Object {
                "field": Object {
                  "changeFieldValue": [Function],
                  "changeFieldsValues": [Function],
                  "removeField": [Function],
                  "resetField": [Function],
                  "resetFields": [Function],
                  "setFieldDisabled": [Function],
                  "setFieldErrors": [Function],
                  "setFieldTouched": [Function],
                  "setFieldsDisabled": [Function],
                  "setFieldsErrors": [Function],
                  "setFieldsTouched": [Function],
                },
                "form": Object {
                  "fieldsCount": Object {
                    "test": 1,
                  },
                  "initialized": false,
                  "name": "form",
                  "path": Array [
                    "form",
                  ],
                  "registerField": [Function],
                  "resetForm": [Function],
                  "unregisterField": [Function],
                  "updateForm": [Function],
                },
              },
              "store": Object {
                "dispatch": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
                Symbol(observable): [Function],
              },
            },
            "__reactInternalMemoizedUnmaskedChildContext": Object {
              "store": Object {
                "dispatch": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
                Symbol(observable): [Function],
              },
            },
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {
              "store": Object {
                "dispatch": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
                Symbol(observable): [Function],
              },
            },
            "decreaseFieldCount": [Function],
            "fieldsCount": Object {
              "form": Object {
                "test": 1,
              },
            },
            "fieldsStack": Object {
              "form": Object {
                "test": Immutable.Map {
                  "value": "",
                  "errors": Immutable.List [],
                  "valid": true,
                  "touched": false,
                  "changed": false,
                  "disabled": false,
                },
              },
            },
            "fieldsValidateStack": Object {
              "form": Object {
                "test": Immutable.List [],
              },
            },
            "formName": "form",
            "handleSubmit": [Function],
            "increaseFieldCount": [Function],
            "initialized": true,
            "path": Array [
              "form",
            ],
            "props": Object {
              "children": <ForwardRef
                component="input"
                name="test"
              />,
              "onSubmit": [Function],
              "onSubmitFailed": [Function],
              "path": "form",
            },
            "refs": Object {},
            "registerField": [Function],
            "state": null,
            "unregisterField": [Function],
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 2,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "childExpirationTime": 0,
        "effectTag": 1,
        "expirationTime": 0,
        "firstContextDependency": null,
        "firstEffect": FiberNode {
          "_debugID": 51,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 52,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 53,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 54,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 55,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "disabled": false,
                    "onBlur": [Function],
                    "onChange": [Function],
                    "onFocus": [Function],
                    "value": "",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "disabled": false,
                    "onBlur": [Function],
                    "onChange": [Function],
                    "onFocus": [Function],
                    "value": "",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": <input
                    value=""
                  />,
                  "tag": 7,
                  "treeBaseDuration": 0,
                  "type": "input",
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "effectTag": 1,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "component": "input",
                  "disabled": false,
                  "innerRef": null,
                  "name": "test",
                  "value": "",
                },
                "memoizedState": Object {
                  "field": Immutable.Map {
                    "value": "",
                    "errors": Immutable.List [],
                    "valid": true,
                    "touched": false,
                    "changed": false,
                    "disabled": false,
                  },
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "component": "input",
                  "disabled": false,
                  "innerRef": null,
                  "name": "test",
                  "value": "",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Field {
                  "__reactInternalMemoizedMaskedChildContext": Object {
                    "_reformRedux": Object {
                      "field": Object {
                        "changeFieldValue": [Function],
                        "changeFieldsValues": [Function],
                        "removeField": [Function],
                        "resetField": [Function],
                        "resetFields": [Function],
                        "setFieldDisabled": [Function],
                        "setFieldErrors": [Function],
                        "setFieldTouched": [Function],
                        "setFieldsDisabled": [Function],
                        "setFieldsErrors": [Function],
                        "setFieldsTouched": [Function],
                      },
                      "form": Object {
                        "fieldsCount": Object {
                          "test": 1,
                        },
                        "initialized": false,
                        "name": "form",
                        "path": Array [
                          "form",
                        ],
                        "registerField": [Function],
                        "resetForm": [Function],
                        "unregisterField": [Function],
                        "updateForm": [Function],
                      },
                    },
                    "store": Object {
                      "dispatch": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                      Symbol(observable): [Function],
                    },
                  },
                  "__reactInternalMemoizedUnmaskedChildContext": Object {
                    "_reformRedux": Object {
                      "field": Object {
                        "changeFieldValue": [Function],
                        "changeFieldsValues": [Function],
                        "removeField": [Function],
                        "resetField": [Function],
                        "resetFields": [Function],
                        "setFieldDisabled": [Function],
                        "setFieldErrors": [Function],
                        "setFieldTouched": [Function],
                        "setFieldsDisabled": [Function],
                        "setFieldsErrors": [Function],
                        "setFieldsTouched": [Function],
                      },
                      "form": Object {
                        "fieldsCount": Object {
                          "test": 1,
                        },
                        "initialized": false,
                        "name": "form",
                        "path": Array [
                          "form",
                        ],
                        "registerField": [Function],
                        "resetForm": [Function],
                        "unregisterField": [Function],
                        "updateForm": [Function],
                      },
                    },
                    "store": Object {
                      "dispatch": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                      Symbol(observable): [Function],
                    },
                  },
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "changeFieldValue": [Function],
                  "changeFieldValueHandler": [Function],
                  "context": Object {
                    "_reformRedux": Object {
                      "field": Object {
                        "changeFieldValue": [Function],
                        "changeFieldsValues": [Function],
                        "removeField": [Function],
                        "resetField": [Function],
                        "resetFields": [Function],
                        "setFieldDisabled": [Function],
                        "setFieldErrors": [Function],
                        "setFieldTouched": [Function],
                        "setFieldsDisabled": [Function],
                        "setFieldsErrors": [Function],
                        "setFieldsTouched": [Function],
                      },
                      "form": Object {
                        "fieldsCount": Object {
                          "test": 1,
                        },
                        "initialized": false,
                        "name": "form",
                        "path": Array [
                          "form",
                        ],
                        "registerField": [Function],
                        "resetForm": [Function],
                        "unregisterField": [Function],
                        "updateForm": [Function],
                      },
                    },
                    "store": Object {
                      "dispatch": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                      Symbol(observable): [Function],
                    },
                  },
                  "getFieldValue": [Function],
                  "initialFieldData": Immutable.Map {
                    "value": "",
                    "errors": Immutable.List [],
                    "valid": true,
                    "touched": false,
                    "changed": false,
                    "disabled": false,
                  },
                  "isCheckbox": [Function],
                  "isRadio": [Function],
                  "isRadioOrCheckbox": [Function],
                  "onBlurFieldHandler": [Function],
                  "onFocusFieldHandler": [Function],
                  "props": Object {
                    "component": "input",
                    "disabled": false,
                    "innerRef": null,
                    "name": "test",
                    "value": "",
                  },
                  "refs": Object {},
                  "registerField": [Function],
                  "setFieldErrors": [Function],
                  "state": Object {
                    "field": Immutable.Map {
                      "value": "",
                      "errors": Immutable.List [],
                      "valid": true,
                      "touched": false,
                      "changed": false,
                      "disabled": false,
                    },
                  },
                  "unsubscribeFromStore": [Function],
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 2,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "effectTag": 0,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "component": "input",
                "name": "test",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "component": "input",
                "name": "test",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 13,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "render": [Function],
              },
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "effectTag": 0,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": <ForwardRef
                component="input"
                name="test"
              />,
              "onSubmit": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": <ForwardRef
                component="input"
                name="test"
              />,
              "onSubmit": [Function],
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": <form>
              <input
                value=""
              />
            </form>,
            "tag": 7,
            "treeBaseDuration": 0,
            "type": "form",
            "updateQueue": null,
          },
          "childExpirationTime": 0,
          "effectTag": 5,
          "expirationTime": 0,
          "firstContextDependency": null,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "children": <ForwardRef
              component="input"
              name="test"
            />,
            "onSubmit": [Function],
            "onSubmitFailed": [Function],
            "path": "form",
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": <ForwardRef
              component="input"
              name="test"
            />,
            "onSubmit": [Function],
            "onSubmitFailed": [Function],
            "path": "form",
          },
          "ref": null,
          "return": [Circular],
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": Form {
            "__reactInternalMemoizedMaskedChildContext": Object {
              "store": Object {
                "dispatch": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
                Symbol(observable): [Function],
              },
            },
            "__reactInternalMemoizedMergedChildContext": Object {
              "_reformRedux": Object {
                "field": Object {
                  "changeFieldValue": [Function],
                  "changeFieldsValues": [Function],
                  "removeField": [Function],
                  "resetField": [Function],
                  "resetFields": [Function],
                  "setFieldDisabled": [Function],
                  "setFieldErrors": [Function],
                  "setFieldTouched": [Function],
                  "setFieldsDisabled": [Function],
                  "setFieldsErrors": [Function],
                  "setFieldsTouched": [Function],
                },
                "form": Object {
                  "fieldsCount": Object {
                    "test": 1,
                  },
                  "initialized": false,
                  "name": "form",
                  "path": Array [
                    "form",
                  ],
                  "registerField": [Function],
                  "resetForm": [Function],
                  "unregisterField": [Function],
                  "updateForm": [Function],
                },
              },
              "store": Object {
                "dispatch": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
                Symbol(observable): [Function],
              },
            },
            "__reactInternalMemoizedUnmaskedChildContext": Object {
              "store": Object {
                "dispatch": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
                Symbol(observable): [Function],
              },
            },
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {
              "store": Object {
                "dispatch": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
                Symbol(observable): [Function],
              },
            },
            "decreaseFieldCount": [Function],
            "fieldsCount": Object {
              "form": Object {
                "test": 1,
              },
            },
            "fieldsStack": Object {
              "form": Object {
                "test": Immutable.Map {
                  "value": "",
                  "errors": Immutable.List [],
                  "valid": true,
                  "touched": false,
                  "changed": false,
                  "disabled": false,
                },
              },
            },
            "fieldsValidateStack": Object {
              "form": Object {
                "test": Immutable.List [],
              },
            },
            "formName": "form",
            "handleSubmit": [Function],
            "increaseFieldCount": [Function],
            "initialized": true,
            "path": Array [
              "form",
            ],
            "props": Object {
              "children": <ForwardRef
                component="input"
                name="test"
              />,
              "onSubmit": [Function],
              "onSubmitFailed": [Function],
              "path": "form",
            },
            "refs": Object {},
            "registerField": [Function],
            "state": null,
            "unregisterField": [Function],
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 2,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "index": 0,
        "key": null,
        "lastEffect": FiberNode {
          "_debugID": 51,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 52,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 53,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 54,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 55,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "disabled": false,
                    "onBlur": [Function],
                    "onChange": [Function],
                    "onFocus": [Function],
                    "value": "",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "disabled": false,
                    "onBlur": [Function],
                    "onChange": [Function],
                    "onFocus": [Function],
                    "value": "",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": <input
                    value=""
                  />,
                  "tag": 7,
                  "treeBaseDuration": 0,
                  "type": "input",
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "effectTag": 1,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "component": "input",
                  "disabled": false,
                  "innerRef": null,
                  "name": "test",
                  "value": "",
                },
                "memoizedState": Object {
                  "field": Immutable.Map {
                    "value": "",
                    "errors": Immutable.List [],
                    "valid": true,
                    "touched": false,
                    "changed": false,
                    "disabled": false,
                  },
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "component": "input",
                  "disabled": false,
                  "innerRef": null,
                  "name": "test",
                  "value": "",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Field {
                  "__reactInternalMemoizedMaskedChildContext": Object {
                    "_reformRedux": Object {
                      "field": Object {
                        "changeFieldValue": [Function],
                        "changeFieldsValues": [Function],
                        "removeField": [Function],
                        "resetField": [Function],
                        "resetFields": [Function],
                        "setFieldDisabled": [Function],
                        "setFieldErrors": [Function],
                        "setFieldTouched": [Function],
                        "setFieldsDisabled": [Function],
                        "setFieldsErrors": [Function],
                        "setFieldsTouched": [Function],
                      },
                      "form": Object {
                        "fieldsCount": Object {
                          "test": 1,
                        },
                        "initialized": false,
                        "name": "form",
                        "path": Array [
                          "form",
                        ],
                        "registerField": [Function],
                        "resetForm": [Function],
                        "unregisterField": [Function],
                        "updateForm": [Function],
                      },
                    },
                    "store": Object {
                      "dispatch": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                      Symbol(observable): [Function],
                    },
                  },
                  "__reactInternalMemoizedUnmaskedChildContext": Object {
                    "_reformRedux": Object {
                      "field": Object {
                        "changeFieldValue": [Function],
                        "changeFieldsValues": [Function],
                        "removeField": [Function],
                        "resetField": [Function],
                        "resetFields": [Function],
                        "setFieldDisabled": [Function],
                        "setFieldErrors": [Function],
                        "setFieldTouched": [Function],
                        "setFieldsDisabled": [Function],
                        "setFieldsErrors": [Function],
                        "setFieldsTouched": [Function],
                      },
                      "form": Object {
                        "fieldsCount": Object {
                          "test": 1,
                        },
                        "initialized": false,
                        "name": "form",
                        "path": Array [
                          "form",
                        ],
                        "registerField": [Function],
                        "resetForm": [Function],
                        "unregisterField": [Function],
                        "updateForm": [Function],
                      },
                    },
                    "store": Object {
                      "dispatch": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                      Symbol(observable): [Function],
                    },
                  },
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "changeFieldValue": [Function],
                  "changeFieldValueHandler": [Function],
                  "context": Object {
                    "_reformRedux": Object {
                      "field": Object {
                        "changeFieldValue": [Function],
                        "changeFieldsValues": [Function],
                        "removeField": [Function],
                        "resetField": [Function],
                        "resetFields": [Function],
                        "setFieldDisabled": [Function],
                        "setFieldErrors": [Function],
                        "setFieldTouched": [Function],
                        "setFieldsDisabled": [Function],
                        "setFieldsErrors": [Function],
                        "setFieldsTouched": [Function],
                      },
                      "form": Object {
                        "fieldsCount": Object {
                          "test": 1,
                        },
                        "initialized": false,
                        "name": "form",
                        "path": Array [
                          "form",
                        ],
                        "registerField": [Function],
                        "resetForm": [Function],
                        "unregisterField": [Function],
                        "updateForm": [Function],
                      },
                    },
                    "store": Object {
                      "dispatch": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                      Symbol(observable): [Function],
                    },
                  },
                  "getFieldValue": [Function],
                  "initialFieldData": Immutable.Map {
                    "value": "",
                    "errors": Immutable.List [],
                    "valid": true,
                    "touched": false,
                    "changed": false,
                    "disabled": false,
                  },
                  "isCheckbox": [Function],
                  "isRadio": [Function],
                  "isRadioOrCheckbox": [Function],
                  "onBlurFieldHandler": [Function],
                  "onFocusFieldHandler": [Function],
                  "props": Object {
                    "component": "input",
                    "disabled": false,
                    "innerRef": null,
                    "name": "test",
                    "value": "",
                  },
                  "refs": Object {},
                  "registerField": [Function],
                  "setFieldErrors": [Function],
                  "state": Object {
                    "field": Immutable.Map {
                      "value": "",
                      "errors": Immutable.List [],
                      "valid": true,
                      "touched": false,
                      "changed": false,
                      "disabled": false,
                    },
                  },
                  "unsubscribeFromStore": [Function],
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 2,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "effectTag": 0,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "component": "input",
                "name": "test",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "component": "input",
                "name": "test",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 13,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "render": [Function],
              },
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "effectTag": 0,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": <ForwardRef
                component="input"
                name="test"
              />,
              "onSubmit": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": <ForwardRef
                component="input"
                name="test"
              />,
              "onSubmit": [Function],
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": <form>
              <input
                value=""
              />
            </form>,
            "tag": 7,
            "treeBaseDuration": 0,
            "type": "form",
            "updateQueue": null,
          },
          "childExpirationTime": 0,
          "effectTag": 5,
          "expirationTime": 0,
          "firstContextDependency": null,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "children": <ForwardRef
              component="input"
              name="test"
            />,
            "onSubmit": [Function],
            "onSubmitFailed": [Function],
            "path": "form",
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": <ForwardRef
              component="input"
              name="test"
            />,
            "onSubmit": [Function],
            "onSubmitFailed": [Function],
            "path": "form",
          },
          "ref": null,
          "return": [Circular],
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": Form {
            "__reactInternalMemoizedMaskedChildContext": Object {
              "store": Object {
                "dispatch": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
                Symbol(observable): [Function],
              },
            },
            "__reactInternalMemoizedMergedChildContext": Object {
              "_reformRedux": Object {
                "field": Object {
                  "changeFieldValue": [Function],
                  "changeFieldsValues": [Function],
                  "removeField": [Function],
                  "resetField": [Function],
                  "resetFields": [Function],
                  "setFieldDisabled": [Function],
                  "setFieldErrors": [Function],
                  "setFieldTouched": [Function],
                  "setFieldsDisabled": [Function],
                  "setFieldsErrors": [Function],
                  "setFieldsTouched": [Function],
                },
                "form": Object {
                  "fieldsCount": Object {
                    "test": 1,
                  },
                  "initialized": false,
                  "name": "form",
                  "path": Array [
                    "form",
                  ],
                  "registerField": [Function],
                  "resetForm": [Function],
                  "unregisterField": [Function],
                  "updateForm": [Function],
                },
              },
              "store": Object {
                "dispatch": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
                Symbol(observable): [Function],
              },
            },
            "__reactInternalMemoizedUnmaskedChildContext": Object {
              "store": Object {
                "dispatch": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
                Symbol(observable): [Function],
              },
            },
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {
              "store": Object {
                "dispatch": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
                Symbol(observable): [Function],
              },
            },
            "decreaseFieldCount": [Function],
            "fieldsCount": Object {
              "form": Object {
                "test": 1,
              },
            },
            "fieldsStack": Object {
              "form": Object {
                "test": Immutable.Map {
                  "value": "",
                  "errors": Immutable.List [],
                  "valid": true,
                  "touched": false,
                  "changed": false,
                  "disabled": false,
                },
              },
            },
            "fieldsValidateStack": Object {
              "form": Object {
                "test": Immutable.List [],
              },
            },
            "formName": "form",
            "handleSubmit": [Function],
            "increaseFieldCount": [Function],
            "initialized": true,
            "path": Array [
              "form",
            ],
            "props": Object {
              "children": <ForwardRef
                component="input"
                name="test"
              />,
              "onSubmit": [Function],
              "onSubmitFailed": [Function],
              "path": "form",
            },
            "refs": Object {},
            "registerField": [Function],
            "state": null,
            "unregisterField": [Function],
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 2,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "memoizedProps": Object {
          "children": <ForwardRef
            component="input"
            name="test"
          />,
          "immutable": true,
        },
        "memoizedState": null,
        "mode": 0,
        "nextEffect": null,
        "pendingProps": Object {
          "children": <ForwardRef
            component="input"
            name="test"
          />,
          "immutable": true,
        },
        "ref": null,
        "return": FiberNode {
          "_debugID": 49,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "effectTag": 1,
          "expirationTime": 0,
          "firstContextDependency": null,
          "firstEffect": FiberNode {
            "_debugID": 51,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 52,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 53,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 54,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 55,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "disabled": false,
                      "onBlur": [Function],
                      "onChange": [Function],
                      "onFocus": [Function],
                      "value": "",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "disabled": false,
                      "onBlur": [Function],
                      "onChange": [Function],
                      "onFocus": [Function],
                      "value": "",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": <input
                      value=""
                    />,
                    "tag": 7,
                    "treeBaseDuration": 0,
                    "type": "input",
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "component": "input",
                    "disabled": false,
                    "innerRef": null,
                    "name": "test",
                    "value": "",
                  },
                  "memoizedState": Object {
                    "field": Immutable.Map {
                      "value": "",
                      "errors": Immutable.List [],
                      "valid": true,
                      "touched": false,
                      "changed": false,
                      "disabled": false,
                    },
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "component": "input",
                    "disabled": false,
                    "innerRef": null,
                    "name": "test",
                    "value": "",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Field {
                    "__reactInternalMemoizedMaskedChildContext": Object {
                      "_reformRedux": Object {
                        "field": Object {
                          "changeFieldValue": [Function],
                          "changeFieldsValues": [Function],
                          "removeField": [Function],
                          "resetField": [Function],
                          "resetFields": [Function],
                          "setFieldDisabled": [Function],
                          "setFieldErrors": [Function],
                          "setFieldTouched": [Function],
                          "setFieldsDisabled": [Function],
                          "setFieldsErrors": [Function],
                          "setFieldsTouched": [Function],
                        },
                        "form": Object {
                          "fieldsCount": Object {
                            "test": 1,
                          },
                          "initialized": false,
                          "name": "form",
                          "path": Array [
                            "form",
                          ],
                          "registerField": [Function],
                          "resetForm": [Function],
                          "unregisterField": [Function],
                          "updateForm": [Function],
                        },
                      },
                      "store": Object {
                        "dispatch": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                        Symbol(observable): [Function],
                      },
                    },
                    "__reactInternalMemoizedUnmaskedChildContext": Object {
                      "_reformRedux": Object {
                        "field": Object {
                          "changeFieldValue": [Function],
                          "changeFieldsValues": [Function],
                          "removeField": [Function],
                          "resetField": [Function],
                          "resetFields": [Function],
                          "setFieldDisabled": [Function],
                          "setFieldErrors": [Function],
                          "setFieldTouched": [Function],
                          "setFieldsDisabled": [Function],
                          "setFieldsErrors": [Function],
                          "setFieldsTouched": [Function],
                        },
                        "form": Object {
                          "fieldsCount": Object {
                            "test": 1,
                          },
                          "initialized": false,
                          "name": "form",
                          "path": Array [
                            "form",
                          ],
                          "registerField": [Function],
                          "resetForm": [Function],
                          "unregisterField": [Function],
                          "updateForm": [Function],
                        },
                      },
                      "store": Object {
                        "dispatch": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                        Symbol(observable): [Function],
                      },
                    },
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "changeFieldValue": [Function],
                    "changeFieldValueHandler": [Function],
                    "context": Object {
                      "_reformRedux": Object {
                        "field": Object {
                          "changeFieldValue": [Function],
                          "changeFieldsValues": [Function],
                          "removeField": [Function],
                          "resetField": [Function],
                          "resetFields": [Function],
                          "setFieldDisabled": [Function],
                          "setFieldErrors": [Function],
                          "setFieldTouched": [Function],
                          "setFieldsDisabled": [Function],
                          "setFieldsErrors": [Function],
                          "setFieldsTouched": [Function],
                        },
                        "form": Object {
                          "fieldsCount": Object {
                            "test": 1,
                          },
                          "initialized": false,
                          "name": "form",
                          "path": Array [
                            "form",
                          ],
                          "registerField": [Function],
                          "resetForm": [Function],
                          "unregisterField": [Function],
                          "updateForm": [Function],
                        },
                      },
                      "store": Object {
                        "dispatch": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                        Symbol(observable): [Function],
                      },
                    },
                    "getFieldValue": [Function],
                    "initialFieldData": Immutable.Map {
                      "value": "",
                      "errors": Immutable.List [],
                      "valid": true,
                      "touched": false,
                      "changed": false,
                      "disabled": false,
                    },
                    "isCheckbox": [Function],
                    "isRadio": [Function],
                    "isRadioOrCheckbox": [Function],
                    "onBlurFieldHandler": [Function],
                    "onFocusFieldHandler": [Function],
                    "props": Object {
                      "component": "input",
                      "disabled": false,
                      "innerRef": null,
                      "name": "test",
                      "value": "",
                    },
                    "refs": Object {},
                    "registerField": [Function],
                    "setFieldErrors": [Function],
                    "state": Object {
                      "field": Immutable.Map {
                        "value": "",
                        "errors": Immutable.List [],
                        "valid": true,
                        "touched": false,
                        "changed": false,
                        "disabled": false,
                      },
                    },
                    "unsubscribeFromStore": [Function],
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "effectTag": 0,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "component": "input",
                  "name": "test",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "component": "input",
                  "name": "test",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 13,
                "treeBaseDuration": 0,
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "render": [Function],
                },
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "effectTag": 0,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": <ForwardRef
                  component="input"
                  name="test"
                />,
                "onSubmit": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <ForwardRef
                  component="input"
                  name="test"
                />,
                "onSubmit": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": <form>
                <input
                  value=""
                />
              </form>,
              "tag": 7,
              "treeBaseDuration": 0,
              "type": "form",
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "effectTag": 5,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": <ForwardRef
                component="input"
                name="test"
              />,
              "onSubmit": [Function],
              "onSubmitFailed": [Function],
              "path": "form",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": <ForwardRef
                component="input"
                name="test"
              />,
              "onSubmit": [Function],
              "onSubmitFailed": [Function],
              "path": "form",
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Form {
              "__reactInternalMemoizedMaskedChildContext": Object {
                "store": Object {
                  "dispatch": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                  Symbol(observable): [Function],
                },
              },
              "__reactInternalMemoizedMergedChildContext": Object {
                "_reformRedux": Object {
                  "field": Object {
                    "changeFieldValue": [Function],
                    "changeFieldsValues": [Function],
                    "removeField": [Function],
                    "resetField": [Function],
                    "resetFields": [Function],
                    "setFieldDisabled": [Function],
                    "setFieldErrors": [Function],
                    "setFieldTouched": [Function],
                    "setFieldsDisabled": [Function],
                    "setFieldsErrors": [Function],
                    "setFieldsTouched": [Function],
                  },
                  "form": Object {
                    "fieldsCount": Object {
                      "test": 1,
                    },
                    "initialized": false,
                    "name": "form",
                    "path": Array [
                      "form",
                    ],
                    "registerField": [Function],
                    "resetForm": [Function],
                    "unregisterField": [Function],
                    "updateForm": [Function],
                  },
                },
                "store": Object {
                  "dispatch": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                  Symbol(observable): [Function],
                },
              },
              "__reactInternalMemoizedUnmaskedChildContext": Object {
                "store": Object {
                  "dispatch": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                  Symbol(observable): [Function],
                },
              },
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {
                "store": Object {
                  "dispatch": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                  Symbol(observable): [Function],
                },
              },
              "decreaseFieldCount": [Function],
              "fieldsCount": Object {
                "form": Object {
                  "test": 1,
                },
              },
              "fieldsStack": Object {
                "form": Object {
                  "test": Immutable.Map {
                    "value": "",
                    "errors": Immutable.List [],
                    "valid": true,
                    "touched": false,
                    "changed": false,
                    "disabled": false,
                  },
                },
              },
              "fieldsValidateStack": Object {
                "form": Object {
                  "test": Immutable.List [],
                },
              },
              "formName": "form",
              "handleSubmit": [Function],
              "increaseFieldCount": [Function],
              "initialized": true,
              "path": Array [
                "form",
              ],
              "props": Object {
                "children": <ForwardRef
                  component="input"
                  name="test"
                />,
                "onSubmit": [Function],
                "onSubmitFailed": [Function],
                "path": "form",
              },
              "refs": Object {},
              "registerField": [Function],
              "state": null,
              "unregisterField": [Function],
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "index": 0,
          "key": null,
          "lastEffect": FiberNode {
            "_debugID": 51,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 52,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 53,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 54,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 55,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "disabled": false,
                      "onBlur": [Function],
                      "onChange": [Function],
                      "onFocus": [Function],
                      "value": "",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "disabled": false,
                      "onBlur": [Function],
                      "onChange": [Function],
                      "onFocus": [Function],
                      "value": "",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": <input
                      value=""
                    />,
                    "tag": 7,
                    "treeBaseDuration": 0,
                    "type": "input",
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "component": "input",
                    "disabled": false,
                    "innerRef": null,
                    "name": "test",
                    "value": "",
                  },
                  "memoizedState": Object {
                    "field": Immutable.Map {
                      "value": "",
                      "errors": Immutable.List [],
                      "valid": true,
                      "touched": false,
                      "changed": false,
                      "disabled": false,
                    },
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "component": "input",
                    "disabled": false,
                    "innerRef": null,
                    "name": "test",
                    "value": "",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Field {
                    "__reactInternalMemoizedMaskedChildContext": Object {
                      "_reformRedux": Object {
                        "field": Object {
                          "changeFieldValue": [Function],
                          "changeFieldsValues": [Function],
                          "removeField": [Function],
                          "resetField": [Function],
                          "resetFields": [Function],
                          "setFieldDisabled": [Function],
                          "setFieldErrors": [Function],
                          "setFieldTouched": [Function],
                          "setFieldsDisabled": [Function],
                          "setFieldsErrors": [Function],
                          "setFieldsTouched": [Function],
                        },
                        "form": Object {
                          "fieldsCount": Object {
                            "test": 1,
                          },
                          "initialized": false,
                          "name": "form",
                          "path": Array [
                            "form",
                          ],
                          "registerField": [Function],
                          "resetForm": [Function],
                          "unregisterField": [Function],
                          "updateForm": [Function],
                        },
                      },
                      "store": Object {
                        "dispatch": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                        Symbol(observable): [Function],
                      },
                    },
                    "__reactInternalMemoizedUnmaskedChildContext": Object {
                      "_reformRedux": Object {
                        "field": Object {
                          "changeFieldValue": [Function],
                          "changeFieldsValues": [Function],
                          "removeField": [Function],
                          "resetField": [Function],
                          "resetFields": [Function],
                          "setFieldDisabled": [Function],
                          "setFieldErrors": [Function],
                          "setFieldTouched": [Function],
                          "setFieldsDisabled": [Function],
                          "setFieldsErrors": [Function],
                          "setFieldsTouched": [Function],
                        },
                        "form": Object {
                          "fieldsCount": Object {
                            "test": 1,
                          },
                          "initialized": false,
                          "name": "form",
                          "path": Array [
                            "form",
                          ],
                          "registerField": [Function],
                          "resetForm": [Function],
                          "unregisterField": [Function],
                          "updateForm": [Function],
                        },
                      },
                      "store": Object {
                        "dispatch": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                        Symbol(observable): [Function],
                      },
                    },
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "changeFieldValue": [Function],
                    "changeFieldValueHandler": [Function],
                    "context": Object {
                      "_reformRedux": Object {
                        "field": Object {
                          "changeFieldValue": [Function],
                          "changeFieldsValues": [Function],
                          "removeField": [Function],
                          "resetField": [Function],
                          "resetFields": [Function],
                          "setFieldDisabled": [Function],
                          "setFieldErrors": [Function],
                          "setFieldTouched": [Function],
                          "setFieldsDisabled": [Function],
                          "setFieldsErrors": [Function],
                          "setFieldsTouched": [Function],
                        },
                        "form": Object {
                          "fieldsCount": Object {
                            "test": 1,
                          },
                          "initialized": false,
                          "name": "form",
                          "path": Array [
                            "form",
                          ],
                          "registerField": [Function],
                          "resetForm": [Function],
                          "unregisterField": [Function],
                          "updateForm": [Function],
                        },
                      },
                      "store": Object {
                        "dispatch": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                        Symbol(observable): [Function],
                      },
                    },
                    "getFieldValue": [Function],
                    "initialFieldData": Immutable.Map {
                      "value": "",
                      "errors": Immutable.List [],
                      "valid": true,
                      "touched": false,
                      "changed": false,
                      "disabled": false,
                    },
                    "isCheckbox": [Function],
                    "isRadio": [Function],
                    "isRadioOrCheckbox": [Function],
                    "onBlurFieldHandler": [Function],
                    "onFocusFieldHandler": [Function],
                    "props": Object {
                      "component": "input",
                      "disabled": false,
                      "innerRef": null,
                      "name": "test",
                      "value": "",
                    },
                    "refs": Object {},
                    "registerField": [Function],
                    "setFieldErrors": [Function],
                    "state": Object {
                      "field": Immutable.Map {
                        "value": "",
                        "errors": Immutable.List [],
                        "valid": true,
                        "touched": false,
                        "changed": false,
                        "disabled": false,
                      },
                    },
                    "unsubscribeFromStore": [Function],
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "effectTag": 0,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "component": "input",
                  "name": "test",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "component": "input",
                  "name": "test",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 13,
                "treeBaseDuration": 0,
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "render": [Function],
                },
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "effectTag": 0,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": <ForwardRef
                  component="input"
                  name="test"
                />,
                "onSubmit": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <ForwardRef
                  component="input"
                  name="test"
                />,
                "onSubmit": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": <form>
                <input
                  value=""
                />
              </form>,
              "tag": 7,
              "treeBaseDuration": 0,
              "type": "form",
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "effectTag": 5,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": <ForwardRef
                component="input"
                name="test"
              />,
              "onSubmit": [Function],
              "onSubmitFailed": [Function],
              "path": "form",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": <ForwardRef
                component="input"
                name="test"
              />,
              "onSubmit": [Function],
              "onSubmitFailed": [Function],
              "path": "form",
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Form {
              "__reactInternalMemoizedMaskedChildContext": Object {
                "store": Object {
                  "dispatch": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                  Symbol(observable): [Function],
                },
              },
              "__reactInternalMemoizedMergedChildContext": Object {
                "_reformRedux": Object {
                  "field": Object {
                    "changeFieldValue": [Function],
                    "changeFieldsValues": [Function],
                    "removeField": [Function],
                    "resetField": [Function],
                    "resetFields": [Function],
                    "setFieldDisabled": [Function],
                    "setFieldErrors": [Function],
                    "setFieldTouched": [Function],
                    "setFieldsDisabled": [Function],
                    "setFieldsErrors": [Function],
                    "setFieldsTouched": [Function],
                  },
                  "form": Object {
                    "fieldsCount": Object {
                      "test": 1,
                    },
                    "initialized": false,
                    "name": "form",
                    "path": Array [
                      "form",
                    ],
                    "registerField": [Function],
                    "resetForm": [Function],
                    "unregisterField": [Function],
                    "updateForm": [Function],
                  },
                },
                "store": Object {
                  "dispatch": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                  Symbol(observable): [Function],
                },
              },
              "__reactInternalMemoizedUnmaskedChildContext": Object {
                "store": Object {
                  "dispatch": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                  Symbol(observable): [Function],
                },
              },
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {
                "store": Object {
                  "dispatch": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                  Symbol(observable): [Function],
                },
              },
              "decreaseFieldCount": [Function],
              "fieldsCount": Object {
                "form": Object {
                  "test": 1,
                },
              },
              "fieldsStack": Object {
                "form": Object {
                  "test": Immutable.Map {
                    "value": "",
                    "errors": Immutable.List [],
                    "valid": true,
                    "touched": false,
                    "changed": false,
                    "disabled": false,
                  },
                },
              },
              "fieldsValidateStack": Object {
                "form": Object {
                  "test": Immutable.List [],
                },
              },
              "formName": "form",
              "handleSubmit": [Function],
              "increaseFieldCount": [Function],
              "initialized": true,
              "path": Array [
                "form",
              ],
              "props": Object {
                "children": <ForwardRef
                  component="input"
                  name="test"
                />,
                "onSubmit": [Function],
                "onSubmitFailed": [Function],
                "path": "form",
              },
              "refs": Object {},
              "registerField": [Function],
              "state": null,
              "unregisterField": [Function],
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "children": <ForwardRef
                component="input"
                name="test"
              />,
              "immutable": true,
            },
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {
              "children": <ForwardRef
                component="input"
                name="test"
              />,
              "immutable": true,
            },
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "children": <ForwardRef
                component="input"
                name="test"
              />,
              "immutable": true,
            },
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 47,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childExpirationTime": 0,
              "effectTag": 0,
              "expirationTime": 1,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <form>
                    <input
                      value=""
                    />
                  </form>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "timeoutHandle": -1,
              },
              "tag": 5,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <ForwardRef
                            component="input"
                            name="test"
                          />,
                          "immutable": true,
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <ForwardRef
                            component="input"
                            name="test"
                          />,
                          "immutable": true,
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "childExpirationTime": 0,
            "effectTag": 32,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": FiberNode {
              "_debugID": 51,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 52,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 53,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 54,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 55,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "disabled": false,
                        "onBlur": [Function],
                        "onChange": [Function],
                        "onFocus": [Function],
                        "value": "",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "disabled": false,
                        "onBlur": [Function],
                        "onChange": [Function],
                        "onFocus": [Function],
                        "value": "",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": <input
                        value=""
                      />,
                      "tag": 7,
                      "treeBaseDuration": 0,
                      "type": "input",
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "component": "input",
                      "disabled": false,
                      "innerRef": null,
                      "name": "test",
                      "value": "",
                    },
                    "memoizedState": Object {
                      "field": Immutable.Map {
                        "value": "",
                        "errors": Immutable.List [],
                        "valid": true,
                        "touched": false,
                        "changed": false,
                        "disabled": false,
                      },
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "component": "input",
                      "disabled": false,
                      "innerRef": null,
                      "name": "test",
                      "value": "",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": Field {
                      "__reactInternalMemoizedMaskedChildContext": Object {
                        "_reformRedux": Object {
                          "field": Object {
                            "changeFieldValue": [Function],
                            "changeFieldsValues": [Function],
                            "removeField": [Function],
                            "resetField": [Function],
                            "resetFields": [Function],
                            "setFieldDisabled": [Function],
                            "setFieldErrors": [Function],
                            "setFieldTouched": [Function],
                            "setFieldsDisabled": [Function],
                            "setFieldsErrors": [Function],
                            "setFieldsTouched": [Function],
                          },
                          "form": Object {
                            "fieldsCount": Object {
                              "test": 1,
                            },
                            "initialized": false,
                            "name": "form",
                            "path": Array [
                              "form",
                            ],
                            "registerField": [Function],
                            "resetForm": [Function],
                            "unregisterField": [Function],
                            "updateForm": [Function],
                          },
                        },
                        "store": Object {
                          "dispatch": [Function],
                          "getState": [Function],
                          "replaceReducer": [Function],
                          "subscribe": [Function],
                          Symbol(observable): [Function],
                        },
                      },
                      "__reactInternalMemoizedUnmaskedChildContext": Object {
                        "_reformRedux": Object {
                          "field": Object {
                            "changeFieldValue": [Function],
                            "changeFieldsValues": [Function],
                            "removeField": [Function],
                            "resetField": [Function],
                            "resetFields": [Function],
                            "setFieldDisabled": [Function],
                            "setFieldErrors": [Function],
                            "setFieldTouched": [Function],
                            "setFieldsDisabled": [Function],
                            "setFieldsErrors": [Function],
                            "setFieldsTouched": [Function],
                          },
                          "form": Object {
                            "fieldsCount": Object {
                              "test": 1,
                            },
                            "initialized": false,
                            "name": "form",
                            "path": Array [
                              "form",
                            ],
                            "registerField": [Function],
                            "resetForm": [Function],
                            "unregisterField": [Function],
                            "updateForm": [Function],
                          },
                        },
                        "store": Object {
                          "dispatch": [Function],
                          "getState": [Function],
                          "replaceReducer": [Function],
                          "subscribe": [Function],
                          Symbol(observable): [Function],
                        },
                      },
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "changeFieldValue": [Function],
                      "changeFieldValueHandler": [Function],
                      "context": Object {
                        "_reformRedux": Object {
                          "field": Object {
                            "changeFieldValue": [Function],
                            "changeFieldsValues": [Function],
                            "removeField": [Function],
                            "resetField": [Function],
                            "resetFields": [Function],
                            "setFieldDisabled": [Function],
                            "setFieldErrors": [Function],
                            "setFieldTouched": [Function],
                            "setFieldsDisabled": [Function],
                            "setFieldsErrors": [Function],
                            "setFieldsTouched": [Function],
                          },
                          "form": Object {
                            "fieldsCount": Object {
                              "test": 1,
                            },
                            "initialized": false,
                            "name": "form",
                            "path": Array [
                              "form",
                            ],
                            "registerField": [Function],
                            "resetForm": [Function],
                            "unregisterField": [Function],
                            "updateForm": [Function],
                          },
                        },
                        "store": Object {
                          "dispatch": [Function],
                          "getState": [Function],
                          "replaceReducer": [Function],
                          "subscribe": [Function],
                          Symbol(observable): [Function],
                        },
                      },
                      "getFieldValue": [Function],
                      "initialFieldData": Immutable.Map {
                        "value": "",
                        "errors": Immutable.List [],
                        "valid": true,
                        "touched": false,
                        "changed": false,
                        "disabled": false,
                      },
                      "isCheckbox": [Function],
                      "isRadio": [Function],
                      "isRadioOrCheckbox": [Function],
                      "onBlurFieldHandler": [Function],
                      "onFocusFieldHandler": [Function],
                      "props": Object {
                        "component": "input",
                        "disabled": false,
                        "innerRef": null,
                        "name": "test",
                        "value": "",
                      },
                      "refs": Object {},
                      "registerField": [Function],
                      "setFieldErrors": [Function],
                      "state": Object {
                        "field": Immutable.Map {
                          "value": "",
                          "errors": Immutable.List [],
                          "valid": true,
                          "touched": false,
                          "changed": false,
                          "disabled": false,
                        },
                      },
                      "unsubscribeFromStore": [Function],
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "component": "input",
                    "name": "test",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "component": "input",
                    "name": "test",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 13,
                  "treeBaseDuration": 0,
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "render": [Function],
                  },
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "effectTag": 0,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": <ForwardRef
                    component="input"
                    name="test"
                  />,
                  "onSubmit": [Function],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <ForwardRef
                    component="input"
                    name="test"
                  />,
                  "onSubmit": [Function],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": <form>
                  <input
                    value=""
                  />
                </form>,
                "tag": 7,
                "treeBaseDuration": 0,
                "type": "form",
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "effectTag": 5,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": <ForwardRef
                  component="input"
                  name="test"
                />,
                "onSubmit": [Function],
                "onSubmitFailed": [Function],
                "path": "form",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <ForwardRef
                  component="input"
                  name="test"
                />,
                "onSubmit": [Function],
                "onSubmitFailed": [Function],
                "path": "form",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Form {
                "__reactInternalMemoizedMaskedChildContext": Object {
                  "store": Object {
                    "dispatch": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                    Symbol(observable): [Function],
                  },
                },
                "__reactInternalMemoizedMergedChildContext": Object {
                  "_reformRedux": Object {
                    "field": Object {
                      "changeFieldValue": [Function],
                      "changeFieldsValues": [Function],
                      "removeField": [Function],
                      "resetField": [Function],
                      "resetFields": [Function],
                      "setFieldDisabled": [Function],
                      "setFieldErrors": [Function],
                      "setFieldTouched": [Function],
                      "setFieldsDisabled": [Function],
                      "setFieldsErrors": [Function],
                      "setFieldsTouched": [Function],
                    },
                    "form": Object {
                      "fieldsCount": Object {
                        "test": 1,
                      },
                      "initialized": false,
                      "name": "form",
                      "path": Array [
                        "form",
                      ],
                      "registerField": [Function],
                      "resetForm": [Function],
                      "unregisterField": [Function],
                      "updateForm": [Function],
                    },
                  },
                  "store": Object {
                    "dispatch": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                    Symbol(observable): [Function],
                  },
                },
                "__reactInternalMemoizedUnmaskedChildContext": Object {
                  "store": Object {
                    "dispatch": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                    Symbol(observable): [Function],
                  },
                },
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {
                  "store": Object {
                    "dispatch": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                    Symbol(observable): [Function],
                  },
                },
                "decreaseFieldCount": [Function],
                "fieldsCount": Object {
                  "form": Object {
                    "test": 1,
                  },
                },
                "fieldsStack": Object {
                  "form": Object {
                    "test": Immutable.Map {
                      "value": "",
                      "errors": Immutable.List [],
                      "valid": true,
                      "touched": false,
                      "changed": false,
                      "disabled": false,
                    },
                  },
                },
                "fieldsValidateStack": Object {
                  "form": Object {
                    "test": Immutable.List [],
                  },
                },
                "formName": "form",
                "handleSubmit": [Function],
                "increaseFieldCount": [Function],
                "initialized": true,
                "path": Array [
                  "form",
                ],
                "props": Object {
                  "children": <ForwardRef
                    component="input"
                    name="test"
                  />,
                  "onSubmit": [Function],
                  "onSubmitFailed": [Function],
                  "path": "form",
                },
                "refs": Object {},
                "registerField": [Function],
                "state": null,
                "unregisterField": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 2,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                  Object {
                    "children": <ForwardRef
                      component="input"
                      name="test"
                    />,
                    "immutable": true,
                  }
                }
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <form>
                  <input
                    value=""
                  />
                </form>
              </div>,
              "context": Object {},
              "current": [Circular],
              "didError": false,
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "expirationTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "interactionThreadID": 12,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "memoizedInteractions": Set {},
              "nextExpirationTimeToWorkOn": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "timeoutHandle": -1,
            },
            "tag": 5,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "children": <ForwardRef
                        component="input"
                        name="test"
                      />,
                      "immutable": true,
                    }
                  }
                />,
              },
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "children": <ForwardRef
                  component="input"
                  name="test"
                />,
                "immutable": true,
              },
            },
            "refs": Object {},
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "children": <ForwardRef
                  component="input"
                  name="test"
                />,
                "immutable": true,
              },
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 2,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "selfBaseDuration": 0,
        "sibling": null,
        "stateNode": [Circular],
        "tag": 2,
        "treeBaseDuration": 0,
        "type": [Function],
        "updateQueue": null,
      },
      "_reactInternalInstance": Object {},
      "context": Object {},
      "props": Object {
        "children": <ForwardRef
          component="input"
          name="test"
        />,
        "immutable": true,
      },
      "refs": Object {},
      "state": null,
      "updater": Object {
        "enqueueForceUpdate": [Function],
        "enqueueReplaceState": [Function],
        "enqueueSetState": [Function],
        "isMounted": [Function],
      },
    },
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <ForwardRef
        component="input"
        name="test"
      />,
      "immutable": true,
    },
    "ref": null,
    "rendered": Object {
      "instance": Form {
        "__reactInternalMemoizedMaskedChildContext": Object {
          "store": Object {
            "dispatch": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
            Symbol(observable): [Function],
          },
        },
        "__reactInternalMemoizedMergedChildContext": Object {
          "_reformRedux": Object {
            "field": Object {
              "changeFieldValue": [Function],
              "changeFieldsValues": [Function],
              "removeField": [Function],
              "resetField": [Function],
              "resetFields": [Function],
              "setFieldDisabled": [Function],
              "setFieldErrors": [Function],
              "setFieldTouched": [Function],
              "setFieldsDisabled": [Function],
              "setFieldsErrors": [Function],
              "setFieldsTouched": [Function],
            },
            "form": Object {
              "fieldsCount": Object {
                "test": 1,
              },
              "initialized": false,
              "name": "form",
              "path": Array [
                "form",
              ],
              "registerField": [Function],
              "resetForm": [Function],
              "unregisterField": [Function],
              "updateForm": [Function],
            },
          },
          "store": Object {
            "dispatch": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
            Symbol(observable): [Function],
          },
        },
        "__reactInternalMemoizedUnmaskedChildContext": Object {
          "store": Object {
            "dispatch": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
            Symbol(observable): [Function],
          },
        },
        "_reactInternalFiber": FiberNode {
          "_debugID": 51,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": FiberNode {
            "_debugID": 50,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": FiberNode {
              "_debugID": 49,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "effectTag": 1,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "children": <ForwardRef
                    component="input"
                    name="test"
                  />,
                  "immutable": true,
                },
              },
              "memoizedState": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "children": <ForwardRef
                    component="input"
                    name="test"
                  />,
                  "immutable": true,
                },
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "children": <ForwardRef
                    component="input"
                    name="test"
                  />,
                  "immutable": true,
                },
              },
              "ref": null,
              "return": FiberNode {
                "_debugID": 47,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": FiberNode {
                  "_debugID": 47,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": [Circular],
                  "child": null,
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "expirationTime": 1,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": null,
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <form>
                        <input
                          value=""
                        />
                      </form>
                    </div>,
                    "context": Object {},
                    "current": [Circular],
                    "didError": false,
                    "earliestPendingTime": 0,
                    "earliestSuspendedTime": 0,
                    "expirationTime": 0,
                    "finishedWork": null,
                    "firstBatch": null,
                    "hydrate": false,
                    "interactionThreadID": 12,
                    "latestPendingTime": 0,
                    "latestPingedTime": 0,
                    "latestSuspendedTime": 0,
                    "memoizedInteractions": Set {},
                    "nextExpirationTimeToWorkOn": 0,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingCommitExpirationTime": 0,
                    "pendingContext": null,
                    "pendingInteractionMap": Map {},
                    "timeoutHandle": -1,
                  },
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": null,
                    "firstCapturedEffect": null,
                    "firstCapturedUpdate": null,
                    "firstEffect": null,
                    "firstUpdate": Object {
                      "callback": null,
                      "expirationTime": 1,
                      "next": null,
                      "nextEffect": null,
                      "payload": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "children": <ForwardRef
                                component="input"
                                name="test"
                              />,
                              "immutable": true,
                            }
                          }
                        />,
                      },
                      "tag": 0,
                    },
                    "lastCapturedEffect": null,
                    "lastCapturedUpdate": null,
                    "lastEffect": null,
                    "lastUpdate": Object {
                      "callback": null,
                      "expirationTime": 1,
                      "next": null,
                      "nextEffect": null,
                      "payload": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "children": <ForwardRef
                                component="input"
                                name="test"
                              />,
                              "immutable": true,
                            }
                          }
                        />,
                      },
                      "tag": 0,
                    },
                  },
                },
                "child": [Circular],
                "childExpirationTime": 0,
                "effectTag": 32,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": null,
                "memoizedState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "children": <ForwardRef
                          component="input"
                          name="test"
                        />,
                        "immutable": true,
                      }
                    }
                  />,
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <form>
                      <input
                        value=""
                      />
                    </form>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 12,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "timeoutHandle": -1,
                },
                "tag": 5,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <ForwardRef
                            component="input"
                            name="test"
                          />,
                          "immutable": true,
                        }
                      }
                    />,
                  },
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": null,
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": null,
                },
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": WrapperComponent {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "children": <ForwardRef
                      component="input"
                      name="test"
                    />,
                    "immutable": true,
                  },
                },
                "refs": Object {},
                "state": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "children": <ForwardRef
                      component="input"
                      name="test"
                    />,
                    "immutable": true,
                  },
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 2,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "effectTag": 1,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "children": <ForwardRef
                component="input"
                name="test"
              />,
              "immutable": true,
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": <ForwardRef
                component="input"
                name="test"
              />,
              "immutable": true,
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 49,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "effectTag": 1,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "children": <ForwardRef
                    component="input"
                    name="test"
                  />,
                  "immutable": true,
                },
              },
              "memoizedState": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "children": <ForwardRef
                    component="input"
                    name="test"
                  />,
                  "immutable": true,
                },
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "children": <ForwardRef
                    component="input"
                    name="test"
                  />,
                  "immutable": true,
                },
              },
              "ref": null,
              "return": FiberNode {
                "_debugID": 47,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": FiberNode {
                  "_debugID": 47,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": [Circular],
                  "child": null,
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "expirationTime": 1,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": null,
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <form>
                        <input
                          value=""
                        />
                      </form>
                    </div>,
                    "context": Object {},
                    "current": [Circular],
                    "didError": false,
                    "earliestPendingTime": 0,
                    "earliestSuspendedTime": 0,
                    "expirationTime": 0,
                    "finishedWork": null,
                    "firstBatch": null,
                    "hydrate": false,
                    "interactionThreadID": 12,
                    "latestPendingTime": 0,
                    "latestPingedTime": 0,
                    "latestSuspendedTime": 0,
                    "memoizedInteractions": Set {},
                    "nextExpirationTimeToWorkOn": 0,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingCommitExpirationTime": 0,
                    "pendingContext": null,
                    "pendingInteractionMap": Map {},
                    "timeoutHandle": -1,
                  },
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": null,
                    "firstCapturedEffect": null,
                    "firstCapturedUpdate": null,
                    "firstEffect": null,
                    "firstUpdate": Object {
                      "callback": null,
                      "expirationTime": 1,
                      "next": null,
                      "nextEffect": null,
                      "payload": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "children": <ForwardRef
                                component="input"
                                name="test"
                              />,
                              "immutable": true,
                            }
                          }
                        />,
                      },
                      "tag": 0,
                    },
                    "lastCapturedEffect": null,
                    "lastCapturedUpdate": null,
                    "lastEffect": null,
                    "lastUpdate": Object {
                      "callback": null,
                      "expirationTime": 1,
                      "next": null,
                      "nextEffect": null,
                      "payload": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "children": <ForwardRef
                                component="input"
                                name="test"
                              />,
                              "immutable": true,
                            }
                          }
                        />,
                      },
                      "tag": 0,
                    },
                  },
                },
                "child": [Circular],
                "childExpirationTime": 0,
                "effectTag": 32,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": null,
                "memoizedState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "children": <ForwardRef
                          component="input"
                          name="test"
                        />,
                        "immutable": true,
                      }
                    }
                  />,
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <form>
                      <input
                        value=""
                      />
                    </form>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 12,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "timeoutHandle": -1,
                },
                "tag": 5,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <ForwardRef
                            component="input"
                            name="test"
                          />,
                          "immutable": true,
                        }
                      }
                    />,
                  },
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": null,
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": null,
                },
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": WrapperComponent {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "children": <ForwardRef
                      component="input"
                      name="test"
                    />,
                    "immutable": true,
                  },
                },
                "refs": Object {},
                "state": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "children": <ForwardRef
                      component="input"
                      name="test"
                    />,
                    "immutable": true,
                  },
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 2,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Provider {
              "__reactInternalMemoizedMergedChildContext": Object {
                "store": Object {
                  "dispatch": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                  Symbol(observable): [Function],
                },
              },
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "children": <ForwardRef
                  component="input"
                  name="test"
                />,
                "immutable": true,
              },
              "refs": Object {},
              "state": null,
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 52,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 53,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 54,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 55,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "disabled": false,
                    "onBlur": [Function],
                    "onChange": [Function],
                    "onFocus": [Function],
                    "value": "",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "disabled": false,
                    "onBlur": [Function],
                    "onChange": [Function],
                    "onFocus": [Function],
                    "value": "",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": <input
                    value=""
                  />,
                  "tag": 7,
                  "treeBaseDuration": 0,
                  "type": "input",
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "effectTag": 1,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "component": "input",
                  "disabled": false,
                  "innerRef": null,
                  "name": "test",
                  "value": "",
                },
                "memoizedState": Object {
                  "field": Immutable.Map {
                    "value": "",
                    "errors": Immutable.List [],
                    "valid": true,
                    "touched": false,
                    "changed": false,
                    "disabled": false,
                  },
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "component": "input",
                  "disabled": false,
                  "innerRef": null,
                  "name": "test",
                  "value": "",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Field {
                  "__reactInternalMemoizedMaskedChildContext": Object {
                    "_reformRedux": Object {
                      "field": Object {
                        "changeFieldValue": [Function],
                        "changeFieldsValues": [Function],
                        "removeField": [Function],
                        "resetField": [Function],
                        "resetFields": [Function],
                        "setFieldDisabled": [Function],
                        "setFieldErrors": [Function],
                        "setFieldTouched": [Function],
                        "setFieldsDisabled": [Function],
                        "setFieldsErrors": [Function],
                        "setFieldsTouched": [Function],
                      },
                      "form": Object {
                        "fieldsCount": Object {
                          "test": 1,
                        },
                        "initialized": false,
                        "name": "form",
                        "path": Array [
                          "form",
                        ],
                        "registerField": [Function],
                        "resetForm": [Function],
                        "unregisterField": [Function],
                        "updateForm": [Function],
                      },
                    },
                    "store": Object {
                      "dispatch": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                      Symbol(observable): [Function],
                    },
                  },
                  "__reactInternalMemoizedUnmaskedChildContext": Object {
                    "_reformRedux": Object {
                      "field": Object {
                        "changeFieldValue": [Function],
                        "changeFieldsValues": [Function],
                        "removeField": [Function],
                        "resetField": [Function],
                        "resetFields": [Function],
                        "setFieldDisabled": [Function],
                        "setFieldErrors": [Function],
                        "setFieldTouched": [Function],
                        "setFieldsDisabled": [Function],
                        "setFieldsErrors": [Function],
                        "setFieldsTouched": [Function],
                      },
                      "form": Object {
                        "fieldsCount": Object {
                          "test": 1,
                        },
                        "initialized": false,
                        "name": "form",
                        "path": Array [
                          "form",
                        ],
                        "registerField": [Function],
                        "resetForm": [Function],
                        "unregisterField": [Function],
                        "updateForm": [Function],
                      },
                    },
                    "store": Object {
                      "dispatch": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                      Symbol(observable): [Function],
                    },
                  },
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "changeFieldValue": [Function],
                  "changeFieldValueHandler": [Function],
                  "context": Object {
                    "_reformRedux": Object {
                      "field": Object {
                        "changeFieldValue": [Function],
                        "changeFieldsValues": [Function],
                        "removeField": [Function],
                        "resetField": [Function],
                        "resetFields": [Function],
                        "setFieldDisabled": [Function],
                        "setFieldErrors": [Function],
                        "setFieldTouched": [Function],
                        "setFieldsDisabled": [Function],
                        "setFieldsErrors": [Function],
                        "setFieldsTouched": [Function],
                      },
                      "form": Object {
                        "fieldsCount": Object {
                          "test": 1,
                        },
                        "initialized": false,
                        "name": "form",
                        "path": Array [
                          "form",
                        ],
                        "registerField": [Function],
                        "resetForm": [Function],
                        "unregisterField": [Function],
                        "updateForm": [Function],
                      },
                    },
                    "store": Object {
                      "dispatch": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                      Symbol(observable): [Function],
                    },
                  },
                  "getFieldValue": [Function],
                  "initialFieldData": Immutable.Map {
                    "value": "",
                    "errors": Immutable.List [],
                    "valid": true,
                    "touched": false,
                    "changed": false,
                    "disabled": false,
                  },
                  "isCheckbox": [Function],
                  "isRadio": [Function],
                  "isRadioOrCheckbox": [Function],
                  "onBlurFieldHandler": [Function],
                  "onFocusFieldHandler": [Function],
                  "props": Object {
                    "component": "input",
                    "disabled": false,
                    "innerRef": null,
                    "name": "test",
                    "value": "",
                  },
                  "refs": Object {},
                  "registerField": [Function],
                  "setFieldErrors": [Function],
                  "state": Object {
                    "field": Immutable.Map {
                      "value": "",
                      "errors": Immutable.List [],
                      "valid": true,
                      "touched": false,
                      "changed": false,
                      "disabled": false,
                    },
                  },
                  "unsubscribeFromStore": [Function],
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 2,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "effectTag": 0,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "component": "input",
                "name": "test",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "component": "input",
                "name": "test",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 13,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "render": [Function],
              },
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "effectTag": 0,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": <ForwardRef
                component="input"
                name="test"
              />,
              "onSubmit": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": <ForwardRef
                component="input"
                name="test"
              />,
              "onSubmit": [Function],
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": <form>
              <input
                value=""
              />
            </form>,
            "tag": 7,
            "treeBaseDuration": 0,
            "type": "form",
            "updateQueue": null,
          },
          "childExpirationTime": 0,
          "effectTag": 5,
          "expirationTime": 0,
          "firstContextDependency": null,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "children": <ForwardRef
              component="input"
              name="test"
            />,
            "onSubmit": [Function],
            "onSubmitFailed": [Function],
            "path": "form",
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": <ForwardRef
              component="input"
              name="test"
            />,
            "onSubmit": [Function],
            "onSubmitFailed": [Function],
            "path": "form",
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 50,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": FiberNode {
              "_debugID": 49,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "effectTag": 1,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "children": <ForwardRef
                    component="input"
                    name="test"
                  />,
                  "immutable": true,
                },
              },
              "memoizedState": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "children": <ForwardRef
                    component="input"
                    name="test"
                  />,
                  "immutable": true,
                },
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "children": <ForwardRef
                    component="input"
                    name="test"
                  />,
                  "immutable": true,
                },
              },
              "ref": null,
              "return": FiberNode {
                "_debugID": 47,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": FiberNode {
                  "_debugID": 47,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": [Circular],
                  "child": null,
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "expirationTime": 1,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": null,
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <form>
                        <input
                          value=""
                        />
                      </form>
                    </div>,
                    "context": Object {},
                    "current": [Circular],
                    "didError": false,
                    "earliestPendingTime": 0,
                    "earliestSuspendedTime": 0,
                    "expirationTime": 0,
                    "finishedWork": null,
                    "firstBatch": null,
                    "hydrate": false,
                    "interactionThreadID": 12,
                    "latestPendingTime": 0,
                    "latestPingedTime": 0,
                    "latestSuspendedTime": 0,
                    "memoizedInteractions": Set {},
                    "nextExpirationTimeToWorkOn": 0,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingCommitExpirationTime": 0,
                    "pendingContext": null,
                    "pendingInteractionMap": Map {},
                    "timeoutHandle": -1,
                  },
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": null,
                    "firstCapturedEffect": null,
                    "firstCapturedUpdate": null,
                    "firstEffect": null,
                    "firstUpdate": Object {
                      "callback": null,
                      "expirationTime": 1,
                      "next": null,
                      "nextEffect": null,
                      "payload": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "children": <ForwardRef
                                component="input"
                                name="test"
                              />,
                              "immutable": true,
                            }
                          }
                        />,
                      },
                      "tag": 0,
                    },
                    "lastCapturedEffect": null,
                    "lastCapturedUpdate": null,
                    "lastEffect": null,
                    "lastUpdate": Object {
                      "callback": null,
                      "expirationTime": 1,
                      "next": null,
                      "nextEffect": null,
                      "payload": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "children": <ForwardRef
                                component="input"
                                name="test"
                              />,
                              "immutable": true,
                            }
                          }
                        />,
                      },
                      "tag": 0,
                    },
                  },
                },
                "child": [Circular],
                "childExpirationTime": 0,
                "effectTag": 32,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": null,
                "memoizedState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "children": <ForwardRef
                          component="input"
                          name="test"
                        />,
                        "immutable": true,
                      }
                    }
                  />,
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <form>
                      <input
                        value=""
                      />
                    </form>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 12,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "timeoutHandle": -1,
                },
                "tag": 5,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <ForwardRef
                            component="input"
                            name="test"
                          />,
                          "immutable": true,
                        }
                      }
                    />,
                  },
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": null,
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": null,
                },
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": WrapperComponent {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "children": <ForwardRef
                      component="input"
                      name="test"
                    />,
                    "immutable": true,
                  },
                },
                "refs": Object {},
                "state": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "children": <ForwardRef
                      component="input"
                      name="test"
                    />,
                    "immutable": true,
                  },
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 2,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "effectTag": 1,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "children": <ForwardRef
                component="input"
                name="test"
              />,
              "immutable": true,
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": <ForwardRef
                component="input"
                name="test"
              />,
              "immutable": true,
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 49,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "effectTag": 1,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "children": <ForwardRef
                    component="input"
                    name="test"
                  />,
                  "immutable": true,
                },
              },
              "memoizedState": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "children": <ForwardRef
                    component="input"
                    name="test"
                  />,
                  "immutable": true,
                },
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "children": <ForwardRef
                    component="input"
                    name="test"
                  />,
                  "immutable": true,
                },
              },
              "ref": null,
              "return": FiberNode {
                "_debugID": 47,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": FiberNode {
                  "_debugID": 47,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": [Circular],
                  "child": null,
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "expirationTime": 1,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": null,
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <form>
                        <input
                          value=""
                        />
                      </form>
                    </div>,
                    "context": Object {},
                    "current": [Circular],
                    "didError": false,
                    "earliestPendingTime": 0,
                    "earliestSuspendedTime": 0,
                    "expirationTime": 0,
                    "finishedWork": null,
                    "firstBatch": null,
                    "hydrate": false,
                    "interactionThreadID": 12,
                    "latestPendingTime": 0,
                    "latestPingedTime": 0,
                    "latestSuspendedTime": 0,
                    "memoizedInteractions": Set {},
                    "nextExpirationTimeToWorkOn": 0,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingCommitExpirationTime": 0,
                    "pendingContext": null,
                    "pendingInteractionMap": Map {},
                    "timeoutHandle": -1,
                  },
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": null,
                    "firstCapturedEffect": null,
                    "firstCapturedUpdate": null,
                    "firstEffect": null,
                    "firstUpdate": Object {
                      "callback": null,
                      "expirationTime": 1,
                      "next": null,
                      "nextEffect": null,
                      "payload": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "children": <ForwardRef
                                component="input"
                                name="test"
                              />,
                              "immutable": true,
                            }
                          }
                        />,
                      },
                      "tag": 0,
                    },
                    "lastCapturedEffect": null,
                    "lastCapturedUpdate": null,
                    "lastEffect": null,
                    "lastUpdate": Object {
                      "callback": null,
                      "expirationTime": 1,
                      "next": null,
                      "nextEffect": null,
                      "payload": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "children": <ForwardRef
                                component="input"
                                name="test"
                              />,
                              "immutable": true,
                            }
                          }
                        />,
                      },
                      "tag": 0,
                    },
                  },
                },
                "child": [Circular],
                "childExpirationTime": 0,
                "effectTag": 32,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": null,
                "memoizedState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "children": <ForwardRef
                          component="input"
                          name="test"
                        />,
                        "immutable": true,
                      }
                    }
                  />,
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <form>
                      <input
                        value=""
                      />
                    </form>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 12,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "timeoutHandle": -1,
                },
                "tag": 5,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <ForwardRef
                            component="input"
                            name="test"
                          />,
                          "immutable": true,
                        }
                      }
                    />,
                  },
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": null,
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": null,
                },
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": WrapperComponent {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "children": <ForwardRef
                      component="input"
                      name="test"
                    />,
                    "immutable": true,
                  },
                },
                "refs": Object {},
                "state": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "children": <ForwardRef
                      component="input"
                      name="test"
                    />,
                    "immutable": true,
                  },
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 2,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Provider {
              "__reactInternalMemoizedMergedChildContext": Object {
                "store": Object {
                  "dispatch": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                  Symbol(observable): [Function],
                },
              },
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "children": <ForwardRef
                  component="input"
                  name="test"
                />,
                "immutable": true,
              },
              "refs": Object {},
              "state": null,
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": [Circular],
          "tag": 2,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "_reactInternalInstance": Object {},
        "context": Object {
          "store": Object {
            "dispatch": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
            Symbol(observable): [Function],
          },
        },
        "decreaseFieldCount": [Function],
        "fieldsCount": Object {
          "form": Object {
            "test": 1,
          },
        },
        "fieldsStack": Object {
          "form": Object {
            "test": Immutable.Map {
              "value": "",
              "errors": Immutable.List [],
              "valid": true,
              "touched": false,
              "changed": false,
              "disabled": false,
            },
          },
        },
        "fieldsValidateStack": Object {
          "form": Object {
            "test": Immutable.List [],
          },
        },
        "formName": "form",
        "handleSubmit": [Function],
        "increaseFieldCount": [Function],
        "initialized": true,
        "path": Array [
          "form",
        ],
        "props": Object {
          "children": <ForwardRef
            component="input"
            name="test"
          />,
          "onSubmit": [Function],
          "onSubmitFailed": [Function],
          "path": "form",
        },
        "refs": Object {},
        "registerField": [Function],
        "state": null,
        "unregisterField": [Function],
        "updater": Object {
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
        },
      },
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <ForwardRef
          component="input"
          name="test"
        />,
        "onSubmit": [Function],
        "onSubmitFailed": [Function],
        "path": "form",
      },
      "ref": null,
      "rendered": Object {
        "instance": <form>
          <input
            value=""
          />
        </form>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <ForwardRef
            component="input"
            name="test"
          />,
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "component": "input",
              "name": "test",
            },
            "ref": null,
            "rendered": Object {
              "instance": Field {
                "__reactInternalMemoizedMaskedChildContext": Object {
                  "_reformRedux": Object {
                    "field": Object {
                      "changeFieldValue": [Function],
                      "changeFieldsValues": [Function],
                      "removeField": [Function],
                      "resetField": [Function],
                      "resetFields": [Function],
                      "setFieldDisabled": [Function],
                      "setFieldErrors": [Function],
                      "setFieldTouched": [Function],
                      "setFieldsDisabled": [Function],
                      "setFieldsErrors": [Function],
                      "setFieldsTouched": [Function],
                    },
                    "form": Object {
                      "fieldsCount": Object {
                        "test": 1,
                      },
                      "initialized": false,
                      "name": "form",
                      "path": Array [
                        "form",
                      ],
                      "registerField": [Function],
                      "resetForm": [Function],
                      "unregisterField": [Function],
                      "updateForm": [Function],
                    },
                  },
                  "store": Object {
                    "dispatch": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                    Symbol(observable): [Function],
                  },
                },
                "__reactInternalMemoizedUnmaskedChildContext": Object {
                  "_reformRedux": Object {
                    "field": Object {
                      "changeFieldValue": [Function],
                      "changeFieldsValues": [Function],
                      "removeField": [Function],
                      "resetField": [Function],
                      "resetFields": [Function],
                      "setFieldDisabled": [Function],
                      "setFieldErrors": [Function],
                      "setFieldTouched": [Function],
                      "setFieldsDisabled": [Function],
                      "setFieldsErrors": [Function],
                      "setFieldsTouched": [Function],
                    },
                    "form": Object {
                      "fieldsCount": Object {
                        "test": 1,
                      },
                      "initialized": false,
                      "name": "form",
                      "path": Array [
                        "form",
                      ],
                      "registerField": [Function],
                      "resetForm": [Function],
                      "unregisterField": [Function],
                      "updateForm": [Function],
                    },
                  },
                  "store": Object {
                    "dispatch": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                    Symbol(observable): [Function],
                  },
                },
                "_reactInternalFiber": FiberNode {
                  "_debugID": 54,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": FiberNode {
                    "_debugID": 53,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "component": "input",
                      "name": "test",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "component": "input",
                      "name": "test",
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 52,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 51,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": FiberNode {
                          "_debugID": 50,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": FiberNode {
                            "_debugID": 49,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "children": <ForwardRef
                                  component="input"
                                  name="test"
                                />,
                                "immutable": true,
                              },
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "children": <ForwardRef
                                  component="input"
                                  name="test"
                                />,
                                "immutable": true,
                              },
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "children": <ForwardRef
                                  component="input"
                                  name="test"
                                />,
                                "immutable": true,
                              },
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 47,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": FiberNode {
                                "_debugID": 47,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": [Circular],
                                "child": null,
                                "childExpirationTime": 0,
                                "effectTag": 0,
                                "expirationTime": 1,
                                "firstContextDependency": null,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <form>
                                      <input
                                        value=""
                                      />
                                    </form>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "didError": false,
                                  "earliestPendingTime": 0,
                                  "earliestSuspendedTime": 0,
                                  "expirationTime": 0,
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "interactionThreadID": 12,
                                  "latestPendingTime": 0,
                                  "latestPingedTime": 0,
                                  "latestSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextExpirationTimeToWorkOn": 0,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "timeoutHandle": -1,
                                },
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "children": <ForwardRef
                                              component="input"
                                              name="test"
                                            />,
                                            "immutable": true,
                                          }
                                        }
                                      />,
                                    },
                                    "tag": 0,
                                  },
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "children": <ForwardRef
                                              component="input"
                                              name="test"
                                            />,
                                            "immutable": true,
                                          }
                                        }
                                      />,
                                    },
                                    "tag": 0,
                                  },
                                },
                              },
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "effectTag": 32,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "children": <ForwardRef
                                        component="input"
                                        name="test"
                                      />,
                                      "immutable": true,
                                    }
                                  }
                                />,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <form>
                                    <input
                                      value=""
                                    />
                                  </form>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "didError": false,
                                "earliestPendingTime": 0,
                                "earliestSuspendedTime": 0,
                                "expirationTime": 0,
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "interactionThreadID": 12,
                                "latestPendingTime": 0,
                                "latestPingedTime": 0,
                                "latestSuspendedTime": 0,
                                "memoizedInteractions": Set {},
                                "nextExpirationTimeToWorkOn": 0,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "pendingInteractionMap": Map {},
                                "timeoutHandle": -1,
                              },
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "children": <ForwardRef
                                          component="input"
                                          name="test"
                                        />,
                                        "immutable": true,
                                      }
                                    }
                                  />,
                                },
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": null,
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": null,
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "children": <ForwardRef
                              component="input"
                              name="test"
                            />,
                            "immutable": true,
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": <ForwardRef
                              component="input"
                              name="test"
                            />,
                            "immutable": true,
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 49,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "children": <ForwardRef
                                  component="input"
                                  name="test"
                                />,
                                "immutable": true,
                              },
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "children": <ForwardRef
                                  component="input"
                                  name="test"
                                />,
                                "immutable": true,
                              },
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "children": <ForwardRef
                                  component="input"
                                  name="test"
                                />,
                                "immutable": true,
                              },
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 47,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": FiberNode {
                                "_debugID": 47,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": [Circular],
                                "child": null,
                                "childExpirationTime": 0,
                                "effectTag": 0,
                                "expirationTime": 1,
                                "firstContextDependency": null,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <form>
                                      <input
                                        value=""
                                      />
                                    </form>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "didError": false,
                                  "earliestPendingTime": 0,
                                  "earliestSuspendedTime": 0,
                                  "expirationTime": 0,
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "interactionThreadID": 12,
                                  "latestPendingTime": 0,
                                  "latestPingedTime": 0,
                                  "latestSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextExpirationTimeToWorkOn": 0,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "timeoutHandle": -1,
                                },
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "children": <ForwardRef
                                              component="input"
                                              name="test"
                                            />,
                                            "immutable": true,
                                          }
                                        }
                                      />,
                                    },
                                    "tag": 0,
                                  },
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "children": <ForwardRef
                                              component="input"
                                              name="test"
                                            />,
                                            "immutable": true,
                                          }
                                        }
                                      />,
                                    },
                                    "tag": 0,
                                  },
                                },
                              },
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "effectTag": 32,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "children": <ForwardRef
                                        component="input"
                                        name="test"
                                      />,
                                      "immutable": true,
                                    }
                                  }
                                />,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <form>
                                    <input
                                      value=""
                                    />
                                  </form>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "didError": false,
                                "earliestPendingTime": 0,
                                "earliestSuspendedTime": 0,
                                "expirationTime": 0,
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "interactionThreadID": 12,
                                "latestPendingTime": 0,
                                "latestPingedTime": 0,
                                "latestSuspendedTime": 0,
                                "memoizedInteractions": Set {},
                                "nextExpirationTimeToWorkOn": 0,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "pendingInteractionMap": Map {},
                                "timeoutHandle": -1,
                              },
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "children": <ForwardRef
                                          component="input"
                                          name="test"
                                        />,
                                        "immutable": true,
                                      }
                                    }
                                  />,
                                },
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": null,
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": null,
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": Provider {
                            "__reactInternalMemoizedMergedChildContext": Object {
                              "store": Object {
                                "dispatch": [Function],
                                "getState": [Function],
                                "replaceReducer": [Function],
                                "subscribe": [Function],
                                Symbol(observable): [Function],
                              },
                            },
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "children": <ForwardRef
                                component="input"
                                name="test"
                              />,
                              "immutable": true,
                            },
                            "refs": Object {},
                            "state": null,
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": [Circular],
                        "childExpirationTime": 0,
                        "effectTag": 5,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": <ForwardRef
                            component="input"
                            name="test"
                          />,
                          "onSubmit": [Function],
                          "onSubmitFailed": [Function],
                          "path": "form",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": <ForwardRef
                            component="input"
                            name="test"
                          />,
                          "onSubmit": [Function],
                          "onSubmitFailed": [Function],
                          "path": "form",
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 50,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": FiberNode {
                            "_debugID": 49,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "children": <ForwardRef
                                  component="input"
                                  name="test"
                                />,
                                "immutable": true,
                              },
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "children": <ForwardRef
                                  component="input"
                                  name="test"
                                />,
                                "immutable": true,
                              },
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "children": <ForwardRef
                                  component="input"
                                  name="test"
                                />,
                                "immutable": true,
                              },
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 47,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": FiberNode {
                                "_debugID": 47,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": [Circular],
                                "child": null,
                                "childExpirationTime": 0,
                                "effectTag": 0,
                                "expirationTime": 1,
                                "firstContextDependency": null,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <form>
                                      <input
                                        value=""
                                      />
                                    </form>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "didError": false,
                                  "earliestPendingTime": 0,
                                  "earliestSuspendedTime": 0,
                                  "expirationTime": 0,
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "interactionThreadID": 12,
                                  "latestPendingTime": 0,
                                  "latestPingedTime": 0,
                                  "latestSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextExpirationTimeToWorkOn": 0,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "timeoutHandle": -1,
                                },
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "children": <ForwardRef
                                              component="input"
                                              name="test"
                                            />,
                                            "immutable": true,
                                          }
                                        }
                                      />,
                                    },
                                    "tag": 0,
                                  },
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "children": <ForwardRef
                                              component="input"
                                              name="test"
                                            />,
                                            "immutable": true,
                                          }
                                        }
                                      />,
                                    },
                                    "tag": 0,
                                  },
                                },
                              },
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "effectTag": 32,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "children": <ForwardRef
                                        component="input"
                                        name="test"
                                      />,
                                      "immutable": true,
                                    }
                                  }
                                />,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <form>
                                    <input
                                      value=""
                                    />
                                  </form>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "didError": false,
                                "earliestPendingTime": 0,
                                "earliestSuspendedTime": 0,
                                "expirationTime": 0,
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "interactionThreadID": 12,
                                "latestPendingTime": 0,
                                "latestPingedTime": 0,
                                "latestSuspendedTime": 0,
                                "memoizedInteractions": Set {},
                                "nextExpirationTimeToWorkOn": 0,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "pendingInteractionMap": Map {},
                                "timeoutHandle": -1,
                              },
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "children": <ForwardRef
                                          component="input"
                                          name="test"
                                        />,
                                        "immutable": true,
                                      }
                                    }
                                  />,
                                },
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": null,
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": null,
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "children": <ForwardRef
                              component="input"
                              name="test"
                            />,
                            "immutable": true,
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": <ForwardRef
                              component="input"
                              name="test"
                            />,
                            "immutable": true,
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 49,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "children": <ForwardRef
                                  component="input"
                                  name="test"
                                />,
                                "immutable": true,
                              },
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "children": <ForwardRef
                                  component="input"
                                  name="test"
                                />,
                                "immutable": true,
                              },
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "children": <ForwardRef
                                  component="input"
                                  name="test"
                                />,
                                "immutable": true,
                              },
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 47,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": FiberNode {
                                "_debugID": 47,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": [Circular],
                                "child": null,
                                "childExpirationTime": 0,
                                "effectTag": 0,
                                "expirationTime": 1,
                                "firstContextDependency": null,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <form>
                                      <input
                                        value=""
                                      />
                                    </form>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "didError": false,
                                  "earliestPendingTime": 0,
                                  "earliestSuspendedTime": 0,
                                  "expirationTime": 0,
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "interactionThreadID": 12,
                                  "latestPendingTime": 0,
                                  "latestPingedTime": 0,
                                  "latestSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextExpirationTimeToWorkOn": 0,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "timeoutHandle": -1,
                                },
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "children": <ForwardRef
                                              component="input"
                                              name="test"
                                            />,
                                            "immutable": true,
                                          }
                                        }
                                      />,
                                    },
                                    "tag": 0,
                                  },
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "children": <ForwardRef
                                              component="input"
                                              name="test"
                                            />,
                                            "immutable": true,
                                          }
                                        }
                                      />,
                                    },
                                    "tag": 0,
                                  },
                                },
                              },
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "effectTag": 32,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "children": <ForwardRef
                                        component="input"
                                        name="test"
                                      />,
                                      "immutable": true,
                                    }
                                  }
                                />,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <form>
                                    <input
                                      value=""
                                    />
                                  </form>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "didError": false,
                                "earliestPendingTime": 0,
                                "earliestSuspendedTime": 0,
                                "expirationTime": 0,
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "interactionThreadID": 12,
                                "latestPendingTime": 0,
                                "latestPingedTime": 0,
                                "latestSuspendedTime": 0,
                                "memoizedInteractions": Set {},
                                "nextExpirationTimeToWorkOn": 0,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "pendingInteractionMap": Map {},
                                "timeoutHandle": -1,
                              },
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "children": <ForwardRef
                                          component="input"
                                          name="test"
                                        />,
                                        "immutable": true,
                                      }
                                    }
                                  />,
                                },
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": null,
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": null,
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": Provider {
                            "__reactInternalMemoizedMergedChildContext": Object {
                              "store": Object {
                                "dispatch": [Function],
                                "getState": [Function],
                                "replaceReducer": [Function],
                                "subscribe": [Function],
                                Symbol(observable): [Function],
                              },
                            },
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "children": <ForwardRef
                                component="input"
                                name="test"
                              />,
                              "immutable": true,
                            },
                            "refs": Object {},
                            "state": null,
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": Form {
                          "__reactInternalMemoizedMaskedChildContext": Object {
                            "store": Object {
                              "dispatch": [Function],
                              "getState": [Function],
                              "replaceReducer": [Function],
                              "subscribe": [Function],
                              Symbol(observable): [Function],
                            },
                          },
                          "__reactInternalMemoizedMergedChildContext": Object {
                            "_reformRedux": Object {
                              "field": Object {
                                "changeFieldValue": [Function],
                                "changeFieldsValues": [Function],
                                "removeField": [Function],
                                "resetField": [Function],
                                "resetFields": [Function],
                                "setFieldDisabled": [Function],
                                "setFieldErrors": [Function],
                                "setFieldTouched": [Function],
                                "setFieldsDisabled": [Function],
                                "setFieldsErrors": [Function],
                                "setFieldsTouched": [Function],
                              },
                              "form": Object {
                                "fieldsCount": Object {
                                  "test": 1,
                                },
                                "initialized": false,
                                "name": "form",
                                "path": Array [
                                  "form",
                                ],
                                "registerField": [Function],
                                "resetForm": [Function],
                                "unregisterField": [Function],
                                "updateForm": [Function],
                              },
                            },
                            "store": Object {
                              "dispatch": [Function],
                              "getState": [Function],
                              "replaceReducer": [Function],
                              "subscribe": [Function],
                              Symbol(observable): [Function],
                            },
                          },
                          "__reactInternalMemoizedUnmaskedChildContext": Object {
                            "store": Object {
                              "dispatch": [Function],
                              "getState": [Function],
                              "replaceReducer": [Function],
                              "subscribe": [Function],
                              Symbol(observable): [Function],
                            },
                          },
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {
                            "store": Object {
                              "dispatch": [Function],
                              "getState": [Function],
                              "replaceReducer": [Function],
                              "subscribe": [Function],
                              Symbol(observable): [Function],
                            },
                          },
                          "decreaseFieldCount": [Function],
                          "fieldsCount": Object {
                            "form": Object {
                              "test": 1,
                            },
                          },
                          "fieldsStack": Object {
                            "form": Object {
                              "test": Immutable.Map {
                                "value": "",
                                "errors": Immutable.List [],
                                "valid": true,
                                "touched": false,
                                "changed": false,
                                "disabled": false,
                              },
                            },
                          },
                          "fieldsValidateStack": Object {
                            "form": Object {
                              "test": Immutable.List [],
                            },
                          },
                          "formName": "form",
                          "handleSubmit": [Function],
                          "increaseFieldCount": [Function],
                          "initialized": true,
                          "path": Array [
                            "form",
                          ],
                          "props": Object {
                            "children": <ForwardRef
                              component="input"
                              name="test"
                            />,
                            "onSubmit": [Function],
                            "onSubmitFailed": [Function],
                            "path": "form",
                          },
                          "refs": Object {},
                          "registerField": [Function],
                          "state": null,
                          "unregisterField": [Function],
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "treeBaseDuration": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": <ForwardRef
                          component="input"
                          name="test"
                        />,
                        "onSubmit": [Function],
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": <ForwardRef
                          component="input"
                          name="test"
                        />,
                        "onSubmit": [Function],
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 51,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": FiberNode {
                          "_debugID": 50,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": FiberNode {
                            "_debugID": 49,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "children": <ForwardRef
                                  component="input"
                                  name="test"
                                />,
                                "immutable": true,
                              },
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "children": <ForwardRef
                                  component="input"
                                  name="test"
                                />,
                                "immutable": true,
                              },
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "children": <ForwardRef
                                  component="input"
                                  name="test"
                                />,
                                "immutable": true,
                              },
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 47,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": FiberNode {
                                "_debugID": 47,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": [Circular],
                                "child": null,
                                "childExpirationTime": 0,
                                "effectTag": 0,
                                "expirationTime": 1,
                                "firstContextDependency": null,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <form>
                                      <input
                                        value=""
                                      />
                                    </form>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "didError": false,
                                  "earliestPendingTime": 0,
                                  "earliestSuspendedTime": 0,
                                  "expirationTime": 0,
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "interactionThreadID": 12,
                                  "latestPendingTime": 0,
                                  "latestPingedTime": 0,
                                  "latestSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextExpirationTimeToWorkOn": 0,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "timeoutHandle": -1,
                                },
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "children": <ForwardRef
                                              component="input"
                                              name="test"
                                            />,
                                            "immutable": true,
                                          }
                                        }
                                      />,
                                    },
                                    "tag": 0,
                                  },
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "children": <ForwardRef
                                              component="input"
                                              name="test"
                                            />,
                                            "immutable": true,
                                          }
                                        }
                                      />,
                                    },
                                    "tag": 0,
                                  },
                                },
                              },
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "effectTag": 32,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "children": <ForwardRef
                                        component="input"
                                        name="test"
                                      />,
                                      "immutable": true,
                                    }
                                  }
                                />,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <form>
                                    <input
                                      value=""
                                    />
                                  </form>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "didError": false,
                                "earliestPendingTime": 0,
                                "earliestSuspendedTime": 0,
                                "expirationTime": 0,
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "interactionThreadID": 12,
                                "latestPendingTime": 0,
                                "latestPingedTime": 0,
                                "latestSuspendedTime": 0,
                                "memoizedInteractions": Set {},
                                "nextExpirationTimeToWorkOn": 0,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "pendingInteractionMap": Map {},
                                "timeoutHandle": -1,
                              },
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "children": <ForwardRef
                                          component="input"
                                          name="test"
                                        />,
                                        "immutable": true,
                                      }
                                    }
                                  />,
                                },
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": null,
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": null,
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "children": <ForwardRef
                              component="input"
                              name="test"
                            />,
                            "immutable": true,
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": <ForwardRef
                              component="input"
                              name="test"
                            />,
                            "immutable": true,
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 49,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "children": <ForwardRef
                                  component="input"
                                  name="test"
                                />,
                                "immutable": true,
                              },
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "children": <ForwardRef
                                  component="input"
                                  name="test"
                                />,
                                "immutable": true,
                              },
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "children": <ForwardRef
                                  component="input"
                                  name="test"
                                />,
                                "immutable": true,
                              },
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 47,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": FiberNode {
                                "_debugID": 47,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": [Circular],
                                "child": null,
                                "childExpirationTime": 0,
                                "effectTag": 0,
                                "expirationTime": 1,
                                "firstContextDependency": null,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <form>
                                      <input
                                        value=""
                                      />
                                    </form>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "didError": false,
                                  "earliestPendingTime": 0,
                                  "earliestSuspendedTime": 0,
                                  "expirationTime": 0,
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "interactionThreadID": 12,
                                  "latestPendingTime": 0,
                                  "latestPingedTime": 0,
                                  "latestSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextExpirationTimeToWorkOn": 0,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "timeoutHandle": -1,
                                },
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "children": <ForwardRef
                                              component="input"
                                              name="test"
                                            />,
                                            "immutable": true,
                                          }
                                        }
                                      />,
                                    },
                                    "tag": 0,
                                  },
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "children": <ForwardRef
                                              component="input"
                                              name="test"
                                            />,
                                            "immutable": true,
                                          }
                                        }
                                      />,
                                    },
                                    "tag": 0,
                                  },
                                },
                              },
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "effectTag": 32,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "children": <ForwardRef
                                        component="input"
                                        name="test"
                                      />,
                                      "immutable": true,
                                    }
                                  }
                                />,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <form>
                                    <input
                                      value=""
                                    />
                                  </form>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "didError": false,
                                "earliestPendingTime": 0,
                                "earliestSuspendedTime": 0,
                                "expirationTime": 0,
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "interactionThreadID": 12,
                                "latestPendingTime": 0,
                                "latestPingedTime": 0,
                                "latestSuspendedTime": 0,
                                "memoizedInteractions": Set {},
                                "nextExpirationTimeToWorkOn": 0,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "pendingInteractionMap": Map {},
                                "timeoutHandle": -1,
                              },
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "children": <ForwardRef
                                          component="input"
                                          name="test"
                                        />,
                                        "immutable": true,
                                      }
                                    }
                                  />,
                                },
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": null,
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": null,
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": Provider {
                            "__reactInternalMemoizedMergedChildContext": Object {
                              "store": Object {
                                "dispatch": [Function],
                                "getState": [Function],
                                "replaceReducer": [Function],
                                "subscribe": [Function],
                                Symbol(observable): [Function],
                              },
                            },
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "children": <ForwardRef
                                component="input"
                                name="test"
                              />,
                              "immutable": true,
                            },
                            "refs": Object {},
                            "state": null,
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": [Circular],
                        "childExpirationTime": 0,
                        "effectTag": 5,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": <ForwardRef
                            component="input"
                            name="test"
                          />,
                          "onSubmit": [Function],
                          "onSubmitFailed": [Function],
                          "path": "form",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": <ForwardRef
                            component="input"
                            name="test"
                          />,
                          "onSubmit": [Function],
                          "onSubmitFailed": [Function],
                          "path": "form",
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 50,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": FiberNode {
                            "_debugID": 49,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "children": <ForwardRef
                                  component="input"
                                  name="test"
                                />,
                                "immutable": true,
                              },
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "children": <ForwardRef
                                  component="input"
                                  name="test"
                                />,
                                "immutable": true,
                              },
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "children": <ForwardRef
                                  component="input"
                                  name="test"
                                />,
                                "immutable": true,
                              },
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 47,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": FiberNode {
                                "_debugID": 47,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": [Circular],
                                "child": null,
                                "childExpirationTime": 0,
                                "effectTag": 0,
                                "expirationTime": 1,
                                "firstContextDependency": null,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <form>
                                      <input
                                        value=""
                                      />
                                    </form>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "didError": false,
                                  "earliestPendingTime": 0,
                                  "earliestSuspendedTime": 0,
                                  "expirationTime": 0,
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "interactionThreadID": 12,
                                  "latestPendingTime": 0,
                                  "latestPingedTime": 0,
                                  "latestSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextExpirationTimeToWorkOn": 0,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "timeoutHandle": -1,
                                },
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "children": <ForwardRef
                                              component="input"
                                              name="test"
                                            />,
                                            "immutable": true,
                                          }
                                        }
                                      />,
                                    },
                                    "tag": 0,
                                  },
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "children": <ForwardRef
                                              component="input"
                                              name="test"
                                            />,
                                            "immutable": true,
                                          }
                                        }
                                      />,
                                    },
                                    "tag": 0,
                                  },
                                },
                              },
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "effectTag": 32,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "children": <ForwardRef
                                        component="input"
                                        name="test"
                                      />,
                                      "immutable": true,
                                    }
                                  }
                                />,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <form>
                                    <input
                                      value=""
                                    />
                                  </form>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "didError": false,
                                "earliestPendingTime": 0,
                                "earliestSuspendedTime": 0,
                                "expirationTime": 0,
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "interactionThreadID": 12,
                                "latestPendingTime": 0,
                                "latestPingedTime": 0,
                                "latestSuspendedTime": 0,
                                "memoizedInteractions": Set {},
                                "nextExpirationTimeToWorkOn": 0,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "pendingInteractionMap": Map {},
                                "timeoutHandle": -1,
                              },
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "children": <ForwardRef
                                          component="input"
                                          name="test"
                                        />,
                                        "immutable": true,
                                      }
                                    }
                                  />,
                                },
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": null,
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": null,
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "children": <ForwardRef
                              component="input"
                              name="test"
                            />,
                            "immutable": true,
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": <ForwardRef
                              component="input"
                              name="test"
                            />,
                            "immutable": true,
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 49,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "children": <ForwardRef
                                  component="input"
                                  name="test"
                                />,
                                "immutable": true,
                              },
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "children": <ForwardRef
                                  component="input"
                                  name="test"
                                />,
                                "immutable": true,
                              },
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "children": <ForwardRef
                                  component="input"
                                  name="test"
                                />,
                                "immutable": true,
                              },
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 47,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": FiberNode {
                                "_debugID": 47,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": [Circular],
                                "child": null,
                                "childExpirationTime": 0,
                                "effectTag": 0,
                                "expirationTime": 1,
                                "firstContextDependency": null,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <form>
                                      <input
                                        value=""
                                      />
                                    </form>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "didError": false,
                                  "earliestPendingTime": 0,
                                  "earliestSuspendedTime": 0,
                                  "expirationTime": 0,
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "interactionThreadID": 12,
                                  "latestPendingTime": 0,
                                  "latestPingedTime": 0,
                                  "latestSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextExpirationTimeToWorkOn": 0,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "timeoutHandle": -1,
                                },
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "children": <ForwardRef
                                              component="input"
                                              name="test"
                                            />,
                                            "immutable": true,
                                          }
                                        }
                                      />,
                                    },
                                    "tag": 0,
                                  },
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "children": <ForwardRef
                                              component="input"
                                              name="test"
                                            />,
                                            "immutable": true,
                                          }
                                        }
                                      />,
                                    },
                                    "tag": 0,
                                  },
                                },
                              },
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "effectTag": 32,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "children": <ForwardRef
                                        component="input"
                                        name="test"
                                      />,
                                      "immutable": true,
                                    }
                                  }
                                />,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <form>
                                    <input
                                      value=""
                                    />
                                  </form>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "didError": false,
                                "earliestPendingTime": 0,
                                "earliestSuspendedTime": 0,
                                "expirationTime": 0,
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "interactionThreadID": 12,
                                "latestPendingTime": 0,
                                "latestPingedTime": 0,
                                "latestSuspendedTime": 0,
                                "memoizedInteractions": Set {},
                                "nextExpirationTimeToWorkOn": 0,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "pendingInteractionMap": Map {},
                                "timeoutHandle": -1,
                              },
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "children": <ForwardRef
                                          component="input"
                                          name="test"
                                        />,
                                        "immutable": true,
                                      }
                                    }
                                  />,
                                },
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": null,
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": null,
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": Provider {
                            "__reactInternalMemoizedMergedChildContext": Object {
                              "store": Object {
                                "dispatch": [Function],
                                "getState": [Function],
                                "replaceReducer": [Function],
                                "subscribe": [Function],
                                Symbol(observable): [Function],
                              },
                            },
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "children": <ForwardRef
                                component="input"
                                name="test"
                              />,
                              "immutable": true,
                            },
                            "refs": Object {},
                            "state": null,
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": Form {
                          "__reactInternalMemoizedMaskedChildContext": Object {
                            "store": Object {
                              "dispatch": [Function],
                              "getState": [Function],
                              "replaceReducer": [Function],
                              "subscribe": [Function],
                              Symbol(observable): [Function],
                            },
                          },
                          "__reactInternalMemoizedMergedChildContext": Object {
                            "_reformRedux": Object {
                              "field": Object {
                                "changeFieldValue": [Function],
                                "changeFieldsValues": [Function],
                                "removeField": [Function],
                                "resetField": [Function],
                                "resetFields": [Function],
                                "setFieldDisabled": [Function],
                                "setFieldErrors": [Function],
                                "setFieldTouched": [Function],
                                "setFieldsDisabled": [Function],
                                "setFieldsErrors": [Function],
                                "setFieldsTouched": [Function],
                              },
                              "form": Object {
                                "fieldsCount": Object {
                                  "test": 1,
                                },
                                "initialized": false,
                                "name": "form",
                                "path": Array [
                                  "form",
                                ],
                                "registerField": [Function],
                                "resetForm": [Function],
                                "unregisterField": [Function],
                                "updateForm": [Function],
                              },
                            },
                            "store": Object {
                              "dispatch": [Function],
                              "getState": [Function],
                              "replaceReducer": [Function],
                              "subscribe": [Function],
                              Symbol(observable): [Function],
                            },
                          },
                          "__reactInternalMemoizedUnmaskedChildContext": Object {
                            "store": Object {
                              "dispatch": [Function],
                              "getState": [Function],
                              "replaceReducer": [Function],
                              "subscribe": [Function],
                              Symbol(observable): [Function],
                            },
                          },
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {
                            "store": Object {
                              "dispatch": [Function],
                              "getState": [Function],
                              "replaceReducer": [Function],
                              "subscribe": [Function],
                              Symbol(observable): [Function],
                            },
                          },
                          "decreaseFieldCount": [Function],
                          "fieldsCount": Object {
                            "form": Object {
                              "test": 1,
                            },
                          },
                          "fieldsStack": Object {
                            "form": Object {
                              "test": Immutable.Map {
                                "value": "",
                                "errors": Immutable.List [],
                                "valid": true,
                                "touched": false,
                                "changed": false,
                                "disabled": false,
                              },
                            },
                          },
                          "fieldsValidateStack": Object {
                            "form": Object {
                              "test": Immutable.List [],
                            },
                          },
                          "formName": "form",
                          "handleSubmit": [Function],
                          "increaseFieldCount": [Function],
                          "initialized": true,
                          "path": Array [
                            "form",
                          ],
                          "props": Object {
                            "children": <ForwardRef
                              component="input"
                              name="test"
                            />,
                            "onSubmit": [Function],
                            "onSubmitFailed": [Function],
                            "path": "form",
                          },
                          "refs": Object {},
                          "registerField": [Function],
                          "state": null,
                          "unregisterField": [Function],
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "treeBaseDuration": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": <form>
                        <input
                          value=""
                        />
                      </form>,
                      "tag": 7,
                      "treeBaseDuration": 0,
                      "type": "form",
                      "updateQueue": null,
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": null,
                    "tag": 13,
                    "treeBaseDuration": 0,
                    "type": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "render": [Function],
                    },
                    "updateQueue": null,
                  },
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 55,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "disabled": false,
                      "onBlur": [Function],
                      "onChange": [Function],
                      "onFocus": [Function],
                      "value": "",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "disabled": false,
                      "onBlur": [Function],
                      "onChange": [Function],
                      "onFocus": [Function],
                      "value": "",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": <input
                      value=""
                    />,
                    "tag": 7,
                    "treeBaseDuration": 0,
                    "type": "input",
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "component": "input",
                    "disabled": false,
                    "innerRef": null,
                    "name": "test",
                    "value": "",
                  },
                  "memoizedState": Object {
                    "field": Immutable.Map {
                      "value": "",
                      "errors": Immutable.List [],
                      "valid": true,
                      "touched": false,
                      "changed": false,
                      "disabled": false,
                    },
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "component": "input",
                    "disabled": false,
                    "innerRef": null,
                    "name": "test",
                    "value": "",
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 53,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "component": "input",
                      "name": "test",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "component": "input",
                      "name": "test",
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 52,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 51,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": FiberNode {
                          "_debugID": 50,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": FiberNode {
                            "_debugID": 49,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "children": <ForwardRef
                                  component="input"
                                  name="test"
                                />,
                                "immutable": true,
                              },
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "children": <ForwardRef
                                  component="input"
                                  name="test"
                                />,
                                "immutable": true,
                              },
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "children": <ForwardRef
                                  component="input"
                                  name="test"
                                />,
                                "immutable": true,
                              },
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 47,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": FiberNode {
                                "_debugID": 47,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": [Circular],
                                "child": null,
                                "childExpirationTime": 0,
                                "effectTag": 0,
                                "expirationTime": 1,
                                "firstContextDependency": null,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <form>
                                      <input
                                        value=""
                                      />
                                    </form>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "didError": false,
                                  "earliestPendingTime": 0,
                                  "earliestSuspendedTime": 0,
                                  "expirationTime": 0,
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "interactionThreadID": 12,
                                  "latestPendingTime": 0,
                                  "latestPingedTime": 0,
                                  "latestSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextExpirationTimeToWorkOn": 0,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "timeoutHandle": -1,
                                },
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "children": <ForwardRef
                                              component="input"
                                              name="test"
                                            />,
                                            "immutable": true,
                                          }
                                        }
                                      />,
                                    },
                                    "tag": 0,
                                  },
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "children": <ForwardRef
                                              component="input"
                                              name="test"
                                            />,
                                            "immutable": true,
                                          }
                                        }
                                      />,
                                    },
                                    "tag": 0,
                                  },
                                },
                              },
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "effectTag": 32,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "children": <ForwardRef
                                        component="input"
                                        name="test"
                                      />,
                                      "immutable": true,
                                    }
                                  }
                                />,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <form>
                                    <input
                                      value=""
                                    />
                                  </form>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "didError": false,
                                "earliestPendingTime": 0,
                                "earliestSuspendedTime": 0,
                                "expirationTime": 0,
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "interactionThreadID": 12,
                                "latestPendingTime": 0,
                                "latestPingedTime": 0,
                                "latestSuspendedTime": 0,
                                "memoizedInteractions": Set {},
                                "nextExpirationTimeToWorkOn": 0,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "pendingInteractionMap": Map {},
                                "timeoutHandle": -1,
                              },
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "children": <ForwardRef
                                          component="input"
                                          name="test"
                                        />,
                                        "immutable": true,
                                      }
                                    }
                                  />,
                                },
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": null,
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": null,
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "children": <ForwardRef
                              component="input"
                              name="test"
                            />,
                            "immutable": true,
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": <ForwardRef
                              component="input"
                              name="test"
                            />,
                            "immutable": true,
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 49,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "children": <ForwardRef
                                  component="input"
                                  name="test"
                                />,
                                "immutable": true,
                              },
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "children": <ForwardRef
                                  component="input"
                                  name="test"
                                />,
                                "immutable": true,
                              },
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "children": <ForwardRef
                                  component="input"
                                  name="test"
                                />,
                                "immutable": true,
                              },
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 47,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": FiberNode {
                                "_debugID": 47,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": [Circular],
                                "child": null,
                                "childExpirationTime": 0,
                                "effectTag": 0,
                                "expirationTime": 1,
                                "firstContextDependency": null,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <form>
                                      <input
                                        value=""
                                      />
                                    </form>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "didError": false,
                                  "earliestPendingTime": 0,
                                  "earliestSuspendedTime": 0,
                                  "expirationTime": 0,
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "interactionThreadID": 12,
                                  "latestPendingTime": 0,
                                  "latestPingedTime": 0,
                                  "latestSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextExpirationTimeToWorkOn": 0,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "timeoutHandle": -1,
                                },
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "children": <ForwardRef
                                              component="input"
                                              name="test"
                                            />,
                                            "immutable": true,
                                          }
                                        }
                                      />,
                                    },
                                    "tag": 0,
                                  },
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "children": <ForwardRef
                                              component="input"
                                              name="test"
                                            />,
                                            "immutable": true,
                                          }
                                        }
                                      />,
                                    },
                                    "tag": 0,
                                  },
                                },
                              },
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "effectTag": 32,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "children": <ForwardRef
                                        component="input"
                                        name="test"
                                      />,
                                      "immutable": true,
                                    }
                                  }
                                />,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <form>
                                    <input
                                      value=""
                                    />
                                  </form>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "didError": false,
                                "earliestPendingTime": 0,
                                "earliestSuspendedTime": 0,
                                "expirationTime": 0,
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "interactionThreadID": 12,
                                "latestPendingTime": 0,
                                "latestPingedTime": 0,
                                "latestSuspendedTime": 0,
                                "memoizedInteractions": Set {},
                                "nextExpirationTimeToWorkOn": 0,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "pendingInteractionMap": Map {},
                                "timeoutHandle": -1,
                              },
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "children": <ForwardRef
                                          component="input"
                                          name="test"
                                        />,
                                        "immutable": true,
                                      }
                                    }
                                  />,
                                },
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": null,
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": null,
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": Provider {
                            "__reactInternalMemoizedMergedChildContext": Object {
                              "store": Object {
                                "dispatch": [Function],
                                "getState": [Function],
                                "replaceReducer": [Function],
                                "subscribe": [Function],
                                Symbol(observable): [Function],
                              },
                            },
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "children": <ForwardRef
                                component="input"
                                name="test"
                              />,
                              "immutable": true,
                            },
                            "refs": Object {},
                            "state": null,
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": [Circular],
                        "childExpirationTime": 0,
                        "effectTag": 5,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": <ForwardRef
                            component="input"
                            name="test"
                          />,
                          "onSubmit": [Function],
                          "onSubmitFailed": [Function],
                          "path": "form",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": <ForwardRef
                            component="input"
                            name="test"
                          />,
                          "onSubmit": [Function],
                          "onSubmitFailed": [Function],
                          "path": "form",
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 50,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": FiberNode {
                            "_debugID": 49,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "children": <ForwardRef
                                  component="input"
                                  name="test"
                                />,
                                "immutable": true,
                              },
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "children": <ForwardRef
                                  component="input"
                                  name="test"
                                />,
                                "immutable": true,
                              },
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "children": <ForwardRef
                                  component="input"
                                  name="test"
                                />,
                                "immutable": true,
                              },
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 47,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": FiberNode {
                                "_debugID": 47,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": [Circular],
                                "child": null,
                                "childExpirationTime": 0,
                                "effectTag": 0,
                                "expirationTime": 1,
                                "firstContextDependency": null,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <form>
                                      <input
                                        value=""
                                      />
                                    </form>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "didError": false,
                                  "earliestPendingTime": 0,
                                  "earliestSuspendedTime": 0,
                                  "expirationTime": 0,
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "interactionThreadID": 12,
                                  "latestPendingTime": 0,
                                  "latestPingedTime": 0,
                                  "latestSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextExpirationTimeToWorkOn": 0,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "timeoutHandle": -1,
                                },
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "children": <ForwardRef
                                              component="input"
                                              name="test"
                                            />,
                                            "immutable": true,
                                          }
                                        }
                                      />,
                                    },
                                    "tag": 0,
                                  },
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "children": <ForwardRef
                                              component="input"
                                              name="test"
                                            />,
                                            "immutable": true,
                                          }
                                        }
                                      />,
                                    },
                                    "tag": 0,
                                  },
                                },
                              },
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "effectTag": 32,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "children": <ForwardRef
                                        component="input"
                                        name="test"
                                      />,
                                      "immutable": true,
                                    }
                                  }
                                />,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <form>
                                    <input
                                      value=""
                                    />
                                  </form>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "didError": false,
                                "earliestPendingTime": 0,
                                "earliestSuspendedTime": 0,
                                "expirationTime": 0,
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "interactionThreadID": 12,
                                "latestPendingTime": 0,
                                "latestPingedTime": 0,
                                "latestSuspendedTime": 0,
                                "memoizedInteractions": Set {},
                                "nextExpirationTimeToWorkOn": 0,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "pendingInteractionMap": Map {},
                                "timeoutHandle": -1,
                              },
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "children": <ForwardRef
                                          component="input"
                                          name="test"
                                        />,
                                        "immutable": true,
                                      }
                                    }
                                  />,
                                },
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": null,
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": null,
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "children": <ForwardRef
                              component="input"
                              name="test"
                            />,
                            "immutable": true,
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": <ForwardRef
                              component="input"
                              name="test"
                            />,
                            "immutable": true,
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 49,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "children": <ForwardRef
                                  component="input"
                                  name="test"
                                />,
                                "immutable": true,
                              },
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "children": <ForwardRef
                                  component="input"
                                  name="test"
                                />,
                                "immutable": true,
                              },
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "children": <ForwardRef
                                  component="input"
                                  name="test"
                                />,
                                "immutable": true,
                              },
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 47,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": FiberNode {
                                "_debugID": 47,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": [Circular],
                                "child": null,
                                "childExpirationTime": 0,
                                "effectTag": 0,
                                "expirationTime": 1,
                                "firstContextDependency": null,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <form>
                                      <input
                                        value=""
                                      />
                                    </form>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "didError": false,
                                  "earliestPendingTime": 0,
                                  "earliestSuspendedTime": 0,
                                  "expirationTime": 0,
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "interactionThreadID": 12,
                                  "latestPendingTime": 0,
                                  "latestPingedTime": 0,
                                  "latestSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextExpirationTimeToWorkOn": 0,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "timeoutHandle": -1,
                                },
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "children": <ForwardRef
                                              component="input"
                                              name="test"
                                            />,
                                            "immutable": true,
                                          }
                                        }
                                      />,
                                    },
                                    "tag": 0,
                                  },
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "children": <ForwardRef
                                              component="input"
                                              name="test"
                                            />,
                                            "immutable": true,
                                          }
                                        }
                                      />,
                                    },
                                    "tag": 0,
                                  },
                                },
                              },
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "effectTag": 32,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "children": <ForwardRef
                                        component="input"
                                        name="test"
                                      />,
                                      "immutable": true,
                                    }
                                  }
                                />,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <form>
                                    <input
                                      value=""
                                    />
                                  </form>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "didError": false,
                                "earliestPendingTime": 0,
                                "earliestSuspendedTime": 0,
                                "expirationTime": 0,
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "interactionThreadID": 12,
                                "latestPendingTime": 0,
                                "latestPingedTime": 0,
                                "latestSuspendedTime": 0,
                                "memoizedInteractions": Set {},
                                "nextExpirationTimeToWorkOn": 0,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "pendingInteractionMap": Map {},
                                "timeoutHandle": -1,
                              },
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "children": <ForwardRef
                                          component="input"
                                          name="test"
                                        />,
                                        "immutable": true,
                                      }
                                    }
                                  />,
                                },
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": null,
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": null,
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": Provider {
                            "__reactInternalMemoizedMergedChildContext": Object {
                              "store": Object {
                                "dispatch": [Function],
                                "getState": [Function],
                                "replaceReducer": [Function],
                                "subscribe": [Function],
                                Symbol(observable): [Function],
                              },
                            },
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "children": <ForwardRef
                                component="input"
                                name="test"
                              />,
                              "immutable": true,
                            },
                            "refs": Object {},
                            "state": null,
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": Form {
                          "__reactInternalMemoizedMaskedChildContext": Object {
                            "store": Object {
                              "dispatch": [Function],
                              "getState": [Function],
                              "replaceReducer": [Function],
                              "subscribe": [Function],
                              Symbol(observable): [Function],
                            },
                          },
                          "__reactInternalMemoizedMergedChildContext": Object {
                            "_reformRedux": Object {
                              "field": Object {
                                "changeFieldValue": [Function],
                                "changeFieldsValues": [Function],
                                "removeField": [Function],
                                "resetField": [Function],
                                "resetFields": [Function],
                                "setFieldDisabled": [Function],
                                "setFieldErrors": [Function],
                                "setFieldTouched": [Function],
                                "setFieldsDisabled": [Function],
                                "setFieldsErrors": [Function],
                                "setFieldsTouched": [Function],
                              },
                              "form": Object {
                                "fieldsCount": Object {
                                  "test": 1,
                                },
                                "initialized": false,
                                "name": "form",
                                "path": Array [
                                  "form",
                                ],
                                "registerField": [Function],
                                "resetForm": [Function],
                                "unregisterField": [Function],
                                "updateForm": [Function],
                              },
                            },
                            "store": Object {
                              "dispatch": [Function],
                              "getState": [Function],
                              "replaceReducer": [Function],
                              "subscribe": [Function],
                              Symbol(observable): [Function],
                            },
                          },
                          "__reactInternalMemoizedUnmaskedChildContext": Object {
                            "store": Object {
                              "dispatch": [Function],
                              "getState": [Function],
                              "replaceReducer": [Function],
                              "subscribe": [Function],
                              Symbol(observable): [Function],
                            },
                          },
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {
                            "store": Object {
                              "dispatch": [Function],
                              "getState": [Function],
                              "replaceReducer": [Function],
                              "subscribe": [Function],
                              Symbol(observable): [Function],
                            },
                          },
                          "decreaseFieldCount": [Function],
                          "fieldsCount": Object {
                            "form": Object {
                              "test": 1,
                            },
                          },
                          "fieldsStack": Object {
                            "form": Object {
                              "test": Immutable.Map {
                                "value": "",
                                "errors": Immutable.List [],
                                "valid": true,
                                "touched": false,
                                "changed": false,
                                "disabled": false,
                              },
                            },
                          },
                          "fieldsValidateStack": Object {
                            "form": Object {
                              "test": Immutable.List [],
                            },
                          },
                          "formName": "form",
                          "handleSubmit": [Function],
                          "increaseFieldCount": [Function],
                          "initialized": true,
                          "path": Array [
                            "form",
                          ],
                          "props": Object {
                            "children": <ForwardRef
                              component="input"
                              name="test"
                            />,
                            "onSubmit": [Function],
                            "onSubmitFailed": [Function],
                            "path": "form",
                          },
                          "refs": Object {},
                          "registerField": [Function],
                          "state": null,
                          "unregisterField": [Function],
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "treeBaseDuration": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": <ForwardRef
                          component="input"
                          name="test"
                        />,
                        "onSubmit": [Function],
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": <ForwardRef
                          component="input"
                          name="test"
                        />,
                        "onSubmit": [Function],
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 51,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": FiberNode {
                          "_debugID": 50,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": FiberNode {
                            "_debugID": 49,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "children": <ForwardRef
                                  component="input"
                                  name="test"
                                />,
                                "immutable": true,
                              },
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "children": <ForwardRef
                                  component="input"
                                  name="test"
                                />,
                                "immutable": true,
                              },
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "children": <ForwardRef
                                  component="input"
                                  name="test"
                                />,
                                "immutable": true,
                              },
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 47,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": FiberNode {
                                "_debugID": 47,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": [Circular],
                                "child": null,
                                "childExpirationTime": 0,
                                "effectTag": 0,
                                "expirationTime": 1,
                                "firstContextDependency": null,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <form>
                                      <input
                                        value=""
                                      />
                                    </form>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "didError": false,
                                  "earliestPendingTime": 0,
                                  "earliestSuspendedTime": 0,
                                  "expirationTime": 0,
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "interactionThreadID": 12,
                                  "latestPendingTime": 0,
                                  "latestPingedTime": 0,
                                  "latestSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextExpirationTimeToWorkOn": 0,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "timeoutHandle": -1,
                                },
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "children": <ForwardRef
                                              component="input"
                                              name="test"
                                            />,
                                            "immutable": true,
                                          }
                                        }
                                      />,
                                    },
                                    "tag": 0,
                                  },
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "children": <ForwardRef
                                              component="input"
                                              name="test"
                                            />,
                                            "immutable": true,
                                          }
                                        }
                                      />,
                                    },
                                    "tag": 0,
                                  },
                                },
                              },
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "effectTag": 32,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "children": <ForwardRef
                                        component="input"
                                        name="test"
                                      />,
                                      "immutable": true,
                                    }
                                  }
                                />,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <form>
                                    <input
                                      value=""
                                    />
                                  </form>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "didError": false,
                                "earliestPendingTime": 0,
                                "earliestSuspendedTime": 0,
                                "expirationTime": 0,
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "interactionThreadID": 12,
                                "latestPendingTime": 0,
                                "latestPingedTime": 0,
                                "latestSuspendedTime": 0,
                                "memoizedInteractions": Set {},
                                "nextExpirationTimeToWorkOn": 0,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "pendingInteractionMap": Map {},
                                "timeoutHandle": -1,
                              },
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "children": <ForwardRef
                                          component="input"
                                          name="test"
                                        />,
                                        "immutable": true,
                                      }
                                    }
                                  />,
                                },
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": null,
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": null,
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "children": <ForwardRef
                              component="input"
                              name="test"
                            />,
                            "immutable": true,
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": <ForwardRef
                              component="input"
                              name="test"
                            />,
                            "immutable": true,
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 49,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "children": <ForwardRef
                                  component="input"
                                  name="test"
                                />,
                                "immutable": true,
                              },
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "children": <ForwardRef
                                  component="input"
                                  name="test"
                                />,
                                "immutable": true,
                              },
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "children": <ForwardRef
                                  component="input"
                                  name="test"
                                />,
                                "immutable": true,
                              },
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 47,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": FiberNode {
                                "_debugID": 47,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": [Circular],
                                "child": null,
                                "childExpirationTime": 0,
                                "effectTag": 0,
                                "expirationTime": 1,
                                "firstContextDependency": null,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <form>
                                      <input
                                        value=""
                                      />
                                    </form>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "didError": false,
                                  "earliestPendingTime": 0,
                                  "earliestSuspendedTime": 0,
                                  "expirationTime": 0,
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "interactionThreadID": 12,
                                  "latestPendingTime": 0,
                                  "latestPingedTime": 0,
                                  "latestSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextExpirationTimeToWorkOn": 0,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "timeoutHandle": -1,
                                },
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "children": <ForwardRef
                                              component="input"
                                              name="test"
                                            />,
                                            "immutable": true,
                                          }
                                        }
                                      />,
                                    },
                                    "tag": 0,
                                  },
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "children": <ForwardRef
                                              component="input"
                                              name="test"
                                            />,
                                            "immutable": true,
                                          }
                                        }
                                      />,
                                    },
                                    "tag": 0,
                                  },
                                },
                              },
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "effectTag": 32,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "children": <ForwardRef
                                        component="input"
                                        name="test"
                                      />,
                                      "immutable": true,
                                    }
                                  }
                                />,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <form>
                                    <input
                                      value=""
                                    />
                                  </form>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "didError": false,
                                "earliestPendingTime": 0,
                                "earliestSuspendedTime": 0,
                                "expirationTime": 0,
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "interactionThreadID": 12,
                                "latestPendingTime": 0,
                                "latestPingedTime": 0,
                                "latestSuspendedTime": 0,
                                "memoizedInteractions": Set {},
                                "nextExpirationTimeToWorkOn": 0,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "pendingInteractionMap": Map {},
                                "timeoutHandle": -1,
                              },
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "children": <ForwardRef
                                          component="input"
                                          name="test"
                                        />,
                                        "immutable": true,
                                      }
                                    }
                                  />,
                                },
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": null,
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": null,
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": Provider {
                            "__reactInternalMemoizedMergedChildContext": Object {
                              "store": Object {
                                "dispatch": [Function],
                                "getState": [Function],
                                "replaceReducer": [Function],
                                "subscribe": [Function],
                                Symbol(observable): [Function],
                              },
                            },
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "children": <ForwardRef
                                component="input"
                                name="test"
                              />,
                              "immutable": true,
                            },
                            "refs": Object {},
                            "state": null,
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": [Circular],
                        "childExpirationTime": 0,
                        "effectTag": 5,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": <ForwardRef
                            component="input"
                            name="test"
                          />,
                          "onSubmit": [Function],
                          "onSubmitFailed": [Function],
                          "path": "form",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": <ForwardRef
                            component="input"
                            name="test"
                          />,
                          "onSubmit": [Function],
                          "onSubmitFailed": [Function],
                          "path": "form",
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 50,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": FiberNode {
                            "_debugID": 49,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "children": <ForwardRef
                                  component="input"
                                  name="test"
                                />,
                                "immutable": true,
                              },
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "children": <ForwardRef
                                  component="input"
                                  name="test"
                                />,
                                "immutable": true,
                              },
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "children": <ForwardRef
                                  component="input"
                                  name="test"
                                />,
                                "immutable": true,
                              },
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 47,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": FiberNode {
                                "_debugID": 47,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": [Circular],
                                "child": null,
                                "childExpirationTime": 0,
                                "effectTag": 0,
                                "expirationTime": 1,
                                "firstContextDependency": null,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <form>
                                      <input
                                        value=""
                                      />
                                    </form>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "didError": false,
                                  "earliestPendingTime": 0,
                                  "earliestSuspendedTime": 0,
                                  "expirationTime": 0,
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "interactionThreadID": 12,
                                  "latestPendingTime": 0,
                                  "latestPingedTime": 0,
                                  "latestSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextExpirationTimeToWorkOn": 0,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "timeoutHandle": -1,
                                },
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "children": <ForwardRef
                                              component="input"
                                              name="test"
                                            />,
                                            "immutable": true,
                                          }
                                        }
                                      />,
                                    },
                                    "tag": 0,
                                  },
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "children": <ForwardRef
                                              component="input"
                                              name="test"
                                            />,
                                            "immutable": true,
                                          }
                                        }
                                      />,
                                    },
                                    "tag": 0,
                                  },
                                },
                              },
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "effectTag": 32,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "children": <ForwardRef
                                        component="input"
                                        name="test"
                                      />,
                                      "immutable": true,
                                    }
                                  }
                                />,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <form>
                                    <input
                                      value=""
                                    />
                                  </form>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "didError": false,
                                "earliestPendingTime": 0,
                                "earliestSuspendedTime": 0,
                                "expirationTime": 0,
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "interactionThreadID": 12,
                                "latestPendingTime": 0,
                                "latestPingedTime": 0,
                                "latestSuspendedTime": 0,
                                "memoizedInteractions": Set {},
                                "nextExpirationTimeToWorkOn": 0,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "pendingInteractionMap": Map {},
                                "timeoutHandle": -1,
                              },
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "children": <ForwardRef
                                          component="input"
                                          name="test"
                                        />,
                                        "immutable": true,
                                      }
                                    }
                                  />,
                                },
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": null,
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": null,
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "children": <ForwardRef
                              component="input"
                              name="test"
                            />,
                            "immutable": true,
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": <ForwardRef
                              component="input"
                              name="test"
                            />,
                            "immutable": true,
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 49,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "children": <ForwardRef
                                  component="input"
                                  name="test"
                                />,
                                "immutable": true,
                              },
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "children": <ForwardRef
                                  component="input"
                                  name="test"
                                />,
                                "immutable": true,
                              },
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "children": <ForwardRef
                                  component="input"
                                  name="test"
                                />,
                                "immutable": true,
                              },
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 47,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": FiberNode {
                                "_debugID": 47,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": [Circular],
                                "child": null,
                                "childExpirationTime": 0,
                                "effectTag": 0,
                                "expirationTime": 1,
                                "firstContextDependency": null,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <form>
                                      <input
                                        value=""
                                      />
                                    </form>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "didError": false,
                                  "earliestPendingTime": 0,
                                  "earliestSuspendedTime": 0,
                                  "expirationTime": 0,
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "interactionThreadID": 12,
                                  "latestPendingTime": 0,
                                  "latestPingedTime": 0,
                                  "latestSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextExpirationTimeToWorkOn": 0,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "timeoutHandle": -1,
                                },
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "children": <ForwardRef
                                              component="input"
                                              name="test"
                                            />,
                                            "immutable": true,
                                          }
                                        }
                                      />,
                                    },
                                    "tag": 0,
                                  },
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "children": <ForwardRef
                                              component="input"
                                              name="test"
                                            />,
                                            "immutable": true,
                                          }
                                        }
                                      />,
                                    },
                                    "tag": 0,
                                  },
                                },
                              },
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "effectTag": 32,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "children": <ForwardRef
                                        component="input"
                                        name="test"
                                      />,
                                      "immutable": true,
                                    }
                                  }
                                />,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <form>
                                    <input
                                      value=""
                                    />
                                  </form>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "didError": false,
                                "earliestPendingTime": 0,
                                "earliestSuspendedTime": 0,
                                "expirationTime": 0,
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "interactionThreadID": 12,
                                "latestPendingTime": 0,
                                "latestPingedTime": 0,
                                "latestSuspendedTime": 0,
                                "memoizedInteractions": Set {},
                                "nextExpirationTimeToWorkOn": 0,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "pendingInteractionMap": Map {},
                                "timeoutHandle": -1,
                              },
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "children": <ForwardRef
                                          component="input"
                                          name="test"
                                        />,
                                        "immutable": true,
                                      }
                                    }
                                  />,
                                },
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": null,
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": null,
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": Provider {
                            "__reactInternalMemoizedMergedChildContext": Object {
                              "store": Object {
                                "dispatch": [Function],
                                "getState": [Function],
                                "replaceReducer": [Function],
                                "subscribe": [Function],
                                Symbol(observable): [Function],
                              },
                            },
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "children": <ForwardRef
                                component="input"
                                name="test"
                              />,
                              "immutable": true,
                            },
                            "refs": Object {},
                            "state": null,
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": Form {
                          "__reactInternalMemoizedMaskedChildContext": Object {
                            "store": Object {
                              "dispatch": [Function],
                              "getState": [Function],
                              "replaceReducer": [Function],
                              "subscribe": [Function],
                              Symbol(observable): [Function],
                            },
                          },
                          "__reactInternalMemoizedMergedChildContext": Object {
                            "_reformRedux": Object {
                              "field": Object {
                                "changeFieldValue": [Function],
                                "changeFieldsValues": [Function],
                                "removeField": [Function],
                                "resetField": [Function],
                                "resetFields": [Function],
                                "setFieldDisabled": [Function],
                                "setFieldErrors": [Function],
                                "setFieldTouched": [Function],
                                "setFieldsDisabled": [Function],
                                "setFieldsErrors": [Function],
                                "setFieldsTouched": [Function],
                              },
                              "form": Object {
                                "fieldsCount": Object {
                                  "test": 1,
                                },
                                "initialized": false,
                                "name": "form",
                                "path": Array [
                                  "form",
                                ],
                                "registerField": [Function],
                                "resetForm": [Function],
                                "unregisterField": [Function],
                                "updateForm": [Function],
                              },
                            },
                            "store": Object {
                              "dispatch": [Function],
                              "getState": [Function],
                              "replaceReducer": [Function],
                              "subscribe": [Function],
                              Symbol(observable): [Function],
                            },
                          },
                          "__reactInternalMemoizedUnmaskedChildContext": Object {
                            "store": Object {
                              "dispatch": [Function],
                              "getState": [Function],
                              "replaceReducer": [Function],
                              "subscribe": [Function],
                              Symbol(observable): [Function],
                            },
                          },
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {
                            "store": Object {
                              "dispatch": [Function],
                              "getState": [Function],
                              "replaceReducer": [Function],
                              "subscribe": [Function],
                              Symbol(observable): [Function],
                            },
                          },
                          "decreaseFieldCount": [Function],
                          "fieldsCount": Object {
                            "form": Object {
                              "test": 1,
                            },
                          },
                          "fieldsStack": Object {
                            "form": Object {
                              "test": Immutable.Map {
                                "value": "",
                                "errors": Immutable.List [],
                                "valid": true,
                                "touched": false,
                                "changed": false,
                                "disabled": false,
                              },
                            },
                          },
                          "fieldsValidateStack": Object {
                            "form": Object {
                              "test": Immutable.List [],
                            },
                          },
                          "formName": "form",
                          "handleSubmit": [Function],
                          "increaseFieldCount": [Function],
                          "initialized": true,
                          "path": Array [
                            "form",
                          ],
                          "props": Object {
                            "children": <ForwardRef
                              component="input"
                              name="test"
                            />,
                            "onSubmit": [Function],
                            "onSubmitFailed": [Function],
                            "path": "form",
                          },
                          "refs": Object {},
                          "registerField": [Function],
                          "state": null,
                          "unregisterField": [Function],
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "treeBaseDuration": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": <form>
                        <input
                          value=""
                        />
                      </form>,
                      "tag": 7,
                      "treeBaseDuration": 0,
                      "type": "form",
                      "updateQueue": null,
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": null,
                    "tag": 13,
                    "treeBaseDuration": 0,
                    "type": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "render": [Function],
                    },
                    "updateQueue": null,
                  },
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": [Circular],
                  "tag": 2,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": null,
                },
                "_reactInternalInstance": Object {},
                "changeFieldValue": [Function],
                "changeFieldValueHandler": [Function],
                "context": Object {
                  "_reformRedux": Object {
                    "field": Object {
                      "changeFieldValue": [Function],
                      "changeFieldsValues": [Function],
                      "removeField": [Function],
                      "resetField": [Function],
                      "resetFields": [Function],
                      "setFieldDisabled": [Function],
                      "setFieldErrors": [Function],
                      "setFieldTouched": [Function],
                      "setFieldsDisabled": [Function],
                      "setFieldsErrors": [Function],
                      "setFieldsTouched": [Function],
                    },
                    "form": Object {
                      "fieldsCount": Object {
                        "test": 1,
                      },
                      "initialized": false,
                      "name": "form",
                      "path": Array [
                        "form",
                      ],
                      "registerField": [Function],
                      "resetForm": [Function],
                      "unregisterField": [Function],
                      "updateForm": [Function],
                    },
                  },
                  "store": Object {
                    "dispatch": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                    Symbol(observable): [Function],
                  },
                },
                "getFieldValue": [Function],
                "initialFieldData": Immutable.Map {
                  "value": "",
                  "errors": Immutable.List [],
                  "valid": true,
                  "touched": false,
                  "changed": false,
                  "disabled": false,
                },
                "isCheckbox": [Function],
                "isRadio": [Function],
                "isRadioOrCheckbox": [Function],
                "onBlurFieldHandler": [Function],
                "onFocusFieldHandler": [Function],
                "props": Object {
                  "component": "input",
                  "disabled": false,
                  "innerRef": null,
                  "name": "test",
                  "value": "",
                },
                "refs": Object {},
                "registerField": [Function],
                "setFieldErrors": [Function],
                "state": Object {
                  "field": Immutable.Map {
                    "value": "",
                    "errors": Immutable.List [],
                    "valid": true,
                    "touched": false,
                    "changed": false,
                    "disabled": false,
                  },
                },
                "unsubscribeFromStore": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": "input",
                "disabled": false,
                "innerRef": null,
                "name": "test",
                "value": "",
              },
              "ref": null,
              "rendered": Object {
                "instance": <input
                  value=""
                />,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "disabled": false,
                  "onBlur": [Function],
                  "onChange": [Function],
                  "onFocus": [Function],
                  "value": "",
                },
                "ref": null,
                "rendered": Array [
                  undefined,
                ],
                "type": "input",
              },
              "type": [Function],
            },
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "render": [Function],
            },
          },
        ],
        "type": "form",
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": Provider {
        "__reactInternalMemoizedMergedChildContext": Object {
          "store": Object {
            "dispatch": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
            Symbol(observable): [Function],
          },
        },
        "_reactInternalFiber": FiberNode {
          "_debugID": 50,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": FiberNode {
            "_debugID": 49,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "effectTag": 1,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": FiberNode {
              "_debugID": 51,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 52,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 53,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 54,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 55,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "disabled": false,
                        "onBlur": [Function],
                        "onChange": [Function],
                        "onFocus": [Function],
                        "value": "",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "disabled": false,
                        "onBlur": [Function],
                        "onChange": [Function],
                        "onFocus": [Function],
                        "value": "",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": <input
                        value=""
                      />,
                      "tag": 7,
                      "treeBaseDuration": 0,
                      "type": "input",
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "component": "input",
                      "disabled": false,
                      "innerRef": null,
                      "name": "test",
                      "value": "",
                    },
                    "memoizedState": Object {
                      "field": Immutable.Map {
                        "value": "",
                        "errors": Immutable.List [],
                        "valid": true,
                        "touched": false,
                        "changed": false,
                        "disabled": false,
                      },
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "component": "input",
                      "disabled": false,
                      "innerRef": null,
                      "name": "test",
                      "value": "",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": Field {
                      "__reactInternalMemoizedMaskedChildContext": Object {
                        "_reformRedux": Object {
                          "field": Object {
                            "changeFieldValue": [Function],
                            "changeFieldsValues": [Function],
                            "removeField": [Function],
                            "resetField": [Function],
                            "resetFields": [Function],
                            "setFieldDisabled": [Function],
                            "setFieldErrors": [Function],
                            "setFieldTouched": [Function],
                            "setFieldsDisabled": [Function],
                            "setFieldsErrors": [Function],
                            "setFieldsTouched": [Function],
                          },
                          "form": Object {
                            "fieldsCount": Object {
                              "test": 1,
                            },
                            "initialized": false,
                            "name": "form",
                            "path": Array [
                              "form",
                            ],
                            "registerField": [Function],
                            "resetForm": [Function],
                            "unregisterField": [Function],
                            "updateForm": [Function],
                          },
                        },
                        "store": Object {
                          "dispatch": [Function],
                          "getState": [Function],
                          "replaceReducer": [Function],
                          "subscribe": [Function],
                          Symbol(observable): [Function],
                        },
                      },
                      "__reactInternalMemoizedUnmaskedChildContext": Object {
                        "_reformRedux": Object {
                          "field": Object {
                            "changeFieldValue": [Function],
                            "changeFieldsValues": [Function],
                            "removeField": [Function],
                            "resetField": [Function],
                            "resetFields": [Function],
                            "setFieldDisabled": [Function],
                            "setFieldErrors": [Function],
                            "setFieldTouched": [Function],
                            "setFieldsDisabled": [Function],
                            "setFieldsErrors": [Function],
                            "setFieldsTouched": [Function],
                          },
                          "form": Object {
                            "fieldsCount": Object {
                              "test": 1,
                            },
                            "initialized": false,
                            "name": "form",
                            "path": Array [
                              "form",
                            ],
                            "registerField": [Function],
                            "resetForm": [Function],
                            "unregisterField": [Function],
                            "updateForm": [Function],
                          },
                        },
                        "store": Object {
                          "dispatch": [Function],
                          "getState": [Function],
                          "replaceReducer": [Function],
                          "subscribe": [Function],
                          Symbol(observable): [Function],
                        },
                      },
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "changeFieldValue": [Function],
                      "changeFieldValueHandler": [Function],
                      "context": Object {
                        "_reformRedux": Object {
                          "field": Object {
                            "changeFieldValue": [Function],
                            "changeFieldsValues": [Function],
                            "removeField": [Function],
                            "resetField": [Function],
                            "resetFields": [Function],
                            "setFieldDisabled": [Function],
                            "setFieldErrors": [Function],
                            "setFieldTouched": [Function],
                            "setFieldsDisabled": [Function],
                            "setFieldsErrors": [Function],
                            "setFieldsTouched": [Function],
                          },
                          "form": Object {
                            "fieldsCount": Object {
                              "test": 1,
                            },
                            "initialized": false,
                            "name": "form",
                            "path": Array [
                              "form",
                            ],
                            "registerField": [Function],
                            "resetForm": [Function],
                            "unregisterField": [Function],
                            "updateForm": [Function],
                          },
                        },
                        "store": Object {
                          "dispatch": [Function],
                          "getState": [Function],
                          "replaceReducer": [Function],
                          "subscribe": [Function],
                          Symbol(observable): [Function],
                        },
                      },
                      "getFieldValue": [Function],
                      "initialFieldData": Immutable.Map {
                        "value": "",
                        "errors": Immutable.List [],
                        "valid": true,
                        "touched": false,
                        "changed": false,
                        "disabled": false,
                      },
                      "isCheckbox": [Function],
                      "isRadio": [Function],
                      "isRadioOrCheckbox": [Function],
                      "onBlurFieldHandler": [Function],
                      "onFocusFieldHandler": [Function],
                      "props": Object {
                        "component": "input",
                        "disabled": false,
                        "innerRef": null,
                        "name": "test",
                        "value": "",
                      },
                      "refs": Object {},
                      "registerField": [Function],
                      "setFieldErrors": [Function],
                      "state": Object {
                        "field": Immutable.Map {
                          "value": "",
                          "errors": Immutable.List [],
                          "valid": true,
                          "touched": false,
                          "changed": false,
                          "disabled": false,
                        },
                      },
                      "unsubscribeFromStore": [Function],
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "component": "input",
                    "name": "test",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "component": "input",
                    "name": "test",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 13,
                  "treeBaseDuration": 0,
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "render": [Function],
                  },
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "effectTag": 0,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": <ForwardRef
                    component="input"
                    name="test"
                  />,
                  "onSubmit": [Function],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <ForwardRef
                    component="input"
                    name="test"
                  />,
                  "onSubmit": [Function],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": <form>
                  <input
                    value=""
                  />
                </form>,
                "tag": 7,
                "treeBaseDuration": 0,
                "type": "form",
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "effectTag": 5,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": <ForwardRef
                  component="input"
                  name="test"
                />,
                "onSubmit": [Function],
                "onSubmitFailed": [Function],
                "path": "form",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <ForwardRef
                  component="input"
                  name="test"
                />,
                "onSubmit": [Function],
                "onSubmitFailed": [Function],
                "path": "form",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Form {
                "__reactInternalMemoizedMaskedChildContext": Object {
                  "store": Object {
                    "dispatch": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                    Symbol(observable): [Function],
                  },
                },
                "__reactInternalMemoizedMergedChildContext": Object {
                  "_reformRedux": Object {
                    "field": Object {
                      "changeFieldValue": [Function],
                      "changeFieldsValues": [Function],
                      "removeField": [Function],
                      "resetField": [Function],
                      "resetFields": [Function],
                      "setFieldDisabled": [Function],
                      "setFieldErrors": [Function],
                      "setFieldTouched": [Function],
                      "setFieldsDisabled": [Function],
                      "setFieldsErrors": [Function],
                      "setFieldsTouched": [Function],
                    },
                    "form": Object {
                      "fieldsCount": Object {
                        "test": 1,
                      },
                      "initialized": false,
                      "name": "form",
                      "path": Array [
                        "form",
                      ],
                      "registerField": [Function],
                      "resetForm": [Function],
                      "unregisterField": [Function],
                      "updateForm": [Function],
                    },
                  },
                  "store": Object {
                    "dispatch": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                    Symbol(observable): [Function],
                  },
                },
                "__reactInternalMemoizedUnmaskedChildContext": Object {
                  "store": Object {
                    "dispatch": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                    Symbol(observable): [Function],
                  },
                },
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {
                  "store": Object {
                    "dispatch": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                    Symbol(observable): [Function],
                  },
                },
                "decreaseFieldCount": [Function],
                "fieldsCount": Object {
                  "form": Object {
                    "test": 1,
                  },
                },
                "fieldsStack": Object {
                  "form": Object {
                    "test": Immutable.Map {
                      "value": "",
                      "errors": Immutable.List [],
                      "valid": true,
                      "touched": false,
                      "changed": false,
                      "disabled": false,
                    },
                  },
                },
                "fieldsValidateStack": Object {
                  "form": Object {
                    "test": Immutable.List [],
                  },
                },
                "formName": "form",
                "handleSubmit": [Function],
                "increaseFieldCount": [Function],
                "initialized": true,
                "path": Array [
                  "form",
                ],
                "props": Object {
                  "children": <ForwardRef
                    component="input"
                    name="test"
                  />,
                  "onSubmit": [Function],
                  "onSubmitFailed": [Function],
                  "path": "form",
                },
                "refs": Object {},
                "registerField": [Function],
                "state": null,
                "unregisterField": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 2,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "index": 0,
            "key": null,
            "lastEffect": FiberNode {
              "_debugID": 51,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 52,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 53,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 54,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 55,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "disabled": false,
                        "onBlur": [Function],
                        "onChange": [Function],
                        "onFocus": [Function],
                        "value": "",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "disabled": false,
                        "onBlur": [Function],
                        "onChange": [Function],
                        "onFocus": [Function],
                        "value": "",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": <input
                        value=""
                      />,
                      "tag": 7,
                      "treeBaseDuration": 0,
                      "type": "input",
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "component": "input",
                      "disabled": false,
                      "innerRef": null,
                      "name": "test",
                      "value": "",
                    },
                    "memoizedState": Object {
                      "field": Immutable.Map {
                        "value": "",
                        "errors": Immutable.List [],
                        "valid": true,
                        "touched": false,
                        "changed": false,
                        "disabled": false,
                      },
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "component": "input",
                      "disabled": false,
                      "innerRef": null,
                      "name": "test",
                      "value": "",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": Field {
                      "__reactInternalMemoizedMaskedChildContext": Object {
                        "_reformRedux": Object {
                          "field": Object {
                            "changeFieldValue": [Function],
                            "changeFieldsValues": [Function],
                            "removeField": [Function],
                            "resetField": [Function],
                            "resetFields": [Function],
                            "setFieldDisabled": [Function],
                            "setFieldErrors": [Function],
                            "setFieldTouched": [Function],
                            "setFieldsDisabled": [Function],
                            "setFieldsErrors": [Function],
                            "setFieldsTouched": [Function],
                          },
                          "form": Object {
                            "fieldsCount": Object {
                              "test": 1,
                            },
                            "initialized": false,
                            "name": "form",
                            "path": Array [
                              "form",
                            ],
                            "registerField": [Function],
                            "resetForm": [Function],
                            "unregisterField": [Function],
                            "updateForm": [Function],
                          },
                        },
                        "store": Object {
                          "dispatch": [Function],
                          "getState": [Function],
                          "replaceReducer": [Function],
                          "subscribe": [Function],
                          Symbol(observable): [Function],
                        },
                      },
                      "__reactInternalMemoizedUnmaskedChildContext": Object {
                        "_reformRedux": Object {
                          "field": Object {
                            "changeFieldValue": [Function],
                            "changeFieldsValues": [Function],
                            "removeField": [Function],
                            "resetField": [Function],
                            "resetFields": [Function],
                            "setFieldDisabled": [Function],
                            "setFieldErrors": [Function],
                            "setFieldTouched": [Function],
                            "setFieldsDisabled": [Function],
                            "setFieldsErrors": [Function],
                            "setFieldsTouched": [Function],
                          },
                          "form": Object {
                            "fieldsCount": Object {
                              "test": 1,
                            },
                            "initialized": false,
                            "name": "form",
                            "path": Array [
                              "form",
                            ],
                            "registerField": [Function],
                            "resetForm": [Function],
                            "unregisterField": [Function],
                            "updateForm": [Function],
                          },
                        },
                        "store": Object {
                          "dispatch": [Function],
                          "getState": [Function],
                          "replaceReducer": [Function],
                          "subscribe": [Function],
                          Symbol(observable): [Function],
                        },
                      },
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "changeFieldValue": [Function],
                      "changeFieldValueHandler": [Function],
                      "context": Object {
                        "_reformRedux": Object {
                          "field": Object {
                            "changeFieldValue": [Function],
                            "changeFieldsValues": [Function],
                            "removeField": [Function],
                            "resetField": [Function],
                            "resetFields": [Function],
                            "setFieldDisabled": [Function],
                            "setFieldErrors": [Function],
                            "setFieldTouched": [Function],
                            "setFieldsDisabled": [Function],
                            "setFieldsErrors": [Function],
                            "setFieldsTouched": [Function],
                          },
                          "form": Object {
                            "fieldsCount": Object {
                              "test": 1,
                            },
                            "initialized": false,
                            "name": "form",
                            "path": Array [
                              "form",
                            ],
                            "registerField": [Function],
                            "resetForm": [Function],
                            "unregisterField": [Function],
                            "updateForm": [Function],
                          },
                        },
                        "store": Object {
                          "dispatch": [Function],
                          "getState": [Function],
                          "replaceReducer": [Function],
                          "subscribe": [Function],
                          Symbol(observable): [Function],
                        },
                      },
                      "getFieldValue": [Function],
                      "initialFieldData": Immutable.Map {
                        "value": "",
                        "errors": Immutable.List [],
                        "valid": true,
                        "touched": false,
                        "changed": false,
                        "disabled": false,
                      },
                      "isCheckbox": [Function],
                      "isRadio": [Function],
                      "isRadioOrCheckbox": [Function],
                      "onBlurFieldHandler": [Function],
                      "onFocusFieldHandler": [Function],
                      "props": Object {
                        "component": "input",
                        "disabled": false,
                        "innerRef": null,
                        "name": "test",
                        "value": "",
                      },
                      "refs": Object {},
                      "registerField": [Function],
                      "setFieldErrors": [Function],
                      "state": Object {
                        "field": Immutable.Map {
                          "value": "",
                          "errors": Immutable.List [],
                          "valid": true,
                          "touched": false,
                          "changed": false,
                          "disabled": false,
                        },
                      },
                      "unsubscribeFromStore": [Function],
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "component": "input",
                    "name": "test",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "component": "input",
                    "name": "test",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 13,
                  "treeBaseDuration": 0,
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "render": [Function],
                  },
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "effectTag": 0,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": <ForwardRef
                    component="input"
                    name="test"
                  />,
                  "onSubmit": [Function],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <ForwardRef
                    component="input"
                    name="test"
                  />,
                  "onSubmit": [Function],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": <form>
                  <input
                    value=""
                  />
                </form>,
                "tag": 7,
                "treeBaseDuration": 0,
                "type": "form",
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "effectTag": 5,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": <ForwardRef
                  component="input"
                  name="test"
                />,
                "onSubmit": [Function],
                "onSubmitFailed": [Function],
                "path": "form",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <ForwardRef
                  component="input"
                  name="test"
                />,
                "onSubmit": [Function],
                "onSubmitFailed": [Function],
                "path": "form",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Form {
                "__reactInternalMemoizedMaskedChildContext": Object {
                  "store": Object {
                    "dispatch": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                    Symbol(observable): [Function],
                  },
                },
                "__reactInternalMemoizedMergedChildContext": Object {
                  "_reformRedux": Object {
                    "field": Object {
                      "changeFieldValue": [Function],
                      "changeFieldsValues": [Function],
                      "removeField": [Function],
                      "resetField": [Function],
                      "resetFields": [Function],
                      "setFieldDisabled": [Function],
                      "setFieldErrors": [Function],
                      "setFieldTouched": [Function],
                      "setFieldsDisabled": [Function],
                      "setFieldsErrors": [Function],
                      "setFieldsTouched": [Function],
                    },
                    "form": Object {
                      "fieldsCount": Object {
                        "test": 1,
                      },
                      "initialized": false,
                      "name": "form",
                      "path": Array [
                        "form",
                      ],
                      "registerField": [Function],
                      "resetForm": [Function],
                      "unregisterField": [Function],
                      "updateForm": [Function],
                    },
                  },
                  "store": Object {
                    "dispatch": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                    Symbol(observable): [Function],
                  },
                },
                "__reactInternalMemoizedUnmaskedChildContext": Object {
                  "store": Object {
                    "dispatch": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                    Symbol(observable): [Function],
                  },
                },
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {
                  "store": Object {
                    "dispatch": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                    Symbol(observable): [Function],
                  },
                },
                "decreaseFieldCount": [Function],
                "fieldsCount": Object {
                  "form": Object {
                    "test": 1,
                  },
                },
                "fieldsStack": Object {
                  "form": Object {
                    "test": Immutable.Map {
                      "value": "",
                      "errors": Immutable.List [],
                      "valid": true,
                      "touched": false,
                      "changed": false,
                      "disabled": false,
                    },
                  },
                },
                "fieldsValidateStack": Object {
                  "form": Object {
                    "test": Immutable.List [],
                  },
                },
                "formName": "form",
                "handleSubmit": [Function],
                "increaseFieldCount": [Function],
                "initialized": true,
                "path": Array [
                  "form",
                ],
                "props": Object {
                  "children": <ForwardRef
                    component="input"
                    name="test"
                  />,
                  "onSubmit": [Function],
                  "onSubmitFailed": [Function],
                  "path": "form",
                },
                "refs": Object {},
                "registerField": [Function],
                "state": null,
                "unregisterField": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 2,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "children": <ForwardRef
                  component="input"
                  name="test"
                />,
                "immutable": true,
              },
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "children": <ForwardRef
                  component="input"
                  name="test"
                />,
                "immutable": true,
              },
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "children": <ForwardRef
                  component="input"
                  name="test"
                />,
                "immutable": true,
              },
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugID": 47,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childExpirationTime": 0,
                "effectTag": 0,
                "expirationTime": 1,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <form>
                      <input
                        value=""
                      />
                    </form>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 12,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "timeoutHandle": -1,
                },
                "tag": 5,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "children": <ForwardRef
                              component="input"
                              name="test"
                            />,
                            "immutable": true,
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "children": <ForwardRef
                              component="input"
                              name="test"
                            />,
                            "immutable": true,
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "childExpirationTime": 0,
              "effectTag": 32,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": FiberNode {
                "_debugID": 51,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 52,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 53,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 54,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 55,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "disabled": false,
                          "onBlur": [Function],
                          "onChange": [Function],
                          "onFocus": [Function],
                          "value": "",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "disabled": false,
                          "onBlur": [Function],
                          "onChange": [Function],
                          "onFocus": [Function],
                          "value": "",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <input
                          value=""
                        />,
                        "tag": 7,
                        "treeBaseDuration": 0,
                        "type": "input",
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "component": "input",
                        "disabled": false,
                        "innerRef": null,
                        "name": "test",
                        "value": "",
                      },
                      "memoizedState": Object {
                        "field": Immutable.Map {
                          "value": "",
                          "errors": Immutable.List [],
                          "valid": true,
                          "touched": false,
                          "changed": false,
                          "disabled": false,
                        },
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "component": "input",
                        "disabled": false,
                        "innerRef": null,
                        "name": "test",
                        "value": "",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": Field {
                        "__reactInternalMemoizedMaskedChildContext": Object {
                          "_reformRedux": Object {
                            "field": Object {
                              "changeFieldValue": [Function],
                              "changeFieldsValues": [Function],
                              "removeField": [Function],
                              "resetField": [Function],
                              "resetFields": [Function],
                              "setFieldDisabled": [Function],
                              "setFieldErrors": [Function],
                              "setFieldTouched": [Function],
                              "setFieldsDisabled": [Function],
                              "setFieldsErrors": [Function],
                              "setFieldsTouched": [Function],
                            },
                            "form": Object {
                              "fieldsCount": Object {
                                "test": 1,
                              },
                              "initialized": false,
                              "name": "form",
                              "path": Array [
                                "form",
                              ],
                              "registerField": [Function],
                              "resetForm": [Function],
                              "unregisterField": [Function],
                              "updateForm": [Function],
                            },
                          },
                          "store": Object {
                            "dispatch": [Function],
                            "getState": [Function],
                            "replaceReducer": [Function],
                            "subscribe": [Function],
                            Symbol(observable): [Function],
                          },
                        },
                        "__reactInternalMemoizedUnmaskedChildContext": Object {
                          "_reformRedux": Object {
                            "field": Object {
                              "changeFieldValue": [Function],
                              "changeFieldsValues": [Function],
                              "removeField": [Function],
                              "resetField": [Function],
                              "resetFields": [Function],
                              "setFieldDisabled": [Function],
                              "setFieldErrors": [Function],
                              "setFieldTouched": [Function],
                              "setFieldsDisabled": [Function],
                              "setFieldsErrors": [Function],
                              "setFieldsTouched": [Function],
                            },
                            "form": Object {
                              "fieldsCount": Object {
                                "test": 1,
                              },
                              "initialized": false,
                              "name": "form",
                              "path": Array [
                                "form",
                              ],
                              "registerField": [Function],
                              "resetForm": [Function],
                              "unregisterField": [Function],
                              "updateForm": [Function],
                            },
                          },
                          "store": Object {
                            "dispatch": [Function],
                            "getState": [Function],
                            "replaceReducer": [Function],
                            "subscribe": [Function],
                            Symbol(observable): [Function],
                          },
                        },
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "changeFieldValue": [Function],
                        "changeFieldValueHandler": [Function],
                        "context": Object {
                          "_reformRedux": Object {
                            "field": Object {
                              "changeFieldValue": [Function],
                              "changeFieldsValues": [Function],
                              "removeField": [Function],
                              "resetField": [Function],
                              "resetFields": [Function],
                              "setFieldDisabled": [Function],
                              "setFieldErrors": [Function],
                              "setFieldTouched": [Function],
                              "setFieldsDisabled": [Function],
                              "setFieldsErrors": [Function],
                              "setFieldsTouched": [Function],
                            },
                            "form": Object {
                              "fieldsCount": Object {
                                "test": 1,
                              },
                              "initialized": false,
                              "name": "form",
                              "path": Array [
                                "form",
                              ],
                              "registerField": [Function],
                              "resetForm": [Function],
                              "unregisterField": [Function],
                              "updateForm": [Function],
                            },
                          },
                          "store": Object {
                            "dispatch": [Function],
                            "getState": [Function],
                            "replaceReducer": [Function],
                            "subscribe": [Function],
                            Symbol(observable): [Function],
                          },
                        },
                        "getFieldValue": [Function],
                        "initialFieldData": Immutable.Map {
                          "value": "",
                          "errors": Immutable.List [],
                          "valid": true,
                          "touched": false,
                          "changed": false,
                          "disabled": false,
                        },
                        "isCheckbox": [Function],
                        "isRadio": [Function],
                        "isRadioOrCheckbox": [Function],
                        "onBlurFieldHandler": [Function],
                        "onFocusFieldHandler": [Function],
                        "props": Object {
                          "component": "input",
                          "disabled": false,
                          "innerRef": null,
                          "name": "test",
                          "value": "",
                        },
                        "refs": Object {},
                        "registerField": [Function],
                        "setFieldErrors": [Function],
                        "state": Object {
                          "field": Immutable.Map {
                            "value": "",
                            "errors": Immutable.List [],
                            "valid": true,
                            "touched": false,
                            "changed": false,
                            "disabled": false,
                          },
                        },
                        "unsubscribeFromStore": [Function],
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "component": "input",
                      "name": "test",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "component": "input",
                      "name": "test",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": null,
                    "tag": 13,
                    "treeBaseDuration": 0,
                    "type": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "render": [Function],
                    },
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": <ForwardRef
                      component="input"
                      name="test"
                    />,
                    "onSubmit": [Function],
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": <ForwardRef
                      component="input"
                      name="test"
                    />,
                    "onSubmit": [Function],
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": <form>
                    <input
                      value=""
                    />
                  </form>,
                  "tag": 7,
                  "treeBaseDuration": 0,
                  "type": "form",
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "effectTag": 5,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": <ForwardRef
                    component="input"
                    name="test"
                  />,
                  "onSubmit": [Function],
                  "onSubmitFailed": [Function],
                  "path": "form",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <ForwardRef
                    component="input"
                    name="test"
                  />,
                  "onSubmit": [Function],
                  "onSubmitFailed": [Function],
                  "path": "form",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Form {
                  "__reactInternalMemoizedMaskedChildContext": Object {
                    "store": Object {
                      "dispatch": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                      Symbol(observable): [Function],
                    },
                  },
                  "__reactInternalMemoizedMergedChildContext": Object {
                    "_reformRedux": Object {
                      "field": Object {
                        "changeFieldValue": [Function],
                        "changeFieldsValues": [Function],
                        "removeField": [Function],
                        "resetField": [Function],
                        "resetFields": [Function],
                        "setFieldDisabled": [Function],
                        "setFieldErrors": [Function],
                        "setFieldTouched": [Function],
                        "setFieldsDisabled": [Function],
                        "setFieldsErrors": [Function],
                        "setFieldsTouched": [Function],
                      },
                      "form": Object {
                        "fieldsCount": Object {
                          "test": 1,
                        },
                        "initialized": false,
                        "name": "form",
                        "path": Array [
                          "form",
                        ],
                        "registerField": [Function],
                        "resetForm": [Function],
                        "unregisterField": [Function],
                        "updateForm": [Function],
                      },
                    },
                    "store": Object {
                      "dispatch": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                      Symbol(observable): [Function],
                    },
                  },
                  "__reactInternalMemoizedUnmaskedChildContext": Object {
                    "store": Object {
                      "dispatch": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                      Symbol(observable): [Function],
                    },
                  },
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {
                    "store": Object {
                      "dispatch": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                      Symbol(observable): [Function],
                    },
                  },
                  "decreaseFieldCount": [Function],
                  "fieldsCount": Object {
                    "form": Object {
                      "test": 1,
                    },
                  },
                  "fieldsStack": Object {
                    "form": Object {
                      "test": Immutable.Map {
                        "value": "",
                        "errors": Immutable.List [],
                        "valid": true,
                        "touched": false,
                        "changed": false,
                        "disabled": false,
                      },
                    },
                  },
                  "fieldsValidateStack": Object {
                    "form": Object {
                      "test": Immutable.List [],
                    },
                  },
                  "formName": "form",
                  "handleSubmit": [Function],
                  "increaseFieldCount": [Function],
                  "initialized": true,
                  "path": Array [
                    "form",
                  ],
                  "props": Object {
                    "children": <ForwardRef
                      component="input"
                      name="test"
                    />,
                    "onSubmit": [Function],
                    "onSubmitFailed": [Function],
                    "path": "form",
                  },
                  "refs": Object {},
                  "registerField": [Function],
                  "state": null,
                  "unregisterField": [Function],
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 2,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": null,
              },
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "children": <ForwardRef
                        component="input"
                        name="test"
                      />,
                      "immutable": true,
                    }
                  }
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <form>
                    <input
                      value=""
                    />
                  </form>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "timeoutHandle": -1,
              },
              "tag": 5,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "children": <ForwardRef
                          component="input"
                          name="test"
                        />,
                        "immutable": true,
                      }
                    }
                  />,
                },
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "children": <ForwardRef
                    component="input"
                    name="test"
                  />,
                  "immutable": true,
                },
              },
              "refs": Object {},
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "children": <ForwardRef
                    component="input"
                    name="test"
                  />,
                  "immutable": true,
                },
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 51,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 52,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 53,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 54,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 55,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "disabled": false,
                      "onBlur": [Function],
                      "onChange": [Function],
                      "onFocus": [Function],
                      "value": "",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "disabled": false,
                      "onBlur": [Function],
                      "onChange": [Function],
                      "onFocus": [Function],
                      "value": "",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": <input
                      value=""
                    />,
                    "tag": 7,
                    "treeBaseDuration": 0,
                    "type": "input",
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "component": "input",
                    "disabled": false,
                    "innerRef": null,
                    "name": "test",
                    "value": "",
                  },
                  "memoizedState": Object {
                    "field": Immutable.Map {
                      "value": "",
                      "errors": Immutable.List [],
                      "valid": true,
                      "touched": false,
                      "changed": false,
                      "disabled": false,
                    },
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "component": "input",
                    "disabled": false,
                    "innerRef": null,
                    "name": "test",
                    "value": "",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Field {
                    "__reactInternalMemoizedMaskedChildContext": Object {
                      "_reformRedux": Object {
                        "field": Object {
                          "changeFieldValue": [Function],
                          "changeFieldsValues": [Function],
                          "removeField": [Function],
                          "resetField": [Function],
                          "resetFields": [Function],
                          "setFieldDisabled": [Function],
                          "setFieldErrors": [Function],
                          "setFieldTouched": [Function],
                          "setFieldsDisabled": [Function],
                          "setFieldsErrors": [Function],
                          "setFieldsTouched": [Function],
                        },
                        "form": Object {
                          "fieldsCount": Object {
                            "test": 1,
                          },
                          "initialized": false,
                          "name": "form",
                          "path": Array [
                            "form",
                          ],
                          "registerField": [Function],
                          "resetForm": [Function],
                          "unregisterField": [Function],
                          "updateForm": [Function],
                        },
                      },
                      "store": Object {
                        "dispatch": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                        Symbol(observable): [Function],
                      },
                    },
                    "__reactInternalMemoizedUnmaskedChildContext": Object {
                      "_reformRedux": Object {
                        "field": Object {
                          "changeFieldValue": [Function],
                          "changeFieldsValues": [Function],
                          "removeField": [Function],
                          "resetField": [Function],
                          "resetFields": [Function],
                          "setFieldDisabled": [Function],
                          "setFieldErrors": [Function],
                          "setFieldTouched": [Function],
                          "setFieldsDisabled": [Function],
                          "setFieldsErrors": [Function],
                          "setFieldsTouched": [Function],
                        },
                        "form": Object {
                          "fieldsCount": Object {
                            "test": 1,
                          },
                          "initialized": false,
                          "name": "form",
                          "path": Array [
                            "form",
                          ],
                          "registerField": [Function],
                          "resetForm": [Function],
                          "unregisterField": [Function],
                          "updateForm": [Function],
                        },
                      },
                      "store": Object {
                        "dispatch": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                        Symbol(observable): [Function],
                      },
                    },
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "changeFieldValue": [Function],
                    "changeFieldValueHandler": [Function],
                    "context": Object {
                      "_reformRedux": Object {
                        "field": Object {
                          "changeFieldValue": [Function],
                          "changeFieldsValues": [Function],
                          "removeField": [Function],
                          "resetField": [Function],
                          "resetFields": [Function],
                          "setFieldDisabled": [Function],
                          "setFieldErrors": [Function],
                          "setFieldTouched": [Function],
                          "setFieldsDisabled": [Function],
                          "setFieldsErrors": [Function],
                          "setFieldsTouched": [Function],
                        },
                        "form": Object {
                          "fieldsCount": Object {
                            "test": 1,
                          },
                          "initialized": false,
                          "name": "form",
                          "path": Array [
                            "form",
                          ],
                          "registerField": [Function],
                          "resetForm": [Function],
                          "unregisterField": [Function],
                          "updateForm": [Function],
                        },
                      },
                      "store": Object {
                        "dispatch": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                        Symbol(observable): [Function],
                      },
                    },
                    "getFieldValue": [Function],
                    "initialFieldData": Immutable.Map {
                      "value": "",
                      "errors": Immutable.List [],
                      "valid": true,
                      "touched": false,
                      "changed": false,
                      "disabled": false,
                    },
                    "isCheckbox": [Function],
                    "isRadio": [Function],
                    "isRadioOrCheckbox": [Function],
                    "onBlurFieldHandler": [Function],
                    "onFocusFieldHandler": [Function],
                    "props": Object {
                      "component": "input",
                      "disabled": false,
                      "innerRef": null,
                      "name": "test",
                      "value": "",
                    },
                    "refs": Object {},
                    "registerField": [Function],
                    "setFieldErrors": [Function],
                    "state": Object {
                      "field": Immutable.Map {
                        "value": "",
                        "errors": Immutable.List [],
                        "valid": true,
                        "touched": false,
                        "changed": false,
                        "disabled": false,
                      },
                    },
                    "unsubscribeFromStore": [Function],
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "effectTag": 0,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "component": "input",
                  "name": "test",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "component": "input",
                  "name": "test",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 13,
                "treeBaseDuration": 0,
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "render": [Function],
                },
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "effectTag": 0,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": <ForwardRef
                  component="input"
                  name="test"
                />,
                "onSubmit": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <ForwardRef
                  component="input"
                  name="test"
                />,
                "onSubmit": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": <form>
                <input
                  value=""
                />
              </form>,
              "tag": 7,
              "treeBaseDuration": 0,
              "type": "form",
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "effectTag": 5,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": <ForwardRef
                component="input"
                name="test"
              />,
              "onSubmit": [Function],
              "onSubmitFailed": [Function],
              "path": "form",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": <ForwardRef
                component="input"
                name="test"
              />,
              "onSubmit": [Function],
              "onSubmitFailed": [Function],
              "path": "form",
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Form {
              "__reactInternalMemoizedMaskedChildContext": Object {
                "store": Object {
                  "dispatch": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                  Symbol(observable): [Function],
                },
              },
              "__reactInternalMemoizedMergedChildContext": Object {
                "_reformRedux": Object {
                  "field": Object {
                    "changeFieldValue": [Function],
                    "changeFieldsValues": [Function],
                    "removeField": [Function],
                    "resetField": [Function],
                    "resetFields": [Function],
                    "setFieldDisabled": [Function],
                    "setFieldErrors": [Function],
                    "setFieldTouched": [Function],
                    "setFieldsDisabled": [Function],
                    "setFieldsErrors": [Function],
                    "setFieldsTouched": [Function],
                  },
                  "form": Object {
                    "fieldsCount": Object {
                      "test": 1,
                    },
                    "initialized": false,
                    "name": "form",
                    "path": Array [
                      "form",
                    ],
                    "registerField": [Function],
                    "resetForm": [Function],
                    "unregisterField": [Function],
                    "updateForm": [Function],
                  },
                },
                "store": Object {
                  "dispatch": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                  Symbol(observable): [Function],
                },
              },
              "__reactInternalMemoizedUnmaskedChildContext": Object {
                "store": Object {
                  "dispatch": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                  Symbol(observable): [Function],
                },
              },
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {
                "store": Object {
                  "dispatch": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                  Symbol(observable): [Function],
                },
              },
              "decreaseFieldCount": [Function],
              "fieldsCount": Object {
                "form": Object {
                  "test": 1,
                },
              },
              "fieldsStack": Object {
                "form": Object {
                  "test": Immutable.Map {
                    "value": "",
                    "errors": Immutable.List [],
                    "valid": true,
                    "touched": false,
                    "changed": false,
                    "disabled": false,
                  },
                },
              },
              "fieldsValidateStack": Object {
                "form": Object {
                  "test": Immutable.List [],
                },
              },
              "formName": "form",
              "handleSubmit": [Function],
              "increaseFieldCount": [Function],
              "initialized": true,
              "path": Array [
                "form",
              ],
              "props": Object {
                "children": <ForwardRef
                  component="input"
                  name="test"
                />,
                "onSubmit": [Function],
                "onSubmitFailed": [Function],
                "path": "form",
              },
              "refs": Object {},
              "registerField": [Function],
              "state": null,
              "unregisterField": [Function],
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "childExpirationTime": 0,
          "effectTag": 1,
          "expirationTime": 0,
          "firstContextDependency": null,
          "firstEffect": FiberNode {
            "_debugID": 51,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 52,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 53,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 54,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 55,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "disabled": false,
                      "onBlur": [Function],
                      "onChange": [Function],
                      "onFocus": [Function],
                      "value": "",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "disabled": false,
                      "onBlur": [Function],
                      "onChange": [Function],
                      "onFocus": [Function],
                      "value": "",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": <input
                      value=""
                    />,
                    "tag": 7,
                    "treeBaseDuration": 0,
                    "type": "input",
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "component": "input",
                    "disabled": false,
                    "innerRef": null,
                    "name": "test",
                    "value": "",
                  },
                  "memoizedState": Object {
                    "field": Immutable.Map {
                      "value": "",
                      "errors": Immutable.List [],
                      "valid": true,
                      "touched": false,
                      "changed": false,
                      "disabled": false,
                    },
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "component": "input",
                    "disabled": false,
                    "innerRef": null,
                    "name": "test",
                    "value": "",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Field {
                    "__reactInternalMemoizedMaskedChildContext": Object {
                      "_reformRedux": Object {
                        "field": Object {
                          "changeFieldValue": [Function],
                          "changeFieldsValues": [Function],
                          "removeField": [Function],
                          "resetField": [Function],
                          "resetFields": [Function],
                          "setFieldDisabled": [Function],
                          "setFieldErrors": [Function],
                          "setFieldTouched": [Function],
                          "setFieldsDisabled": [Function],
                          "setFieldsErrors": [Function],
                          "setFieldsTouched": [Function],
                        },
                        "form": Object {
                          "fieldsCount": Object {
                            "test": 1,
                          },
                          "initialized": false,
                          "name": "form",
                          "path": Array [
                            "form",
                          ],
                          "registerField": [Function],
                          "resetForm": [Function],
                          "unregisterField": [Function],
                          "updateForm": [Function],
                        },
                      },
                      "store": Object {
                        "dispatch": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                        Symbol(observable): [Function],
                      },
                    },
                    "__reactInternalMemoizedUnmaskedChildContext": Object {
                      "_reformRedux": Object {
                        "field": Object {
                          "changeFieldValue": [Function],
                          "changeFieldsValues": [Function],
                          "removeField": [Function],
                          "resetField": [Function],
                          "resetFields": [Function],
                          "setFieldDisabled": [Function],
                          "setFieldErrors": [Function],
                          "setFieldTouched": [Function],
                          "setFieldsDisabled": [Function],
                          "setFieldsErrors": [Function],
                          "setFieldsTouched": [Function],
                        },
                        "form": Object {
                          "fieldsCount": Object {
                            "test": 1,
                          },
                          "initialized": false,
                          "name": "form",
                          "path": Array [
                            "form",
                          ],
                          "registerField": [Function],
                          "resetForm": [Function],
                          "unregisterField": [Function],
                          "updateForm": [Function],
                        },
                      },
                      "store": Object {
                        "dispatch": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                        Symbol(observable): [Function],
                      },
                    },
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "changeFieldValue": [Function],
                    "changeFieldValueHandler": [Function],
                    "context": Object {
                      "_reformRedux": Object {
                        "field": Object {
                          "changeFieldValue": [Function],
                          "changeFieldsValues": [Function],
                          "removeField": [Function],
                          "resetField": [Function],
                          "resetFields": [Function],
                          "setFieldDisabled": [Function],
                          "setFieldErrors": [Function],
                          "setFieldTouched": [Function],
                          "setFieldsDisabled": [Function],
                          "setFieldsErrors": [Function],
                          "setFieldsTouched": [Function],
                        },
                        "form": Object {
                          "fieldsCount": Object {
                            "test": 1,
                          },
                          "initialized": false,
                          "name": "form",
                          "path": Array [
                            "form",
                          ],
                          "registerField": [Function],
                          "resetForm": [Function],
                          "unregisterField": [Function],
                          "updateForm": [Function],
                        },
                      },
                      "store": Object {
                        "dispatch": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                        Symbol(observable): [Function],
                      },
                    },
                    "getFieldValue": [Function],
                    "initialFieldData": Immutable.Map {
                      "value": "",
                      "errors": Immutable.List [],
                      "valid": true,
                      "touched": false,
                      "changed": false,
                      "disabled": false,
                    },
                    "isCheckbox": [Function],
                    "isRadio": [Function],
                    "isRadioOrCheckbox": [Function],
                    "onBlurFieldHandler": [Function],
                    "onFocusFieldHandler": [Function],
                    "props": Object {
                      "component": "input",
                      "disabled": false,
                      "innerRef": null,
                      "name": "test",
                      "value": "",
                    },
                    "refs": Object {},
                    "registerField": [Function],
                    "setFieldErrors": [Function],
                    "state": Object {
                      "field": Immutable.Map {
                        "value": "",
                        "errors": Immutable.List [],
                        "valid": true,
                        "touched": false,
                        "changed": false,
                        "disabled": false,
                      },
                    },
                    "unsubscribeFromStore": [Function],
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "effectTag": 0,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "component": "input",
                  "name": "test",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "component": "input",
                  "name": "test",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 13,
                "treeBaseDuration": 0,
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "render": [Function],
                },
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "effectTag": 0,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": <ForwardRef
                  component="input"
                  name="test"
                />,
                "onSubmit": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <ForwardRef
                  component="input"
                  name="test"
                />,
                "onSubmit": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": <form>
                <input
                  value=""
                />
              </form>,
              "tag": 7,
              "treeBaseDuration": 0,
              "type": "form",
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "effectTag": 5,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": <ForwardRef
                component="input"
                name="test"
              />,
              "onSubmit": [Function],
              "onSubmitFailed": [Function],
              "path": "form",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": <ForwardRef
                component="input"
                name="test"
              />,
              "onSubmit": [Function],
              "onSubmitFailed": [Function],
              "path": "form",
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Form {
              "__reactInternalMemoizedMaskedChildContext": Object {
                "store": Object {
                  "dispatch": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                  Symbol(observable): [Function],
                },
              },
              "__reactInternalMemoizedMergedChildContext": Object {
                "_reformRedux": Object {
                  "field": Object {
                    "changeFieldValue": [Function],
                    "changeFieldsValues": [Function],
                    "removeField": [Function],
                    "resetField": [Function],
                    "resetFields": [Function],
                    "setFieldDisabled": [Function],
                    "setFieldErrors": [Function],
                    "setFieldTouched": [Function],
                    "setFieldsDisabled": [Function],
                    "setFieldsErrors": [Function],
                    "setFieldsTouched": [Function],
                  },
                  "form": Object {
                    "fieldsCount": Object {
                      "test": 1,
                    },
                    "initialized": false,
                    "name": "form",
                    "path": Array [
                      "form",
                    ],
                    "registerField": [Function],
                    "resetForm": [Function],
                    "unregisterField": [Function],
                    "updateForm": [Function],
                  },
                },
                "store": Object {
                  "dispatch": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                  Symbol(observable): [Function],
                },
              },
              "__reactInternalMemoizedUnmaskedChildContext": Object {
                "store": Object {
                  "dispatch": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                  Symbol(observable): [Function],
                },
              },
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {
                "store": Object {
                  "dispatch": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                  Symbol(observable): [Function],
                },
              },
              "decreaseFieldCount": [Function],
              "fieldsCount": Object {
                "form": Object {
                  "test": 1,
                },
              },
              "fieldsStack": Object {
                "form": Object {
                  "test": Immutable.Map {
                    "value": "",
                    "errors": Immutable.List [],
                    "valid": true,
                    "touched": false,
                    "changed": false,
                    "disabled": false,
                  },
                },
              },
              "fieldsValidateStack": Object {
                "form": Object {
                  "test": Immutable.List [],
                },
              },
              "formName": "form",
              "handleSubmit": [Function],
              "increaseFieldCount": [Function],
              "initialized": true,
              "path": Array [
                "form",
              ],
              "props": Object {
                "children": <ForwardRef
                  component="input"
                  name="test"
                />,
                "onSubmit": [Function],
                "onSubmitFailed": [Function],
                "path": "form",
              },
              "refs": Object {},
              "registerField": [Function],
              "state": null,
              "unregisterField": [Function],
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "index": 0,
          "key": null,
          "lastEffect": FiberNode {
            "_debugID": 51,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 52,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 53,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 54,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 55,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "disabled": false,
                      "onBlur": [Function],
                      "onChange": [Function],
                      "onFocus": [Function],
                      "value": "",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "disabled": false,
                      "onBlur": [Function],
                      "onChange": [Function],
                      "onFocus": [Function],
                      "value": "",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": <input
                      value=""
                    />,
                    "tag": 7,
                    "treeBaseDuration": 0,
                    "type": "input",
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "component": "input",
                    "disabled": false,
                    "innerRef": null,
                    "name": "test",
                    "value": "",
                  },
                  "memoizedState": Object {
                    "field": Immutable.Map {
                      "value": "",
                      "errors": Immutable.List [],
                      "valid": true,
                      "touched": false,
                      "changed": false,
                      "disabled": false,
                    },
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "component": "input",
                    "disabled": false,
                    "innerRef": null,
                    "name": "test",
                    "value": "",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Field {
                    "__reactInternalMemoizedMaskedChildContext": Object {
                      "_reformRedux": Object {
                        "field": Object {
                          "changeFieldValue": [Function],
                          "changeFieldsValues": [Function],
                          "removeField": [Function],
                          "resetField": [Function],
                          "resetFields": [Function],
                          "setFieldDisabled": [Function],
                          "setFieldErrors": [Function],
                          "setFieldTouched": [Function],
                          "setFieldsDisabled": [Function],
                          "setFieldsErrors": [Function],
                          "setFieldsTouched": [Function],
                        },
                        "form": Object {
                          "fieldsCount": Object {
                            "test": 1,
                          },
                          "initialized": false,
                          "name": "form",
                          "path": Array [
                            "form",
                          ],
                          "registerField": [Function],
                          "resetForm": [Function],
                          "unregisterField": [Function],
                          "updateForm": [Function],
                        },
                      },
                      "store": Object {
                        "dispatch": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                        Symbol(observable): [Function],
                      },
                    },
                    "__reactInternalMemoizedUnmaskedChildContext": Object {
                      "_reformRedux": Object {
                        "field": Object {
                          "changeFieldValue": [Function],
                          "changeFieldsValues": [Function],
                          "removeField": [Function],
                          "resetField": [Function],
                          "resetFields": [Function],
                          "setFieldDisabled": [Function],
                          "setFieldErrors": [Function],
                          "setFieldTouched": [Function],
                          "setFieldsDisabled": [Function],
                          "setFieldsErrors": [Function],
                          "setFieldsTouched": [Function],
                        },
                        "form": Object {
                          "fieldsCount": Object {
                            "test": 1,
                          },
                          "initialized": false,
                          "name": "form",
                          "path": Array [
                            "form",
                          ],
                          "registerField": [Function],
                          "resetForm": [Function],
                          "unregisterField": [Function],
                          "updateForm": [Function],
                        },
                      },
                      "store": Object {
                        "dispatch": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                        Symbol(observable): [Function],
                      },
                    },
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "changeFieldValue": [Function],
                    "changeFieldValueHandler": [Function],
                    "context": Object {
                      "_reformRedux": Object {
                        "field": Object {
                          "changeFieldValue": [Function],
                          "changeFieldsValues": [Function],
                          "removeField": [Function],
                          "resetField": [Function],
                          "resetFields": [Function],
                          "setFieldDisabled": [Function],
                          "setFieldErrors": [Function],
                          "setFieldTouched": [Function],
                          "setFieldsDisabled": [Function],
                          "setFieldsErrors": [Function],
                          "setFieldsTouched": [Function],
                        },
                        "form": Object {
                          "fieldsCount": Object {
                            "test": 1,
                          },
                          "initialized": false,
                          "name": "form",
                          "path": Array [
                            "form",
                          ],
                          "registerField": [Function],
                          "resetForm": [Function],
                          "unregisterField": [Function],
                          "updateForm": [Function],
                        },
                      },
                      "store": Object {
                        "dispatch": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                        Symbol(observable): [Function],
                      },
                    },
                    "getFieldValue": [Function],
                    "initialFieldData": Immutable.Map {
                      "value": "",
                      "errors": Immutable.List [],
                      "valid": true,
                      "touched": false,
                      "changed": false,
                      "disabled": false,
                    },
                    "isCheckbox": [Function],
                    "isRadio": [Function],
                    "isRadioOrCheckbox": [Function],
                    "onBlurFieldHandler": [Function],
                    "onFocusFieldHandler": [Function],
                    "props": Object {
                      "component": "input",
                      "disabled": false,
                      "innerRef": null,
                      "name": "test",
                      "value": "",
                    },
                    "refs": Object {},
                    "registerField": [Function],
                    "setFieldErrors": [Function],
                    "state": Object {
                      "field": Immutable.Map {
                        "value": "",
                        "errors": Immutable.List [],
                        "valid": true,
                        "touched": false,
                        "changed": false,
                        "disabled": false,
                      },
                    },
                    "unsubscribeFromStore": [Function],
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "effectTag": 0,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "component": "input",
                  "name": "test",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "component": "input",
                  "name": "test",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 13,
                "treeBaseDuration": 0,
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "render": [Function],
                },
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "effectTag": 0,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": <ForwardRef
                  component="input"
                  name="test"
                />,
                "onSubmit": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <ForwardRef
                  component="input"
                  name="test"
                />,
                "onSubmit": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": <form>
                <input
                  value=""
                />
              </form>,
              "tag": 7,
              "treeBaseDuration": 0,
              "type": "form",
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "effectTag": 5,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": <ForwardRef
                component="input"
                name="test"
              />,
              "onSubmit": [Function],
              "onSubmitFailed": [Function],
              "path": "form",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": <ForwardRef
                component="input"
                name="test"
              />,
              "onSubmit": [Function],
              "onSubmitFailed": [Function],
              "path": "form",
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Form {
              "__reactInternalMemoizedMaskedChildContext": Object {
                "store": Object {
                  "dispatch": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                  Symbol(observable): [Function],
                },
              },
              "__reactInternalMemoizedMergedChildContext": Object {
                "_reformRedux": Object {
                  "field": Object {
                    "changeFieldValue": [Function],
                    "changeFieldsValues": [Function],
                    "removeField": [Function],
                    "resetField": [Function],
                    "resetFields": [Function],
                    "setFieldDisabled": [Function],
                    "setFieldErrors": [Function],
                    "setFieldTouched": [Function],
                    "setFieldsDisabled": [Function],
                    "setFieldsErrors": [Function],
                    "setFieldsTouched": [Function],
                  },
                  "form": Object {
                    "fieldsCount": Object {
                      "test": 1,
                    },
                    "initialized": false,
                    "name": "form",
                    "path": Array [
                      "form",
                    ],
                    "registerField": [Function],
                    "resetForm": [Function],
                    "unregisterField": [Function],
                    "updateForm": [Function],
                  },
                },
                "store": Object {
                  "dispatch": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                  Symbol(observable): [Function],
                },
              },
              "__reactInternalMemoizedUnmaskedChildContext": Object {
                "store": Object {
                  "dispatch": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                  Symbol(observable): [Function],
                },
              },
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {
                "store": Object {
                  "dispatch": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                  Symbol(observable): [Function],
                },
              },
              "decreaseFieldCount": [Function],
              "fieldsCount": Object {
                "form": Object {
                  "test": 1,
                },
              },
              "fieldsStack": Object {
                "form": Object {
                  "test": Immutable.Map {
                    "value": "",
                    "errors": Immutable.List [],
                    "valid": true,
                    "touched": false,
                    "changed": false,
                    "disabled": false,
                  },
                },
              },
              "fieldsValidateStack": Object {
                "form": Object {
                  "test": Immutable.List [],
                },
              },
              "formName": "form",
              "handleSubmit": [Function],
              "increaseFieldCount": [Function],
              "initialized": true,
              "path": Array [
                "form",
              ],
              "props": Object {
                "children": <ForwardRef
                  component="input"
                  name="test"
                />,
                "onSubmit": [Function],
                "onSubmitFailed": [Function],
                "path": "form",
              },
              "refs": Object {},
              "registerField": [Function],
              "state": null,
              "unregisterField": [Function],
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "memoizedProps": Object {
            "children": <ForwardRef
              component="input"
              name="test"
            />,
            "immutable": true,
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": <ForwardRef
              component="input"
              name="test"
            />,
            "immutable": true,
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 49,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "effectTag": 1,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": FiberNode {
              "_debugID": 51,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 52,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 53,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 54,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 55,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "disabled": false,
                        "onBlur": [Function],
                        "onChange": [Function],
                        "onFocus": [Function],
                        "value": "",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "disabled": false,
                        "onBlur": [Function],
                        "onChange": [Function],
                        "onFocus": [Function],
                        "value": "",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": <input
                        value=""
                      />,
                      "tag": 7,
                      "treeBaseDuration": 0,
                      "type": "input",
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "component": "input",
                      "disabled": false,
                      "innerRef": null,
                      "name": "test",
                      "value": "",
                    },
                    "memoizedState": Object {
                      "field": Immutable.Map {
                        "value": "",
                        "errors": Immutable.List [],
                        "valid": true,
                        "touched": false,
                        "changed": false,
                        "disabled": false,
                      },
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "component": "input",
                      "disabled": false,
                      "innerRef": null,
                      "name": "test",
                      "value": "",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": Field {
                      "__reactInternalMemoizedMaskedChildContext": Object {
                        "_reformRedux": Object {
                          "field": Object {
                            "changeFieldValue": [Function],
                            "changeFieldsValues": [Function],
                            "removeField": [Function],
                            "resetField": [Function],
                            "resetFields": [Function],
                            "setFieldDisabled": [Function],
                            "setFieldErrors": [Function],
                            "setFieldTouched": [Function],
                            "setFieldsDisabled": [Function],
                            "setFieldsErrors": [Function],
                            "setFieldsTouched": [Function],
                          },
                          "form": Object {
                            "fieldsCount": Object {
                              "test": 1,
                            },
                            "initialized": false,
                            "name": "form",
                            "path": Array [
                              "form",
                            ],
                            "registerField": [Function],
                            "resetForm": [Function],
                            "unregisterField": [Function],
                            "updateForm": [Function],
                          },
                        },
                        "store": Object {
                          "dispatch": [Function],
                          "getState": [Function],
                          "replaceReducer": [Function],
                          "subscribe": [Function],
                          Symbol(observable): [Function],
                        },
                      },
                      "__reactInternalMemoizedUnmaskedChildContext": Object {
                        "_reformRedux": Object {
                          "field": Object {
                            "changeFieldValue": [Function],
                            "changeFieldsValues": [Function],
                            "removeField": [Function],
                            "resetField": [Function],
                            "resetFields": [Function],
                            "setFieldDisabled": [Function],
                            "setFieldErrors": [Function],
                            "setFieldTouched": [Function],
                            "setFieldsDisabled": [Function],
                            "setFieldsErrors": [Function],
                            "setFieldsTouched": [Function],
                          },
                          "form": Object {
                            "fieldsCount": Object {
                              "test": 1,
                            },
                            "initialized": false,
                            "name": "form",
                            "path": Array [
                              "form",
                            ],
                            "registerField": [Function],
                            "resetForm": [Function],
                            "unregisterField": [Function],
                            "updateForm": [Function],
                          },
                        },
                        "store": Object {
                          "dispatch": [Function],
                          "getState": [Function],
                          "replaceReducer": [Function],
                          "subscribe": [Function],
                          Symbol(observable): [Function],
                        },
                      },
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "changeFieldValue": [Function],
                      "changeFieldValueHandler": [Function],
                      "context": Object {
                        "_reformRedux": Object {
                          "field": Object {
                            "changeFieldValue": [Function],
                            "changeFieldsValues": [Function],
                            "removeField": [Function],
                            "resetField": [Function],
                            "resetFields": [Function],
                            "setFieldDisabled": [Function],
                            "setFieldErrors": [Function],
                            "setFieldTouched": [Function],
                            "setFieldsDisabled": [Function],
                            "setFieldsErrors": [Function],
                            "setFieldsTouched": [Function],
                          },
                          "form": Object {
                            "fieldsCount": Object {
                              "test": 1,
                            },
                            "initialized": false,
                            "name": "form",
                            "path": Array [
                              "form",
                            ],
                            "registerField": [Function],
                            "resetForm": [Function],
                            "unregisterField": [Function],
                            "updateForm": [Function],
                          },
                        },
                        "store": Object {
                          "dispatch": [Function],
                          "getState": [Function],
                          "replaceReducer": [Function],
                          "subscribe": [Function],
                          Symbol(observable): [Function],
                        },
                      },
                      "getFieldValue": [Function],
                      "initialFieldData": Immutable.Map {
                        "value": "",
                        "errors": Immutable.List [],
                        "valid": true,
                        "touched": false,
                        "changed": false,
                        "disabled": false,
                      },
                      "isCheckbox": [Function],
                      "isRadio": [Function],
                      "isRadioOrCheckbox": [Function],
                      "onBlurFieldHandler": [Function],
                      "onFocusFieldHandler": [Function],
                      "props": Object {
                        "component": "input",
                        "disabled": false,
                        "innerRef": null,
                        "name": "test",
                        "value": "",
                      },
                      "refs": Object {},
                      "registerField": [Function],
                      "setFieldErrors": [Function],
                      "state": Object {
                        "field": Immutable.Map {
                          "value": "",
                          "errors": Immutable.List [],
                          "valid": true,
                          "touched": false,
                          "changed": false,
                          "disabled": false,
                        },
                      },
                      "unsubscribeFromStore": [Function],
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "component": "input",
                    "name": "test",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "component": "input",
                    "name": "test",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 13,
                  "treeBaseDuration": 0,
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "render": [Function],
                  },
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "effectTag": 0,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": <ForwardRef
                    component="input"
                    name="test"
                  />,
                  "onSubmit": [Function],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <ForwardRef
                    component="input"
                    name="test"
                  />,
                  "onSubmit": [Function],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": <form>
                  <input
                    value=""
                  />
                </form>,
                "tag": 7,
                "treeBaseDuration": 0,
                "type": "form",
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "effectTag": 5,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": <ForwardRef
                  component="input"
                  name="test"
                />,
                "onSubmit": [Function],
                "onSubmitFailed": [Function],
                "path": "form",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <ForwardRef
                  component="input"
                  name="test"
                />,
                "onSubmit": [Function],
                "onSubmitFailed": [Function],
                "path": "form",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Form {
                "__reactInternalMemoizedMaskedChildContext": Object {
                  "store": Object {
                    "dispatch": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                    Symbol(observable): [Function],
                  },
                },
                "__reactInternalMemoizedMergedChildContext": Object {
                  "_reformRedux": Object {
                    "field": Object {
                      "changeFieldValue": [Function],
                      "changeFieldsValues": [Function],
                      "removeField": [Function],
                      "resetField": [Function],
                      "resetFields": [Function],
                      "setFieldDisabled": [Function],
                      "setFieldErrors": [Function],
                      "setFieldTouched": [Function],
                      "setFieldsDisabled": [Function],
                      "setFieldsErrors": [Function],
                      "setFieldsTouched": [Function],
                    },
                    "form": Object {
                      "fieldsCount": Object {
                        "test": 1,
                      },
                      "initialized": false,
                      "name": "form",
                      "path": Array [
                        "form",
                      ],
                      "registerField": [Function],
                      "resetForm": [Function],
                      "unregisterField": [Function],
                      "updateForm": [Function],
                    },
                  },
                  "store": Object {
                    "dispatch": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                    Symbol(observable): [Function],
                  },
                },
                "__reactInternalMemoizedUnmaskedChildContext": Object {
                  "store": Object {
                    "dispatch": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                    Symbol(observable): [Function],
                  },
                },
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {
                  "store": Object {
                    "dispatch": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                    Symbol(observable): [Function],
                  },
                },
                "decreaseFieldCount": [Function],
                "fieldsCount": Object {
                  "form": Object {
                    "test": 1,
                  },
                },
                "fieldsStack": Object {
                  "form": Object {
                    "test": Immutable.Map {
                      "value": "",
                      "errors": Immutable.List [],
                      "valid": true,
                      "touched": false,
                      "changed": false,
                      "disabled": false,
                    },
                  },
                },
                "fieldsValidateStack": Object {
                  "form": Object {
                    "test": Immutable.List [],
                  },
                },
                "formName": "form",
                "handleSubmit": [Function],
                "increaseFieldCount": [Function],
                "initialized": true,
                "path": Array [
                  "form",
                ],
                "props": Object {
                  "children": <ForwardRef
                    component="input"
                    name="test"
                  />,
                  "onSubmit": [Function],
                  "onSubmitFailed": [Function],
                  "path": "form",
                },
                "refs": Object {},
                "registerField": [Function],
                "state": null,
                "unregisterField": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 2,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "index": 0,
            "key": null,
            "lastEffect": FiberNode {
              "_debugID": 51,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 52,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 53,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 54,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 55,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "disabled": false,
                        "onBlur": [Function],
                        "onChange": [Function],
                        "onFocus": [Function],
                        "value": "",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "disabled": false,
                        "onBlur": [Function],
                        "onChange": [Function],
                        "onFocus": [Function],
                        "value": "",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": <input
                        value=""
                      />,
                      "tag": 7,
                      "treeBaseDuration": 0,
                      "type": "input",
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "component": "input",
                      "disabled": false,
                      "innerRef": null,
                      "name": "test",
                      "value": "",
                    },
                    "memoizedState": Object {
                      "field": Immutable.Map {
                        "value": "",
                        "errors": Immutable.List [],
                        "valid": true,
                        "touched": false,
                        "changed": false,
                        "disabled": false,
                      },
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "component": "input",
                      "disabled": false,
                      "innerRef": null,
                      "name": "test",
                      "value": "",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": Field {
                      "__reactInternalMemoizedMaskedChildContext": Object {
                        "_reformRedux": Object {
                          "field": Object {
                            "changeFieldValue": [Function],
                            "changeFieldsValues": [Function],
                            "removeField": [Function],
                            "resetField": [Function],
                            "resetFields": [Function],
                            "setFieldDisabled": [Function],
                            "setFieldErrors": [Function],
                            "setFieldTouched": [Function],
                            "setFieldsDisabled": [Function],
                            "setFieldsErrors": [Function],
                            "setFieldsTouched": [Function],
                          },
                          "form": Object {
                            "fieldsCount": Object {
                              "test": 1,
                            },
                            "initialized": false,
                            "name": "form",
                            "path": Array [
                              "form",
                            ],
                            "registerField": [Function],
                            "resetForm": [Function],
                            "unregisterField": [Function],
                            "updateForm": [Function],
                          },
                        },
                        "store": Object {
                          "dispatch": [Function],
                          "getState": [Function],
                          "replaceReducer": [Function],
                          "subscribe": [Function],
                          Symbol(observable): [Function],
                        },
                      },
                      "__reactInternalMemoizedUnmaskedChildContext": Object {
                        "_reformRedux": Object {
                          "field": Object {
                            "changeFieldValue": [Function],
                            "changeFieldsValues": [Function],
                            "removeField": [Function],
                            "resetField": [Function],
                            "resetFields": [Function],
                            "setFieldDisabled": [Function],
                            "setFieldErrors": [Function],
                            "setFieldTouched": [Function],
                            "setFieldsDisabled": [Function],
                            "setFieldsErrors": [Function],
                            "setFieldsTouched": [Function],
                          },
                          "form": Object {
                            "fieldsCount": Object {
                              "test": 1,
                            },
                            "initialized": false,
                            "name": "form",
                            "path": Array [
                              "form",
                            ],
                            "registerField": [Function],
                            "resetForm": [Function],
                            "unregisterField": [Function],
                            "updateForm": [Function],
                          },
                        },
                        "store": Object {
                          "dispatch": [Function],
                          "getState": [Function],
                          "replaceReducer": [Function],
                          "subscribe": [Function],
                          Symbol(observable): [Function],
                        },
                      },
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "changeFieldValue": [Function],
                      "changeFieldValueHandler": [Function],
                      "context": Object {
                        "_reformRedux": Object {
                          "field": Object {
                            "changeFieldValue": [Function],
                            "changeFieldsValues": [Function],
                            "removeField": [Function],
                            "resetField": [Function],
                            "resetFields": [Function],
                            "setFieldDisabled": [Function],
                            "setFieldErrors": [Function],
                            "setFieldTouched": [Function],
                            "setFieldsDisabled": [Function],
                            "setFieldsErrors": [Function],
                            "setFieldsTouched": [Function],
                          },
                          "form": Object {
                            "fieldsCount": Object {
                              "test": 1,
                            },
                            "initialized": false,
                            "name": "form",
                            "path": Array [
                              "form",
                            ],
                            "registerField": [Function],
                            "resetForm": [Function],
                            "unregisterField": [Function],
                            "updateForm": [Function],
                          },
                        },
                        "store": Object {
                          "dispatch": [Function],
                          "getState": [Function],
                          "replaceReducer": [Function],
                          "subscribe": [Function],
                          Symbol(observable): [Function],
                        },
                      },
                      "getFieldValue": [Function],
                      "initialFieldData": Immutable.Map {
                        "value": "",
                        "errors": Immutable.List [],
                        "valid": true,
                        "touched": false,
                        "changed": false,
                        "disabled": false,
                      },
                      "isCheckbox": [Function],
                      "isRadio": [Function],
                      "isRadioOrCheckbox": [Function],
                      "onBlurFieldHandler": [Function],
                      "onFocusFieldHandler": [Function],
                      "props": Object {
                        "component": "input",
                        "disabled": false,
                        "innerRef": null,
                        "name": "test",
                        "value": "",
                      },
                      "refs": Object {},
                      "registerField": [Function],
                      "setFieldErrors": [Function],
                      "state": Object {
                        "field": Immutable.Map {
                          "value": "",
                          "errors": Immutable.List [],
                          "valid": true,
                          "touched": false,
                          "changed": false,
                          "disabled": false,
                        },
                      },
                      "unsubscribeFromStore": [Function],
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "component": "input",
                    "name": "test",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "component": "input",
                    "name": "test",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 13,
                  "treeBaseDuration": 0,
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "render": [Function],
                  },
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "effectTag": 0,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": <ForwardRef
                    component="input"
                    name="test"
                  />,
                  "onSubmit": [Function],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <ForwardRef
                    component="input"
                    name="test"
                  />,
                  "onSubmit": [Function],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": <form>
                  <input
                    value=""
                  />
                </form>,
                "tag": 7,
                "treeBaseDuration": 0,
                "type": "form",
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "effectTag": 5,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": <ForwardRef
                  component="input"
                  name="test"
                />,
                "onSubmit": [Function],
                "onSubmitFailed": [Function],
                "path": "form",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <ForwardRef
                  component="input"
                  name="test"
                />,
                "onSubmit": [Function],
                "onSubmitFailed": [Function],
                "path": "form",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Form {
                "__reactInternalMemoizedMaskedChildContext": Object {
                  "store": Object {
                    "dispatch": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                    Symbol(observable): [Function],
                  },
                },
                "__reactInternalMemoizedMergedChildContext": Object {
                  "_reformRedux": Object {
                    "field": Object {
                      "changeFieldValue": [Function],
                      "changeFieldsValues": [Function],
                      "removeField": [Function],
                      "resetField": [Function],
                      "resetFields": [Function],
                      "setFieldDisabled": [Function],
                      "setFieldErrors": [Function],
                      "setFieldTouched": [Function],
                      "setFieldsDisabled": [Function],
                      "setFieldsErrors": [Function],
                      "setFieldsTouched": [Function],
                    },
                    "form": Object {
                      "fieldsCount": Object {
                        "test": 1,
                      },
                      "initialized": false,
                      "name": "form",
                      "path": Array [
                        "form",
                      ],
                      "registerField": [Function],
                      "resetForm": [Function],
                      "unregisterField": [Function],
                      "updateForm": [Function],
                    },
                  },
                  "store": Object {
                    "dispatch": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                    Symbol(observable): [Function],
                  },
                },
                "__reactInternalMemoizedUnmaskedChildContext": Object {
                  "store": Object {
                    "dispatch": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                    Symbol(observable): [Function],
                  },
                },
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {
                  "store": Object {
                    "dispatch": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                    Symbol(observable): [Function],
                  },
                },
                "decreaseFieldCount": [Function],
                "fieldsCount": Object {
                  "form": Object {
                    "test": 1,
                  },
                },
                "fieldsStack": Object {
                  "form": Object {
                    "test": Immutable.Map {
                      "value": "",
                      "errors": Immutable.List [],
                      "valid": true,
                      "touched": false,
                      "changed": false,
                      "disabled": false,
                    },
                  },
                },
                "fieldsValidateStack": Object {
                  "form": Object {
                    "test": Immutable.List [],
                  },
                },
                "formName": "form",
                "handleSubmit": [Function],
                "increaseFieldCount": [Function],
                "initialized": true,
                "path": Array [
                  "form",
                ],
                "props": Object {
                  "children": <ForwardRef
                    component="input"
                    name="test"
                  />,
                  "onSubmit": [Function],
                  "onSubmitFailed": [Function],
                  "path": "form",
                },
                "refs": Object {},
                "registerField": [Function],
                "state": null,
                "unregisterField": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 2,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "children": <ForwardRef
                  component="input"
                  name="test"
                />,
                "immutable": true,
              },
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "children": <ForwardRef
                  component="input"
                  name="test"
                />,
                "immutable": true,
              },
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "children": <ForwardRef
                  component="input"
                  name="test"
                />,
                "immutable": true,
              },
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugID": 47,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childExpirationTime": 0,
                "effectTag": 0,
                "expirationTime": 1,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <form>
                      <input
                        value=""
                      />
                    </form>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 12,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "timeoutHandle": -1,
                },
                "tag": 5,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "children": <ForwardRef
                              component="input"
                              name="test"
                            />,
                            "immutable": true,
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "children": <ForwardRef
                              component="input"
                              name="test"
                            />,
                            "immutable": true,
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "childExpirationTime": 0,
              "effectTag": 32,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": FiberNode {
                "_debugID": 51,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 52,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 53,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 54,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 55,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "disabled": false,
                          "onBlur": [Function],
                          "onChange": [Function],
                          "onFocus": [Function],
                          "value": "",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "disabled": false,
                          "onBlur": [Function],
                          "onChange": [Function],
                          "onFocus": [Function],
                          "value": "",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <input
                          value=""
                        />,
                        "tag": 7,
                        "treeBaseDuration": 0,
                        "type": "input",
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "component": "input",
                        "disabled": false,
                        "innerRef": null,
                        "name": "test",
                        "value": "",
                      },
                      "memoizedState": Object {
                        "field": Immutable.Map {
                          "value": "",
                          "errors": Immutable.List [],
                          "valid": true,
                          "touched": false,
                          "changed": false,
                          "disabled": false,
                        },
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "component": "input",
                        "disabled": false,
                        "innerRef": null,
                        "name": "test",
                        "value": "",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": Field {
                        "__reactInternalMemoizedMaskedChildContext": Object {
                          "_reformRedux": Object {
                            "field": Object {
                              "changeFieldValue": [Function],
                              "changeFieldsValues": [Function],
                              "removeField": [Function],
                              "resetField": [Function],
                              "resetFields": [Function],
                              "setFieldDisabled": [Function],
                              "setFieldErrors": [Function],
                              "setFieldTouched": [Function],
                              "setFieldsDisabled": [Function],
                              "setFieldsErrors": [Function],
                              "setFieldsTouched": [Function],
                            },
                            "form": Object {
                              "fieldsCount": Object {
                                "test": 1,
                              },
                              "initialized": false,
                              "name": "form",
                              "path": Array [
                                "form",
                              ],
                              "registerField": [Function],
                              "resetForm": [Function],
                              "unregisterField": [Function],
                              "updateForm": [Function],
                            },
                          },
                          "store": Object {
                            "dispatch": [Function],
                            "getState": [Function],
                            "replaceReducer": [Function],
                            "subscribe": [Function],
                            Symbol(observable): [Function],
                          },
                        },
                        "__reactInternalMemoizedUnmaskedChildContext": Object {
                          "_reformRedux": Object {
                            "field": Object {
                              "changeFieldValue": [Function],
                              "changeFieldsValues": [Function],
                              "removeField": [Function],
                              "resetField": [Function],
                              "resetFields": [Function],
                              "setFieldDisabled": [Function],
                              "setFieldErrors": [Function],
                              "setFieldTouched": [Function],
                              "setFieldsDisabled": [Function],
                              "setFieldsErrors": [Function],
                              "setFieldsTouched": [Function],
                            },
                            "form": Object {
                              "fieldsCount": Object {
                                "test": 1,
                              },
                              "initialized": false,
                              "name": "form",
                              "path": Array [
                                "form",
                              ],
                              "registerField": [Function],
                              "resetForm": [Function],
                              "unregisterField": [Function],
                              "updateForm": [Function],
                            },
                          },
                          "store": Object {
                            "dispatch": [Function],
                            "getState": [Function],
                            "replaceReducer": [Function],
                            "subscribe": [Function],
                            Symbol(observable): [Function],
                          },
                        },
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "changeFieldValue": [Function],
                        "changeFieldValueHandler": [Function],
                        "context": Object {
                          "_reformRedux": Object {
                            "field": Object {
                              "changeFieldValue": [Function],
                              "changeFieldsValues": [Function],
                              "removeField": [Function],
                              "resetField": [Function],
                              "resetFields": [Function],
                              "setFieldDisabled": [Function],
                              "setFieldErrors": [Function],
                              "setFieldTouched": [Function],
                              "setFieldsDisabled": [Function],
                              "setFieldsErrors": [Function],
                              "setFieldsTouched": [Function],
                            },
                            "form": Object {
                              "fieldsCount": Object {
                                "test": 1,
                              },
                              "initialized": false,
                              "name": "form",
                              "path": Array [
                                "form",
                              ],
                              "registerField": [Function],
                              "resetForm": [Function],
                              "unregisterField": [Function],
                              "updateForm": [Function],
                            },
                          },
                          "store": Object {
                            "dispatch": [Function],
                            "getState": [Function],
                            "replaceReducer": [Function],
                            "subscribe": [Function],
                            Symbol(observable): [Function],
                          },
                        },
                        "getFieldValue": [Function],
                        "initialFieldData": Immutable.Map {
                          "value": "",
                          "errors": Immutable.List [],
                          "valid": true,
                          "touched": false,
                          "changed": false,
                          "disabled": false,
                        },
                        "isCheckbox": [Function],
                        "isRadio": [Function],
                        "isRadioOrCheckbox": [Function],
                        "onBlurFieldHandler": [Function],
                        "onFocusFieldHandler": [Function],
                        "props": Object {
                          "component": "input",
                          "disabled": false,
                          "innerRef": null,
                          "name": "test",
                          "value": "",
                        },
                        "refs": Object {},
                        "registerField": [Function],
                        "setFieldErrors": [Function],
                        "state": Object {
                          "field": Immutable.Map {
                            "value": "",
                            "errors": Immutable.List [],
                            "valid": true,
                            "touched": false,
                            "changed": false,
                            "disabled": false,
                          },
                        },
                        "unsubscribeFromStore": [Function],
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "component": "input",
                      "name": "test",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "component": "input",
                      "name": "test",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": null,
                    "tag": 13,
                    "treeBaseDuration": 0,
                    "type": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "render": [Function],
                    },
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": <ForwardRef
                      component="input"
                      name="test"
                    />,
                    "onSubmit": [Function],
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": <ForwardRef
                      component="input"
                      name="test"
                    />,
                    "onSubmit": [Function],
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": <form>
                    <input
                      value=""
                    />
                  </form>,
                  "tag": 7,
                  "treeBaseDuration": 0,
                  "type": "form",
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "effectTag": 5,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": <ForwardRef
                    component="input"
                    name="test"
                  />,
                  "onSubmit": [Function],
                  "onSubmitFailed": [Function],
                  "path": "form",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <ForwardRef
                    component="input"
                    name="test"
                  />,
                  "onSubmit": [Function],
                  "onSubmitFailed": [Function],
                  "path": "form",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Form {
                  "__reactInternalMemoizedMaskedChildContext": Object {
                    "store": Object {
                      "dispatch": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                      Symbol(observable): [Function],
                    },
                  },
                  "__reactInternalMemoizedMergedChildContext": Object {
                    "_reformRedux": Object {
                      "field": Object {
                        "changeFieldValue": [Function],
                        "changeFieldsValues": [Function],
                        "removeField": [Function],
                        "resetField": [Function],
                        "resetFields": [Function],
                        "setFieldDisabled": [Function],
                        "setFieldErrors": [Function],
                        "setFieldTouched": [Function],
                        "setFieldsDisabled": [Function],
                        "setFieldsErrors": [Function],
                        "setFieldsTouched": [Function],
                      },
                      "form": Object {
                        "fieldsCount": Object {
                          "test": 1,
                        },
                        "initialized": false,
                        "name": "form",
                        "path": Array [
                          "form",
                        ],
                        "registerField": [Function],
                        "resetForm": [Function],
                        "unregisterField": [Function],
                        "updateForm": [Function],
                      },
                    },
                    "store": Object {
                      "dispatch": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                      Symbol(observable): [Function],
                    },
                  },
                  "__reactInternalMemoizedUnmaskedChildContext": Object {
                    "store": Object {
                      "dispatch": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                      Symbol(observable): [Function],
                    },
                  },
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {
                    "store": Object {
                      "dispatch": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                      Symbol(observable): [Function],
                    },
                  },
                  "decreaseFieldCount": [Function],
                  "fieldsCount": Object {
                    "form": Object {
                      "test": 1,
                    },
                  },
                  "fieldsStack": Object {
                    "form": Object {
                      "test": Immutable.Map {
                        "value": "",
                        "errors": Immutable.List [],
                        "valid": true,
                        "touched": false,
                        "changed": false,
                        "disabled": false,
                      },
                    },
                  },
                  "fieldsValidateStack": Object {
                    "form": Object {
                      "test": Immutable.List [],
                    },
                  },
                  "formName": "form",
                  "handleSubmit": [Function],
                  "increaseFieldCount": [Function],
                  "initialized": true,
                  "path": Array [
                    "form",
                  ],
                  "props": Object {
                    "children": <ForwardRef
                      component="input"
                      name="test"
                    />,
                    "onSubmit": [Function],
                    "onSubmitFailed": [Function],
                    "path": "form",
                  },
                  "refs": Object {},
                  "registerField": [Function],
                  "state": null,
                  "unregisterField": [Function],
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 2,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": null,
              },
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "children": <ForwardRef
                        component="input"
                        name="test"
                      />,
                      "immutable": true,
                    }
                  }
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <form>
                    <input
                      value=""
                    />
                  </form>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "timeoutHandle": -1,
              },
              "tag": 5,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "children": <ForwardRef
                          component="input"
                          name="test"
                        />,
                        "immutable": true,
                      }
                    }
                  />,
                },
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "children": <ForwardRef
                    component="input"
                    name="test"
                  />,
                  "immutable": true,
                },
              },
              "refs": Object {},
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "children": <ForwardRef
                    component="input"
                    name="test"
                  />,
                  "immutable": true,
                },
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": [Circular],
          "tag": 2,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "_reactInternalInstance": Object {},
        "context": Object {},
        "props": Object {
          "children": <ForwardRef
            component="input"
            name="test"
          />,
          "immutable": true,
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
        },
      },
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <ForwardRef
          component="input"
          name="test"
        />,
        "immutable": true,
      },
      "ref": null,
      "rendered": Object {
        "instance": Form {
          "__reactInternalMemoizedMaskedChildContext": Object {
            "store": Object {
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            },
          },
          "__reactInternalMemoizedMergedChildContext": Object {
            "_reformRedux": Object {
              "field": Object {
                "changeFieldValue": [Function],
                "changeFieldsValues": [Function],
                "removeField": [Function],
                "resetField": [Function],
                "resetFields": [Function],
                "setFieldDisabled": [Function],
                "setFieldErrors": [Function],
                "setFieldTouched": [Function],
                "setFieldsDisabled": [Function],
                "setFieldsErrors": [Function],
                "setFieldsTouched": [Function],
              },
              "form": Object {
                "fieldsCount": Object {
                  "test": 1,
                },
                "initialized": false,
                "name": "form",
                "path": Array [
                  "form",
                ],
                "registerField": [Function],
                "resetForm": [Function],
                "unregisterField": [Function],
                "updateForm": [Function],
              },
            },
            "store": Object {
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            },
          },
          "__reactInternalMemoizedUnmaskedChildContext": Object {
            "store": Object {
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            },
          },
          "_reactInternalFiber": FiberNode {
            "_debugID": 51,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": FiberNode {
              "_debugID": 50,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": FiberNode {
                "_debugID": 49,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "effectTag": 1,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "children": <ForwardRef
                      component="input"
                      name="test"
                    />,
                    "immutable": true,
                  },
                },
                "memoizedState": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "children": <ForwardRef
                      component="input"
                      name="test"
                    />,
                    "immutable": true,
                  },
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "children": <ForwardRef
                      component="input"
                      name="test"
                    />,
                    "immutable": true,
                  },
                },
                "ref": null,
                "return": FiberNode {
                  "_debugID": 47,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": FiberNode {
                    "_debugID": 47,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": [Circular],
                    "child": null,
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "expirationTime": 1,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": null,
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <form>
                          <input
                            value=""
                          />
                        </form>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "didError": false,
                      "earliestPendingTime": 0,
                      "earliestSuspendedTime": 0,
                      "expirationTime": 0,
                      "finishedWork": null,
                      "firstBatch": null,
                      "hydrate": false,
                      "interactionThreadID": 12,
                      "latestPendingTime": 0,
                      "latestPingedTime": 0,
                      "latestSuspendedTime": 0,
                      "memoizedInteractions": Set {},
                      "nextExpirationTimeToWorkOn": 0,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingCommitExpirationTime": 0,
                      "pendingContext": null,
                      "pendingInteractionMap": Map {},
                      "timeoutHandle": -1,
                    },
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": null,
                      "firstCapturedEffect": null,
                      "firstCapturedUpdate": null,
                      "firstEffect": null,
                      "firstUpdate": Object {
                        "callback": null,
                        "expirationTime": 1,
                        "next": null,
                        "nextEffect": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "children": <ForwardRef
                                  component="input"
                                  name="test"
                                />,
                                "immutable": true,
                              }
                            }
                          />,
                        },
                        "tag": 0,
                      },
                      "lastCapturedEffect": null,
                      "lastCapturedUpdate": null,
                      "lastEffect": null,
                      "lastUpdate": Object {
                        "callback": null,
                        "expirationTime": 1,
                        "next": null,
                        "nextEffect": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "children": <ForwardRef
                                  component="input"
                                  name="test"
                                />,
                                "immutable": true,
                              }
                            }
                          />,
                        },
                        "tag": 0,
                      },
                    },
                  },
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "effectTag": 32,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": null,
                  "memoizedState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <ForwardRef
                            component="input"
                            name="test"
                          />,
                          "immutable": true,
                        }
                      }
                    />,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <form>
                        <input
                          value=""
                        />
                      </form>
                    </div>,
                    "context": Object {},
                    "current": [Circular],
                    "didError": false,
                    "earliestPendingTime": 0,
                    "earliestSuspendedTime": 0,
                    "expirationTime": 0,
                    "finishedWork": null,
                    "firstBatch": null,
                    "hydrate": false,
                    "interactionThreadID": 12,
                    "latestPendingTime": 0,
                    "latestPingedTime": 0,
                    "latestSuspendedTime": 0,
                    "memoizedInteractions": Set {},
                    "nextExpirationTimeToWorkOn": 0,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingCommitExpirationTime": 0,
                    "pendingContext": null,
                    "pendingInteractionMap": Map {},
                    "timeoutHandle": -1,
                  },
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "children": <ForwardRef
                              component="input"
                              name="test"
                            />,
                            "immutable": true,
                          }
                        }
                      />,
                    },
                    "firstCapturedEffect": null,
                    "firstCapturedUpdate": null,
                    "firstEffect": null,
                    "firstUpdate": null,
                    "lastCapturedEffect": null,
                    "lastCapturedUpdate": null,
                    "lastEffect": null,
                    "lastUpdate": null,
                  },
                },
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": WrapperComponent {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "children": <ForwardRef
                        component="input"
                        name="test"
                      />,
                      "immutable": true,
                    },
                  },
                  "refs": Object {},
                  "state": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "children": <ForwardRef
                        component="input"
                        name="test"
                      />,
                      "immutable": true,
                    },
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 2,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": null,
              },
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "effectTag": 1,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "children": <ForwardRef
                  component="input"
                  name="test"
                />,
                "immutable": true,
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <ForwardRef
                  component="input"
                  name="test"
                />,
                "immutable": true,
              },
              "ref": null,
              "return": FiberNode {
                "_debugID": 49,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "effectTag": 1,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "children": <ForwardRef
                      component="input"
                      name="test"
                    />,
                    "immutable": true,
                  },
                },
                "memoizedState": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "children": <ForwardRef
                      component="input"
                      name="test"
                    />,
                    "immutable": true,
                  },
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "children": <ForwardRef
                      component="input"
                      name="test"
                    />,
                    "immutable": true,
                  },
                },
                "ref": null,
                "return": FiberNode {
                  "_debugID": 47,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": FiberNode {
                    "_debugID": 47,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": [Circular],
                    "child": null,
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "expirationTime": 1,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": null,
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <form>
                          <input
                            value=""
                          />
                        </form>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "didError": false,
                      "earliestPendingTime": 0,
                      "earliestSuspendedTime": 0,
                      "expirationTime": 0,
                      "finishedWork": null,
                      "firstBatch": null,
                      "hydrate": false,
                      "interactionThreadID": 12,
                      "latestPendingTime": 0,
                      "latestPingedTime": 0,
                      "latestSuspendedTime": 0,
                      "memoizedInteractions": Set {},
                      "nextExpirationTimeToWorkOn": 0,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingCommitExpirationTime": 0,
                      "pendingContext": null,
                      "pendingInteractionMap": Map {},
                      "timeoutHandle": -1,
                    },
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": null,
                      "firstCapturedEffect": null,
                      "firstCapturedUpdate": null,
                      "firstEffect": null,
                      "firstUpdate": Object {
                        "callback": null,
                        "expirationTime": 1,
                        "next": null,
                        "nextEffect": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "children": <ForwardRef
                                  component="input"
                                  name="test"
                                />,
                                "immutable": true,
                              }
                            }
                          />,
                        },
                        "tag": 0,
                      },
                      "lastCapturedEffect": null,
                      "lastCapturedUpdate": null,
                      "lastEffect": null,
                      "lastUpdate": Object {
                        "callback": null,
                        "expirationTime": 1,
                        "next": null,
                        "nextEffect": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "children": <ForwardRef
                                  component="input"
                                  name="test"
                                />,
                                "immutable": true,
                              }
                            }
                          />,
                        },
                        "tag": 0,
                      },
                    },
                  },
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "effectTag": 32,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": null,
                  "memoizedState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <ForwardRef
                            component="input"
                            name="test"
                          />,
                          "immutable": true,
                        }
                      }
                    />,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <form>
                        <input
                          value=""
                        />
                      </form>
                    </div>,
                    "context": Object {},
                    "current": [Circular],
                    "didError": false,
                    "earliestPendingTime": 0,
                    "earliestSuspendedTime": 0,
                    "expirationTime": 0,
                    "finishedWork": null,
                    "firstBatch": null,
                    "hydrate": false,
                    "interactionThreadID": 12,
                    "latestPendingTime": 0,
                    "latestPingedTime": 0,
                    "latestSuspendedTime": 0,
                    "memoizedInteractions": Set {},
                    "nextExpirationTimeToWorkOn": 0,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingCommitExpirationTime": 0,
                    "pendingContext": null,
                    "pendingInteractionMap": Map {},
                    "timeoutHandle": -1,
                  },
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "children": <ForwardRef
                              component="input"
                              name="test"
                            />,
                            "immutable": true,
                          }
                        }
                      />,
                    },
                    "firstCapturedEffect": null,
                    "firstCapturedUpdate": null,
                    "firstEffect": null,
                    "firstUpdate": null,
                    "lastCapturedEffect": null,
                    "lastCapturedUpdate": null,
                    "lastEffect": null,
                    "lastUpdate": null,
                  },
                },
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": WrapperComponent {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "children": <ForwardRef
                        component="input"
                        name="test"
                      />,
                      "immutable": true,
                    },
                  },
                  "refs": Object {},
                  "state": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "children": <ForwardRef
                        component="input"
                        name="test"
                      />,
                      "immutable": true,
                    },
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 2,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": null,
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Provider {
                "__reactInternalMemoizedMergedChildContext": Object {
                  "store": Object {
                    "dispatch": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                    Symbol(observable): [Function],
                  },
                },
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "children": <ForwardRef
                    component="input"
                    name="test"
                  />,
                  "immutable": true,
                },
                "refs": Object {},
                "state": null,
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 2,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 52,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 53,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 54,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 55,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "disabled": false,
                      "onBlur": [Function],
                      "onChange": [Function],
                      "onFocus": [Function],
                      "value": "",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "disabled": false,
                      "onBlur": [Function],
                      "onChange": [Function],
                      "onFocus": [Function],
                      "value": "",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": <input
                      value=""
                    />,
                    "tag": 7,
                    "treeBaseDuration": 0,
                    "type": "input",
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "component": "input",
                    "disabled": false,
                    "innerRef": null,
                    "name": "test",
                    "value": "",
                  },
                  "memoizedState": Object {
                    "field": Immutable.Map {
                      "value": "",
                      "errors": Immutable.List [],
                      "valid": true,
                      "touched": false,
                      "changed": false,
                      "disabled": false,
                    },
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "component": "input",
                    "disabled": false,
                    "innerRef": null,
                    "name": "test",
                    "value": "",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Field {
                    "__reactInternalMemoizedMaskedChildContext": Object {
                      "_reformRedux": Object {
                        "field": Object {
                          "changeFieldValue": [Function],
                          "changeFieldsValues": [Function],
                          "removeField": [Function],
                          "resetField": [Function],
                          "resetFields": [Function],
                          "setFieldDisabled": [Function],
                          "setFieldErrors": [Function],
                          "setFieldTouched": [Function],
                          "setFieldsDisabled": [Function],
                          "setFieldsErrors": [Function],
                          "setFieldsTouched": [Function],
                        },
                        "form": Object {
                          "fieldsCount": Object {
                            "test": 1,
                          },
                          "initialized": false,
                          "name": "form",
                          "path": Array [
                            "form",
                          ],
                          "registerField": [Function],
                          "resetForm": [Function],
                          "unregisterField": [Function],
                          "updateForm": [Function],
                        },
                      },
                      "store": Object {
                        "dispatch": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                        Symbol(observable): [Function],
                      },
                    },
                    "__reactInternalMemoizedUnmaskedChildContext": Object {
                      "_reformRedux": Object {
                        "field": Object {
                          "changeFieldValue": [Function],
                          "changeFieldsValues": [Function],
                          "removeField": [Function],
                          "resetField": [Function],
                          "resetFields": [Function],
                          "setFieldDisabled": [Function],
                          "setFieldErrors": [Function],
                          "setFieldTouched": [Function],
                          "setFieldsDisabled": [Function],
                          "setFieldsErrors": [Function],
                          "setFieldsTouched": [Function],
                        },
                        "form": Object {
                          "fieldsCount": Object {
                            "test": 1,
                          },
                          "initialized": false,
                          "name": "form",
                          "path": Array [
                            "form",
                          ],
                          "registerField": [Function],
                          "resetForm": [Function],
                          "unregisterField": [Function],
                          "updateForm": [Function],
                        },
                      },
                      "store": Object {
                        "dispatch": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                        Symbol(observable): [Function],
                      },
                    },
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "changeFieldValue": [Function],
                    "changeFieldValueHandler": [Function],
                    "context": Object {
                      "_reformRedux": Object {
                        "field": Object {
                          "changeFieldValue": [Function],
                          "changeFieldsValues": [Function],
                          "removeField": [Function],
                          "resetField": [Function],
                          "resetFields": [Function],
                          "setFieldDisabled": [Function],
                          "setFieldErrors": [Function],
                          "setFieldTouched": [Function],
                          "setFieldsDisabled": [Function],
                          "setFieldsErrors": [Function],
                          "setFieldsTouched": [Function],
                        },
                        "form": Object {
                          "fieldsCount": Object {
                            "test": 1,
                          },
                          "initialized": false,
                          "name": "form",
                          "path": Array [
                            "form",
                          ],
                          "registerField": [Function],
                          "resetForm": [Function],
                          "unregisterField": [Function],
                          "updateForm": [Function],
                        },
                      },
                      "store": Object {
                        "dispatch": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                        Symbol(observable): [Function],
                      },
                    },
                    "getFieldValue": [Function],
                    "initialFieldData": Immutable.Map {
                      "value": "",
                      "errors": Immutable.List [],
                      "valid": true,
                      "touched": false,
                      "changed": false,
                      "disabled": false,
                    },
                    "isCheckbox": [Function],
                    "isRadio": [Function],
                    "isRadioOrCheckbox": [Function],
                    "onBlurFieldHandler": [Function],
                    "onFocusFieldHandler": [Function],
                    "props": Object {
                      "component": "input",
                      "disabled": false,
                      "innerRef": null,
                      "name": "test",
                      "value": "",
                    },
                    "refs": Object {},
                    "registerField": [Function],
                    "setFieldErrors": [Function],
                    "state": Object {
                      "field": Immutable.Map {
                        "value": "",
                        "errors": Immutable.List [],
                        "valid": true,
                        "touched": false,
                        "changed": false,
                        "disabled": false,
                      },
                    },
                    "unsubscribeFromStore": [Function],
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "effectTag": 0,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "component": "input",
                  "name": "test",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "component": "input",
                  "name": "test",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 13,
                "treeBaseDuration": 0,
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "render": [Function],
                },
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "effectTag": 0,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": <ForwardRef
                  component="input"
                  name="test"
                />,
                "onSubmit": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <ForwardRef
                  component="input"
                  name="test"
                />,
                "onSubmit": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": <form>
                <input
                  value=""
                />
              </form>,
              "tag": 7,
              "treeBaseDuration": 0,
              "type": "form",
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "effectTag": 5,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": <ForwardRef
                component="input"
                name="test"
              />,
              "onSubmit": [Function],
              "onSubmitFailed": [Function],
              "path": "form",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": <ForwardRef
                component="input"
                name="test"
              />,
              "onSubmit": [Function],
              "onSubmitFailed": [Function],
              "path": "form",
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 50,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": FiberNode {
                "_debugID": 49,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "effectTag": 1,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "children": <ForwardRef
                      component="input"
                      name="test"
                    />,
                    "immutable": true,
                  },
                },
                "memoizedState": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "children": <ForwardRef
                      component="input"
                      name="test"
                    />,
                    "immutable": true,
                  },
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "children": <ForwardRef
                      component="input"
                      name="test"
                    />,
                    "immutable": true,
                  },
                },
                "ref": null,
                "return": FiberNode {
                  "_debugID": 47,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": FiberNode {
                    "_debugID": 47,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": [Circular],
                    "child": null,
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "expirationTime": 1,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": null,
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <form>
                          <input
                            value=""
                          />
                        </form>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "didError": false,
                      "earliestPendingTime": 0,
                      "earliestSuspendedTime": 0,
                      "expirationTime": 0,
                      "finishedWork": null,
                      "firstBatch": null,
                      "hydrate": false,
                      "interactionThreadID": 12,
                      "latestPendingTime": 0,
                      "latestPingedTime": 0,
                      "latestSuspendedTime": 0,
                      "memoizedInteractions": Set {},
                      "nextExpirationTimeToWorkOn": 0,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingCommitExpirationTime": 0,
                      "pendingContext": null,
                      "pendingInteractionMap": Map {},
                      "timeoutHandle": -1,
                    },
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": null,
                      "firstCapturedEffect": null,
                      "firstCapturedUpdate": null,
                      "firstEffect": null,
                      "firstUpdate": Object {
                        "callback": null,
                        "expirationTime": 1,
                        "next": null,
                        "nextEffect": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "children": <ForwardRef
                                  component="input"
                                  name="test"
                                />,
                                "immutable": true,
                              }
                            }
                          />,
                        },
                        "tag": 0,
                      },
                      "lastCapturedEffect": null,
                      "lastCapturedUpdate": null,
                      "lastEffect": null,
                      "lastUpdate": Object {
                        "callback": null,
                        "expirationTime": 1,
                        "next": null,
                        "nextEffect": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "children": <ForwardRef
                                  component="input"
                                  name="test"
                                />,
                                "immutable": true,
                              }
                            }
                          />,
                        },
                        "tag": 0,
                      },
                    },
                  },
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "effectTag": 32,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": null,
                  "memoizedState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <ForwardRef
                            component="input"
                            name="test"
                          />,
                          "immutable": true,
                        }
                      }
                    />,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <form>
                        <input
                          value=""
                        />
                      </form>
                    </div>,
                    "context": Object {},
                    "current": [Circular],
                    "didError": false,
                    "earliestPendingTime": 0,
                    "earliestSuspendedTime": 0,
                    "expirationTime": 0,
                    "finishedWork": null,
                    "firstBatch": null,
                    "hydrate": false,
                    "interactionThreadID": 12,
                    "latestPendingTime": 0,
                    "latestPingedTime": 0,
                    "latestSuspendedTime": 0,
                    "memoizedInteractions": Set {},
                    "nextExpirationTimeToWorkOn": 0,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingCommitExpirationTime": 0,
                    "pendingContext": null,
                    "pendingInteractionMap": Map {},
                    "timeoutHandle": -1,
                  },
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "children": <ForwardRef
                              component="input"
                              name="test"
                            />,
                            "immutable": true,
                          }
                        }
                      />,
                    },
                    "firstCapturedEffect": null,
                    "firstCapturedUpdate": null,
                    "firstEffect": null,
                    "firstUpdate": null,
                    "lastCapturedEffect": null,
                    "lastCapturedUpdate": null,
                    "lastEffect": null,
                    "lastUpdate": null,
                  },
                },
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": WrapperComponent {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "children": <ForwardRef
                        component="input"
                        name="test"
                      />,
                      "immutable": true,
                    },
                  },
                  "refs": Object {},
                  "state": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "children": <ForwardRef
                        component="input"
                        name="test"
                      />,
                      "immutable": true,
                    },
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 2,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": null,
              },
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "effectTag": 1,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "children": <ForwardRef
                  component="input"
                  name="test"
                />,
                "immutable": true,
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <ForwardRef
                  component="input"
                  name="test"
                />,
                "immutable": true,
              },
              "ref": null,
              "return": FiberNode {
                "_debugID": 49,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "effectTag": 1,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "children": <ForwardRef
                      component="input"
                      name="test"
                    />,
                    "immutable": true,
                  },
                },
                "memoizedState": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "children": <ForwardRef
                      component="input"
                      name="test"
                    />,
                    "immutable": true,
                  },
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "children": <ForwardRef
                      component="input"
                      name="test"
                    />,
                    "immutable": true,
                  },
                },
                "ref": null,
                "return": FiberNode {
                  "_debugID": 47,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": FiberNode {
                    "_debugID": 47,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": [Circular],
                    "child": null,
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "expirationTime": 1,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": null,
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <form>
                          <input
                            value=""
                          />
                        </form>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "didError": false,
                      "earliestPendingTime": 0,
                      "earliestSuspendedTime": 0,
                      "expirationTime": 0,
                      "finishedWork": null,
                      "firstBatch": null,
                      "hydrate": false,
                      "interactionThreadID": 12,
                      "latestPendingTime": 0,
                      "latestPingedTime": 0,
                      "latestSuspendedTime": 0,
                      "memoizedInteractions": Set {},
                      "nextExpirationTimeToWorkOn": 0,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingCommitExpirationTime": 0,
                      "pendingContext": null,
                      "pendingInteractionMap": Map {},
                      "timeoutHandle": -1,
                    },
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": null,
                      "firstCapturedEffect": null,
                      "firstCapturedUpdate": null,
                      "firstEffect": null,
                      "firstUpdate": Object {
                        "callback": null,
                        "expirationTime": 1,
                        "next": null,
                        "nextEffect": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "children": <ForwardRef
                                  component="input"
                                  name="test"
                                />,
                                "immutable": true,
                              }
                            }
                          />,
                        },
                        "tag": 0,
                      },
                      "lastCapturedEffect": null,
                      "lastCapturedUpdate": null,
                      "lastEffect": null,
                      "lastUpdate": Object {
                        "callback": null,
                        "expirationTime": 1,
                        "next": null,
                        "nextEffect": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "children": <ForwardRef
                                  component="input"
                                  name="test"
                                />,
                                "immutable": true,
                              }
                            }
                          />,
                        },
                        "tag": 0,
                      },
                    },
                  },
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "effectTag": 32,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": null,
                  "memoizedState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <ForwardRef
                            component="input"
                            name="test"
                          />,
                          "immutable": true,
                        }
                      }
                    />,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <form>
                        <input
                          value=""
                        />
                      </form>
                    </div>,
                    "context": Object {},
                    "current": [Circular],
                    "didError": false,
                    "earliestPendingTime": 0,
                    "earliestSuspendedTime": 0,
                    "expirationTime": 0,
                    "finishedWork": null,
                    "firstBatch": null,
                    "hydrate": false,
                    "interactionThreadID": 12,
                    "latestPendingTime": 0,
                    "latestPingedTime": 0,
                    "latestSuspendedTime": 0,
                    "memoizedInteractions": Set {},
                    "nextExpirationTimeToWorkOn": 0,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingCommitExpirationTime": 0,
                    "pendingContext": null,
                    "pendingInteractionMap": Map {},
                    "timeoutHandle": -1,
                  },
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "children": <ForwardRef
                              component="input"
                              name="test"
                            />,
                            "immutable": true,
                          }
                        }
                      />,
                    },
                    "firstCapturedEffect": null,
                    "firstCapturedUpdate": null,
                    "firstEffect": null,
                    "firstUpdate": null,
                    "lastCapturedEffect": null,
                    "lastCapturedUpdate": null,
                    "lastEffect": null,
                    "lastUpdate": null,
                  },
                },
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": WrapperComponent {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "children": <ForwardRef
                        component="input"
                        name="test"
                      />,
                      "immutable": true,
                    },
                  },
                  "refs": Object {},
                  "state": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "children": <ForwardRef
                        component="input"
                        name="test"
                      />,
                      "immutable": true,
                    },
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 2,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": null,
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Provider {
                "__reactInternalMemoizedMergedChildContext": Object {
                  "store": Object {
                    "dispatch": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                    Symbol(observable): [Function],
                  },
                },
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "children": <ForwardRef
                    component="input"
                    name="test"
                  />,
                  "immutable": true,
                },
                "refs": Object {},
                "state": null,
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 2,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": [Circular],
            "tag": 2,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "_reactInternalInstance": Object {},
          "context": Object {
            "store": Object {
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            },
          },
          "decreaseFieldCount": [Function],
          "fieldsCount": Object {
            "form": Object {
              "test": 1,
            },
          },
          "fieldsStack": Object {
            "form": Object {
              "test": Immutable.Map {
                "value": "",
                "errors": Immutable.List [],
                "valid": true,
                "touched": false,
                "changed": false,
                "disabled": false,
              },
            },
          },
          "fieldsValidateStack": Object {
            "form": Object {
              "test": Immutable.List [],
            },
          },
          "formName": "form",
          "handleSubmit": [Function],
          "increaseFieldCount": [Function],
          "initialized": true,
          "path": Array [
            "form",
          ],
          "props": Object {
            "children": <ForwardRef
              component="input"
              name="test"
            />,
            "onSubmit": [Function],
            "onSubmitFailed": [Function],
            "path": "form",
          },
          "refs": Object {},
          "registerField": [Function],
          "state": null,
          "unregisterField": [Function],
          "updater": Object {
            "enqueueForceUpdate": [Function],
            "enqueueReplaceState": [Function],
            "enqueueSetState": [Function],
            "isMounted": [Function],
          },
        },
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <ForwardRef
            component="input"
            name="test"
          />,
          "onSubmit": [Function],
          "onSubmitFailed": [Function],
          "path": "form",
        },
        "ref": null,
        "rendered": Object {
          "instance": <form>
            <input
              value=""
            />
          </form>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <ForwardRef
              component="input"
              name="test"
            />,
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "component": "input",
                "name": "test",
              },
              "ref": null,
              "rendered": Object {
                "instance": Field {
                  "__reactInternalMemoizedMaskedChildContext": Object {
                    "_reformRedux": Object {
                      "field": Object {
                        "changeFieldValue": [Function],
                        "changeFieldsValues": [Function],
                        "removeField": [Function],
                        "resetField": [Function],
                        "resetFields": [Function],
                        "setFieldDisabled": [Function],
                        "setFieldErrors": [Function],
                        "setFieldTouched": [Function],
                        "setFieldsDisabled": [Function],
                        "setFieldsErrors": [Function],
                        "setFieldsTouched": [Function],
                      },
                      "form": Object {
                        "fieldsCount": Object {
                          "test": 1,
                        },
                        "initialized": false,
                        "name": "form",
                        "path": Array [
                          "form",
                        ],
                        "registerField": [Function],
                        "resetForm": [Function],
                        "unregisterField": [Function],
                        "updateForm": [Function],
                      },
                    },
                    "store": Object {
                      "dispatch": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                      Symbol(observable): [Function],
                    },
                  },
                  "__reactInternalMemoizedUnmaskedChildContext": Object {
                    "_reformRedux": Object {
                      "field": Object {
                        "changeFieldValue": [Function],
                        "changeFieldsValues": [Function],
                        "removeField": [Function],
                        "resetField": [Function],
                        "resetFields": [Function],
                        "setFieldDisabled": [Function],
                        "setFieldErrors": [Function],
                        "setFieldTouched": [Function],
                        "setFieldsDisabled": [Function],
                        "setFieldsErrors": [Function],
                        "setFieldsTouched": [Function],
                      },
                      "form": Object {
                        "fieldsCount": Object {
                          "test": 1,
                        },
                        "initialized": false,
                        "name": "form",
                        "path": Array [
                          "form",
                        ],
                        "registerField": [Function],
                        "resetForm": [Function],
                        "unregisterField": [Function],
                        "updateForm": [Function],
                      },
                    },
                    "store": Object {
                      "dispatch": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                      Symbol(observable): [Function],
                    },
                  },
                  "_reactInternalFiber": FiberNode {
                    "_debugID": 54,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 53,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "component": "input",
                        "name": "test",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "component": "input",
                        "name": "test",
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 52,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": FiberNode {
                          "_debugID": 51,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": FiberNode {
                            "_debugID": 50,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": FiberNode {
                              "_debugID": 49,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "effectTag": 1,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "memoizedState": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugID": 47,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": FiberNode {
                                  "_debugID": 47,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": [Circular],
                                  "child": null,
                                  "childExpirationTime": 0,
                                  "effectTag": 0,
                                  "expirationTime": 1,
                                  "firstContextDependency": null,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": null,
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": Object {
                                    "containerInfo": <div>
                                      <form>
                                        <input
                                          value=""
                                        />
                                      </form>
                                    </div>,
                                    "context": Object {},
                                    "current": [Circular],
                                    "didError": false,
                                    "earliestPendingTime": 0,
                                    "earliestSuspendedTime": 0,
                                    "expirationTime": 0,
                                    "finishedWork": null,
                                    "firstBatch": null,
                                    "hydrate": false,
                                    "interactionThreadID": 12,
                                    "latestPendingTime": 0,
                                    "latestPingedTime": 0,
                                    "latestSuspendedTime": 0,
                                    "memoizedInteractions": Set {},
                                    "nextExpirationTimeToWorkOn": 0,
                                    "nextScheduledRoot": null,
                                    "pendingChildren": null,
                                    "pendingCommitExpirationTime": 0,
                                    "pendingContext": null,
                                    "pendingInteractionMap": Map {},
                                    "timeoutHandle": -1,
                                  },
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": Object {
                                    "baseState": null,
                                    "firstCapturedEffect": null,
                                    "firstCapturedUpdate": null,
                                    "firstEffect": null,
                                    "firstUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "children": <ForwardRef
                                                component="input"
                                                name="test"
                                              />,
                                              "immutable": true,
                                            }
                                          }
                                        />,
                                      },
                                      "tag": 0,
                                    },
                                    "lastCapturedEffect": null,
                                    "lastCapturedUpdate": null,
                                    "lastEffect": null,
                                    "lastUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "children": <ForwardRef
                                                component="input"
                                                name="test"
                                              />,
                                              "immutable": true,
                                            }
                                          }
                                        />,
                                      },
                                      "tag": 0,
                                    },
                                  },
                                },
                                "child": [Circular],
                                "childExpirationTime": 0,
                                "effectTag": 32,
                                "expirationTime": 0,
                                "firstContextDependency": null,
                                "firstEffect": [Circular],
                                "index": 0,
                                "key": null,
                                "lastEffect": [Circular],
                                "memoizedProps": null,
                                "memoizedState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "children": <ForwardRef
                                          component="input"
                                          name="test"
                                        />,
                                        "immutable": true,
                                      }
                                    }
                                  />,
                                },
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <form>
                                      <input
                                        value=""
                                      />
                                    </form>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "didError": false,
                                  "earliestPendingTime": 0,
                                  "earliestSuspendedTime": 0,
                                  "expirationTime": 0,
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "interactionThreadID": 12,
                                  "latestPendingTime": 0,
                                  "latestPingedTime": 0,
                                  "latestSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextExpirationTimeToWorkOn": 0,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "timeoutHandle": -1,
                                },
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "children": <ForwardRef
                                            component="input"
                                            name="test"
                                          />,
                                          "immutable": true,
                                        }
                                      }
                                    />,
                                  },
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": null,
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": null,
                                },
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": WrapperComponent {
                                "_reactInternalFiber": [Circular],
                                "_reactInternalInstance": Object {},
                                "context": Object {},
                                "props": Object {
                                  "Component": [Function],
                                  "context": null,
                                  "props": Object {
                                    "children": <ForwardRef
                                      component="input"
                                      name="test"
                                    />,
                                    "immutable": true,
                                  },
                                },
                                "refs": Object {},
                                "state": Object {
                                  "context": null,
                                  "mount": true,
                                  "props": Object {
                                    "children": <ForwardRef
                                      component="input"
                                      name="test"
                                    />,
                                    "immutable": true,
                                  },
                                },
                                "updater": Object {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "tag": 2,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "children": <ForwardRef
                                component="input"
                                name="test"
                              />,
                              "immutable": true,
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": <ForwardRef
                                component="input"
                                name="test"
                              />,
                              "immutable": true,
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 49,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "effectTag": 1,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "memoizedState": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugID": 47,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": FiberNode {
                                  "_debugID": 47,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": [Circular],
                                  "child": null,
                                  "childExpirationTime": 0,
                                  "effectTag": 0,
                                  "expirationTime": 1,
                                  "firstContextDependency": null,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": null,
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": Object {
                                    "containerInfo": <div>
                                      <form>
                                        <input
                                          value=""
                                        />
                                      </form>
                                    </div>,
                                    "context": Object {},
                                    "current": [Circular],
                                    "didError": false,
                                    "earliestPendingTime": 0,
                                    "earliestSuspendedTime": 0,
                                    "expirationTime": 0,
                                    "finishedWork": null,
                                    "firstBatch": null,
                                    "hydrate": false,
                                    "interactionThreadID": 12,
                                    "latestPendingTime": 0,
                                    "latestPingedTime": 0,
                                    "latestSuspendedTime": 0,
                                    "memoizedInteractions": Set {},
                                    "nextExpirationTimeToWorkOn": 0,
                                    "nextScheduledRoot": null,
                                    "pendingChildren": null,
                                    "pendingCommitExpirationTime": 0,
                                    "pendingContext": null,
                                    "pendingInteractionMap": Map {},
                                    "timeoutHandle": -1,
                                  },
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": Object {
                                    "baseState": null,
                                    "firstCapturedEffect": null,
                                    "firstCapturedUpdate": null,
                                    "firstEffect": null,
                                    "firstUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "children": <ForwardRef
                                                component="input"
                                                name="test"
                                              />,
                                              "immutable": true,
                                            }
                                          }
                                        />,
                                      },
                                      "tag": 0,
                                    },
                                    "lastCapturedEffect": null,
                                    "lastCapturedUpdate": null,
                                    "lastEffect": null,
                                    "lastUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "children": <ForwardRef
                                                component="input"
                                                name="test"
                                              />,
                                              "immutable": true,
                                            }
                                          }
                                        />,
                                      },
                                      "tag": 0,
                                    },
                                  },
                                },
                                "child": [Circular],
                                "childExpirationTime": 0,
                                "effectTag": 32,
                                "expirationTime": 0,
                                "firstContextDependency": null,
                                "firstEffect": [Circular],
                                "index": 0,
                                "key": null,
                                "lastEffect": [Circular],
                                "memoizedProps": null,
                                "memoizedState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "children": <ForwardRef
                                          component="input"
                                          name="test"
                                        />,
                                        "immutable": true,
                                      }
                                    }
                                  />,
                                },
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <form>
                                      <input
                                        value=""
                                      />
                                    </form>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "didError": false,
                                  "earliestPendingTime": 0,
                                  "earliestSuspendedTime": 0,
                                  "expirationTime": 0,
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "interactionThreadID": 12,
                                  "latestPendingTime": 0,
                                  "latestPingedTime": 0,
                                  "latestSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextExpirationTimeToWorkOn": 0,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "timeoutHandle": -1,
                                },
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "children": <ForwardRef
                                            component="input"
                                            name="test"
                                          />,
                                          "immutable": true,
                                        }
                                      }
                                    />,
                                  },
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": null,
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": null,
                                },
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": WrapperComponent {
                                "_reactInternalFiber": [Circular],
                                "_reactInternalInstance": Object {},
                                "context": Object {},
                                "props": Object {
                                  "Component": [Function],
                                  "context": null,
                                  "props": Object {
                                    "children": <ForwardRef
                                      component="input"
                                      name="test"
                                    />,
                                    "immutable": true,
                                  },
                                },
                                "refs": Object {},
                                "state": Object {
                                  "context": null,
                                  "mount": true,
                                  "props": Object {
                                    "children": <ForwardRef
                                      component="input"
                                      name="test"
                                    />,
                                    "immutable": true,
                                  },
                                },
                                "updater": Object {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "tag": 2,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": Provider {
                              "__reactInternalMemoizedMergedChildContext": Object {
                                "store": Object {
                                  "dispatch": [Function],
                                  "getState": [Function],
                                  "replaceReducer": [Function],
                                  "subscribe": [Function],
                                  Symbol(observable): [Function],
                                },
                              },
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "children": <ForwardRef
                                  component="input"
                                  name="test"
                                />,
                                "immutable": true,
                              },
                              "refs": Object {},
                              "state": null,
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "effectTag": 5,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": <ForwardRef
                              component="input"
                              name="test"
                            />,
                            "onSubmit": [Function],
                            "onSubmitFailed": [Function],
                            "path": "form",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": <ForwardRef
                              component="input"
                              name="test"
                            />,
                            "onSubmit": [Function],
                            "onSubmitFailed": [Function],
                            "path": "form",
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 50,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": FiberNode {
                              "_debugID": 49,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "effectTag": 1,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "memoizedState": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugID": 47,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": FiberNode {
                                  "_debugID": 47,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": [Circular],
                                  "child": null,
                                  "childExpirationTime": 0,
                                  "effectTag": 0,
                                  "expirationTime": 1,
                                  "firstContextDependency": null,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": null,
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": Object {
                                    "containerInfo": <div>
                                      <form>
                                        <input
                                          value=""
                                        />
                                      </form>
                                    </div>,
                                    "context": Object {},
                                    "current": [Circular],
                                    "didError": false,
                                    "earliestPendingTime": 0,
                                    "earliestSuspendedTime": 0,
                                    "expirationTime": 0,
                                    "finishedWork": null,
                                    "firstBatch": null,
                                    "hydrate": false,
                                    "interactionThreadID": 12,
                                    "latestPendingTime": 0,
                                    "latestPingedTime": 0,
                                    "latestSuspendedTime": 0,
                                    "memoizedInteractions": Set {},
                                    "nextExpirationTimeToWorkOn": 0,
                                    "nextScheduledRoot": null,
                                    "pendingChildren": null,
                                    "pendingCommitExpirationTime": 0,
                                    "pendingContext": null,
                                    "pendingInteractionMap": Map {},
                                    "timeoutHandle": -1,
                                  },
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": Object {
                                    "baseState": null,
                                    "firstCapturedEffect": null,
                                    "firstCapturedUpdate": null,
                                    "firstEffect": null,
                                    "firstUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "children": <ForwardRef
                                                component="input"
                                                name="test"
                                              />,
                                              "immutable": true,
                                            }
                                          }
                                        />,
                                      },
                                      "tag": 0,
                                    },
                                    "lastCapturedEffect": null,
                                    "lastCapturedUpdate": null,
                                    "lastEffect": null,
                                    "lastUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "children": <ForwardRef
                                                component="input"
                                                name="test"
                                              />,
                                              "immutable": true,
                                            }
                                          }
                                        />,
                                      },
                                      "tag": 0,
                                    },
                                  },
                                },
                                "child": [Circular],
                                "childExpirationTime": 0,
                                "effectTag": 32,
                                "expirationTime": 0,
                                "firstContextDependency": null,
                                "firstEffect": [Circular],
                                "index": 0,
                                "key": null,
                                "lastEffect": [Circular],
                                "memoizedProps": null,
                                "memoizedState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "children": <ForwardRef
                                          component="input"
                                          name="test"
                                        />,
                                        "immutable": true,
                                      }
                                    }
                                  />,
                                },
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <form>
                                      <input
                                        value=""
                                      />
                                    </form>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "didError": false,
                                  "earliestPendingTime": 0,
                                  "earliestSuspendedTime": 0,
                                  "expirationTime": 0,
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "interactionThreadID": 12,
                                  "latestPendingTime": 0,
                                  "latestPingedTime": 0,
                                  "latestSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextExpirationTimeToWorkOn": 0,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "timeoutHandle": -1,
                                },
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "children": <ForwardRef
                                            component="input"
                                            name="test"
                                          />,
                                          "immutable": true,
                                        }
                                      }
                                    />,
                                  },
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": null,
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": null,
                                },
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": WrapperComponent {
                                "_reactInternalFiber": [Circular],
                                "_reactInternalInstance": Object {},
                                "context": Object {},
                                "props": Object {
                                  "Component": [Function],
                                  "context": null,
                                  "props": Object {
                                    "children": <ForwardRef
                                      component="input"
                                      name="test"
                                    />,
                                    "immutable": true,
                                  },
                                },
                                "refs": Object {},
                                "state": Object {
                                  "context": null,
                                  "mount": true,
                                  "props": Object {
                                    "children": <ForwardRef
                                      component="input"
                                      name="test"
                                    />,
                                    "immutable": true,
                                  },
                                },
                                "updater": Object {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "tag": 2,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "children": <ForwardRef
                                component="input"
                                name="test"
                              />,
                              "immutable": true,
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": <ForwardRef
                                component="input"
                                name="test"
                              />,
                              "immutable": true,
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 49,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "effectTag": 1,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "memoizedState": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugID": 47,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": FiberNode {
                                  "_debugID": 47,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": [Circular],
                                  "child": null,
                                  "childExpirationTime": 0,
                                  "effectTag": 0,
                                  "expirationTime": 1,
                                  "firstContextDependency": null,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": null,
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": Object {
                                    "containerInfo": <div>
                                      <form>
                                        <input
                                          value=""
                                        />
                                      </form>
                                    </div>,
                                    "context": Object {},
                                    "current": [Circular],
                                    "didError": false,
                                    "earliestPendingTime": 0,
                                    "earliestSuspendedTime": 0,
                                    "expirationTime": 0,
                                    "finishedWork": null,
                                    "firstBatch": null,
                                    "hydrate": false,
                                    "interactionThreadID": 12,
                                    "latestPendingTime": 0,
                                    "latestPingedTime": 0,
                                    "latestSuspendedTime": 0,
                                    "memoizedInteractions": Set {},
                                    "nextExpirationTimeToWorkOn": 0,
                                    "nextScheduledRoot": null,
                                    "pendingChildren": null,
                                    "pendingCommitExpirationTime": 0,
                                    "pendingContext": null,
                                    "pendingInteractionMap": Map {},
                                    "timeoutHandle": -1,
                                  },
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": Object {
                                    "baseState": null,
                                    "firstCapturedEffect": null,
                                    "firstCapturedUpdate": null,
                                    "firstEffect": null,
                                    "firstUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "children": <ForwardRef
                                                component="input"
                                                name="test"
                                              />,
                                              "immutable": true,
                                            }
                                          }
                                        />,
                                      },
                                      "tag": 0,
                                    },
                                    "lastCapturedEffect": null,
                                    "lastCapturedUpdate": null,
                                    "lastEffect": null,
                                    "lastUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "children": <ForwardRef
                                                component="input"
                                                name="test"
                                              />,
                                              "immutable": true,
                                            }
                                          }
                                        />,
                                      },
                                      "tag": 0,
                                    },
                                  },
                                },
                                "child": [Circular],
                                "childExpirationTime": 0,
                                "effectTag": 32,
                                "expirationTime": 0,
                                "firstContextDependency": null,
                                "firstEffect": [Circular],
                                "index": 0,
                                "key": null,
                                "lastEffect": [Circular],
                                "memoizedProps": null,
                                "memoizedState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "children": <ForwardRef
                                          component="input"
                                          name="test"
                                        />,
                                        "immutable": true,
                                      }
                                    }
                                  />,
                                },
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <form>
                                      <input
                                        value=""
                                      />
                                    </form>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "didError": false,
                                  "earliestPendingTime": 0,
                                  "earliestSuspendedTime": 0,
                                  "expirationTime": 0,
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "interactionThreadID": 12,
                                  "latestPendingTime": 0,
                                  "latestPingedTime": 0,
                                  "latestSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextExpirationTimeToWorkOn": 0,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "timeoutHandle": -1,
                                },
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "children": <ForwardRef
                                            component="input"
                                            name="test"
                                          />,
                                          "immutable": true,
                                        }
                                      }
                                    />,
                                  },
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": null,
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": null,
                                },
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": WrapperComponent {
                                "_reactInternalFiber": [Circular],
                                "_reactInternalInstance": Object {},
                                "context": Object {},
                                "props": Object {
                                  "Component": [Function],
                                  "context": null,
                                  "props": Object {
                                    "children": <ForwardRef
                                      component="input"
                                      name="test"
                                    />,
                                    "immutable": true,
                                  },
                                },
                                "refs": Object {},
                                "state": Object {
                                  "context": null,
                                  "mount": true,
                                  "props": Object {
                                    "children": <ForwardRef
                                      component="input"
                                      name="test"
                                    />,
                                    "immutable": true,
                                  },
                                },
                                "updater": Object {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "tag": 2,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": Provider {
                              "__reactInternalMemoizedMergedChildContext": Object {
                                "store": Object {
                                  "dispatch": [Function],
                                  "getState": [Function],
                                  "replaceReducer": [Function],
                                  "subscribe": [Function],
                                  Symbol(observable): [Function],
                                },
                              },
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "children": <ForwardRef
                                  component="input"
                                  name="test"
                                />,
                                "immutable": true,
                              },
                              "refs": Object {},
                              "state": null,
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": Form {
                            "__reactInternalMemoizedMaskedChildContext": Object {
                              "store": Object {
                                "dispatch": [Function],
                                "getState": [Function],
                                "replaceReducer": [Function],
                                "subscribe": [Function],
                                Symbol(observable): [Function],
                              },
                            },
                            "__reactInternalMemoizedMergedChildContext": Object {
                              "_reformRedux": Object {
                                "field": Object {
                                  "changeFieldValue": [Function],
                                  "changeFieldsValues": [Function],
                                  "removeField": [Function],
                                  "resetField": [Function],
                                  "resetFields": [Function],
                                  "setFieldDisabled": [Function],
                                  "setFieldErrors": [Function],
                                  "setFieldTouched": [Function],
                                  "setFieldsDisabled": [Function],
                                  "setFieldsErrors": [Function],
                                  "setFieldsTouched": [Function],
                                },
                                "form": Object {
                                  "fieldsCount": Object {
                                    "test": 1,
                                  },
                                  "initialized": false,
                                  "name": "form",
                                  "path": Array [
                                    "form",
                                  ],
                                  "registerField": [Function],
                                  "resetForm": [Function],
                                  "unregisterField": [Function],
                                  "updateForm": [Function],
                                },
                              },
                              "store": Object {
                                "dispatch": [Function],
                                "getState": [Function],
                                "replaceReducer": [Function],
                                "subscribe": [Function],
                                Symbol(observable): [Function],
                              },
                            },
                            "__reactInternalMemoizedUnmaskedChildContext": Object {
                              "store": Object {
                                "dispatch": [Function],
                                "getState": [Function],
                                "replaceReducer": [Function],
                                "subscribe": [Function],
                                Symbol(observable): [Function],
                              },
                            },
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {
                              "store": Object {
                                "dispatch": [Function],
                                "getState": [Function],
                                "replaceReducer": [Function],
                                "subscribe": [Function],
                                Symbol(observable): [Function],
                              },
                            },
                            "decreaseFieldCount": [Function],
                            "fieldsCount": Object {
                              "form": Object {
                                "test": 1,
                              },
                            },
                            "fieldsStack": Object {
                              "form": Object {
                                "test": Immutable.Map {
                                  "value": "",
                                  "errors": Immutable.List [],
                                  "valid": true,
                                  "touched": false,
                                  "changed": false,
                                  "disabled": false,
                                },
                              },
                            },
                            "fieldsValidateStack": Object {
                              "form": Object {
                                "test": Immutable.List [],
                              },
                            },
                            "formName": "form",
                            "handleSubmit": [Function],
                            "increaseFieldCount": [Function],
                            "initialized": true,
                            "path": Array [
                              "form",
                            ],
                            "props": Object {
                              "children": <ForwardRef
                                component="input"
                                name="test"
                              />,
                              "onSubmit": [Function],
                              "onSubmitFailed": [Function],
                              "path": "form",
                            },
                            "refs": Object {},
                            "registerField": [Function],
                            "state": null,
                            "unregisterField": [Function],
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": [Circular],
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": <ForwardRef
                            component="input"
                            name="test"
                          />,
                          "onSubmit": [Function],
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": <ForwardRef
                            component="input"
                            name="test"
                          />,
                          "onSubmit": [Function],
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 51,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": FiberNode {
                            "_debugID": 50,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": FiberNode {
                              "_debugID": 49,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "effectTag": 1,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "memoizedState": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugID": 47,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": FiberNode {
                                  "_debugID": 47,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": [Circular],
                                  "child": null,
                                  "childExpirationTime": 0,
                                  "effectTag": 0,
                                  "expirationTime": 1,
                                  "firstContextDependency": null,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": null,
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": Object {
                                    "containerInfo": <div>
                                      <form>
                                        <input
                                          value=""
                                        />
                                      </form>
                                    </div>,
                                    "context": Object {},
                                    "current": [Circular],
                                    "didError": false,
                                    "earliestPendingTime": 0,
                                    "earliestSuspendedTime": 0,
                                    "expirationTime": 0,
                                    "finishedWork": null,
                                    "firstBatch": null,
                                    "hydrate": false,
                                    "interactionThreadID": 12,
                                    "latestPendingTime": 0,
                                    "latestPingedTime": 0,
                                    "latestSuspendedTime": 0,
                                    "memoizedInteractions": Set {},
                                    "nextExpirationTimeToWorkOn": 0,
                                    "nextScheduledRoot": null,
                                    "pendingChildren": null,
                                    "pendingCommitExpirationTime": 0,
                                    "pendingContext": null,
                                    "pendingInteractionMap": Map {},
                                    "timeoutHandle": -1,
                                  },
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": Object {
                                    "baseState": null,
                                    "firstCapturedEffect": null,
                                    "firstCapturedUpdate": null,
                                    "firstEffect": null,
                                    "firstUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "children": <ForwardRef
                                                component="input"
                                                name="test"
                                              />,
                                              "immutable": true,
                                            }
                                          }
                                        />,
                                      },
                                      "tag": 0,
                                    },
                                    "lastCapturedEffect": null,
                                    "lastCapturedUpdate": null,
                                    "lastEffect": null,
                                    "lastUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "children": <ForwardRef
                                                component="input"
                                                name="test"
                                              />,
                                              "immutable": true,
                                            }
                                          }
                                        />,
                                      },
                                      "tag": 0,
                                    },
                                  },
                                },
                                "child": [Circular],
                                "childExpirationTime": 0,
                                "effectTag": 32,
                                "expirationTime": 0,
                                "firstContextDependency": null,
                                "firstEffect": [Circular],
                                "index": 0,
                                "key": null,
                                "lastEffect": [Circular],
                                "memoizedProps": null,
                                "memoizedState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "children": <ForwardRef
                                          component="input"
                                          name="test"
                                        />,
                                        "immutable": true,
                                      }
                                    }
                                  />,
                                },
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <form>
                                      <input
                                        value=""
                                      />
                                    </form>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "didError": false,
                                  "earliestPendingTime": 0,
                                  "earliestSuspendedTime": 0,
                                  "expirationTime": 0,
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "interactionThreadID": 12,
                                  "latestPendingTime": 0,
                                  "latestPingedTime": 0,
                                  "latestSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextExpirationTimeToWorkOn": 0,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "timeoutHandle": -1,
                                },
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "children": <ForwardRef
                                            component="input"
                                            name="test"
                                          />,
                                          "immutable": true,
                                        }
                                      }
                                    />,
                                  },
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": null,
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": null,
                                },
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": WrapperComponent {
                                "_reactInternalFiber": [Circular],
                                "_reactInternalInstance": Object {},
                                "context": Object {},
                                "props": Object {
                                  "Component": [Function],
                                  "context": null,
                                  "props": Object {
                                    "children": <ForwardRef
                                      component="input"
                                      name="test"
                                    />,
                                    "immutable": true,
                                  },
                                },
                                "refs": Object {},
                                "state": Object {
                                  "context": null,
                                  "mount": true,
                                  "props": Object {
                                    "children": <ForwardRef
                                      component="input"
                                      name="test"
                                    />,
                                    "immutable": true,
                                  },
                                },
                                "updater": Object {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "tag": 2,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "children": <ForwardRef
                                component="input"
                                name="test"
                              />,
                              "immutable": true,
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": <ForwardRef
                                component="input"
                                name="test"
                              />,
                              "immutable": true,
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 49,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "effectTag": 1,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "memoizedState": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugID": 47,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": FiberNode {
                                  "_debugID": 47,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": [Circular],
                                  "child": null,
                                  "childExpirationTime": 0,
                                  "effectTag": 0,
                                  "expirationTime": 1,
                                  "firstContextDependency": null,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": null,
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": Object {
                                    "containerInfo": <div>
                                      <form>
                                        <input
                                          value=""
                                        />
                                      </form>
                                    </div>,
                                    "context": Object {},
                                    "current": [Circular],
                                    "didError": false,
                                    "earliestPendingTime": 0,
                                    "earliestSuspendedTime": 0,
                                    "expirationTime": 0,
                                    "finishedWork": null,
                                    "firstBatch": null,
                                    "hydrate": false,
                                    "interactionThreadID": 12,
                                    "latestPendingTime": 0,
                                    "latestPingedTime": 0,
                                    "latestSuspendedTime": 0,
                                    "memoizedInteractions": Set {},
                                    "nextExpirationTimeToWorkOn": 0,
                                    "nextScheduledRoot": null,
                                    "pendingChildren": null,
                                    "pendingCommitExpirationTime": 0,
                                    "pendingContext": null,
                                    "pendingInteractionMap": Map {},
                                    "timeoutHandle": -1,
                                  },
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": Object {
                                    "baseState": null,
                                    "firstCapturedEffect": null,
                                    "firstCapturedUpdate": null,
                                    "firstEffect": null,
                                    "firstUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "children": <ForwardRef
                                                component="input"
                                                name="test"
                                              />,
                                              "immutable": true,
                                            }
                                          }
                                        />,
                                      },
                                      "tag": 0,
                                    },
                                    "lastCapturedEffect": null,
                                    "lastCapturedUpdate": null,
                                    "lastEffect": null,
                                    "lastUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "children": <ForwardRef
                                                component="input"
                                                name="test"
                                              />,
                                              "immutable": true,
                                            }
                                          }
                                        />,
                                      },
                                      "tag": 0,
                                    },
                                  },
                                },
                                "child": [Circular],
                                "childExpirationTime": 0,
                                "effectTag": 32,
                                "expirationTime": 0,
                                "firstContextDependency": null,
                                "firstEffect": [Circular],
                                "index": 0,
                                "key": null,
                                "lastEffect": [Circular],
                                "memoizedProps": null,
                                "memoizedState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "children": <ForwardRef
                                          component="input"
                                          name="test"
                                        />,
                                        "immutable": true,
                                      }
                                    }
                                  />,
                                },
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <form>
                                      <input
                                        value=""
                                      />
                                    </form>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "didError": false,
                                  "earliestPendingTime": 0,
                                  "earliestSuspendedTime": 0,
                                  "expirationTime": 0,
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "interactionThreadID": 12,
                                  "latestPendingTime": 0,
                                  "latestPingedTime": 0,
                                  "latestSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextExpirationTimeToWorkOn": 0,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "timeoutHandle": -1,
                                },
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "children": <ForwardRef
                                            component="input"
                                            name="test"
                                          />,
                                          "immutable": true,
                                        }
                                      }
                                    />,
                                  },
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": null,
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": null,
                                },
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": WrapperComponent {
                                "_reactInternalFiber": [Circular],
                                "_reactInternalInstance": Object {},
                                "context": Object {},
                                "props": Object {
                                  "Component": [Function],
                                  "context": null,
                                  "props": Object {
                                    "children": <ForwardRef
                                      component="input"
                                      name="test"
                                    />,
                                    "immutable": true,
                                  },
                                },
                                "refs": Object {},
                                "state": Object {
                                  "context": null,
                                  "mount": true,
                                  "props": Object {
                                    "children": <ForwardRef
                                      component="input"
                                      name="test"
                                    />,
                                    "immutable": true,
                                  },
                                },
                                "updater": Object {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "tag": 2,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": Provider {
                              "__reactInternalMemoizedMergedChildContext": Object {
                                "store": Object {
                                  "dispatch": [Function],
                                  "getState": [Function],
                                  "replaceReducer": [Function],
                                  "subscribe": [Function],
                                  Symbol(observable): [Function],
                                },
                              },
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "children": <ForwardRef
                                  component="input"
                                  name="test"
                                />,
                                "immutable": true,
                              },
                              "refs": Object {},
                              "state": null,
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "effectTag": 5,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": <ForwardRef
                              component="input"
                              name="test"
                            />,
                            "onSubmit": [Function],
                            "onSubmitFailed": [Function],
                            "path": "form",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": <ForwardRef
                              component="input"
                              name="test"
                            />,
                            "onSubmit": [Function],
                            "onSubmitFailed": [Function],
                            "path": "form",
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 50,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": FiberNode {
                              "_debugID": 49,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "effectTag": 1,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "memoizedState": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugID": 47,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": FiberNode {
                                  "_debugID": 47,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": [Circular],
                                  "child": null,
                                  "childExpirationTime": 0,
                                  "effectTag": 0,
                                  "expirationTime": 1,
                                  "firstContextDependency": null,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": null,
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": Object {
                                    "containerInfo": <div>
                                      <form>
                                        <input
                                          value=""
                                        />
                                      </form>
                                    </div>,
                                    "context": Object {},
                                    "current": [Circular],
                                    "didError": false,
                                    "earliestPendingTime": 0,
                                    "earliestSuspendedTime": 0,
                                    "expirationTime": 0,
                                    "finishedWork": null,
                                    "firstBatch": null,
                                    "hydrate": false,
                                    "interactionThreadID": 12,
                                    "latestPendingTime": 0,
                                    "latestPingedTime": 0,
                                    "latestSuspendedTime": 0,
                                    "memoizedInteractions": Set {},
                                    "nextExpirationTimeToWorkOn": 0,
                                    "nextScheduledRoot": null,
                                    "pendingChildren": null,
                                    "pendingCommitExpirationTime": 0,
                                    "pendingContext": null,
                                    "pendingInteractionMap": Map {},
                                    "timeoutHandle": -1,
                                  },
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": Object {
                                    "baseState": null,
                                    "firstCapturedEffect": null,
                                    "firstCapturedUpdate": null,
                                    "firstEffect": null,
                                    "firstUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "children": <ForwardRef
                                                component="input"
                                                name="test"
                                              />,
                                              "immutable": true,
                                            }
                                          }
                                        />,
                                      },
                                      "tag": 0,
                                    },
                                    "lastCapturedEffect": null,
                                    "lastCapturedUpdate": null,
                                    "lastEffect": null,
                                    "lastUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "children": <ForwardRef
                                                component="input"
                                                name="test"
                                              />,
                                              "immutable": true,
                                            }
                                          }
                                        />,
                                      },
                                      "tag": 0,
                                    },
                                  },
                                },
                                "child": [Circular],
                                "childExpirationTime": 0,
                                "effectTag": 32,
                                "expirationTime": 0,
                                "firstContextDependency": null,
                                "firstEffect": [Circular],
                                "index": 0,
                                "key": null,
                                "lastEffect": [Circular],
                                "memoizedProps": null,
                                "memoizedState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "children": <ForwardRef
                                          component="input"
                                          name="test"
                                        />,
                                        "immutable": true,
                                      }
                                    }
                                  />,
                                },
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <form>
                                      <input
                                        value=""
                                      />
                                    </form>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "didError": false,
                                  "earliestPendingTime": 0,
                                  "earliestSuspendedTime": 0,
                                  "expirationTime": 0,
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "interactionThreadID": 12,
                                  "latestPendingTime": 0,
                                  "latestPingedTime": 0,
                                  "latestSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextExpirationTimeToWorkOn": 0,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "timeoutHandle": -1,
                                },
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "children": <ForwardRef
                                            component="input"
                                            name="test"
                                          />,
                                          "immutable": true,
                                        }
                                      }
                                    />,
                                  },
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": null,
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": null,
                                },
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": WrapperComponent {
                                "_reactInternalFiber": [Circular],
                                "_reactInternalInstance": Object {},
                                "context": Object {},
                                "props": Object {
                                  "Component": [Function],
                                  "context": null,
                                  "props": Object {
                                    "children": <ForwardRef
                                      component="input"
                                      name="test"
                                    />,
                                    "immutable": true,
                                  },
                                },
                                "refs": Object {},
                                "state": Object {
                                  "context": null,
                                  "mount": true,
                                  "props": Object {
                                    "children": <ForwardRef
                                      component="input"
                                      name="test"
                                    />,
                                    "immutable": true,
                                  },
                                },
                                "updater": Object {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "tag": 2,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "children": <ForwardRef
                                component="input"
                                name="test"
                              />,
                              "immutable": true,
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": <ForwardRef
                                component="input"
                                name="test"
                              />,
                              "immutable": true,
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 49,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "effectTag": 1,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "memoizedState": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugID": 47,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": FiberNode {
                                  "_debugID": 47,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": [Circular],
                                  "child": null,
                                  "childExpirationTime": 0,
                                  "effectTag": 0,
                                  "expirationTime": 1,
                                  "firstContextDependency": null,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": null,
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": Object {
                                    "containerInfo": <div>
                                      <form>
                                        <input
                                          value=""
                                        />
                                      </form>
                                    </div>,
                                    "context": Object {},
                                    "current": [Circular],
                                    "didError": false,
                                    "earliestPendingTime": 0,
                                    "earliestSuspendedTime": 0,
                                    "expirationTime": 0,
                                    "finishedWork": null,
                                    "firstBatch": null,
                                    "hydrate": false,
                                    "interactionThreadID": 12,
                                    "latestPendingTime": 0,
                                    "latestPingedTime": 0,
                                    "latestSuspendedTime": 0,
                                    "memoizedInteractions": Set {},
                                    "nextExpirationTimeToWorkOn": 0,
                                    "nextScheduledRoot": null,
                                    "pendingChildren": null,
                                    "pendingCommitExpirationTime": 0,
                                    "pendingContext": null,
                                    "pendingInteractionMap": Map {},
                                    "timeoutHandle": -1,
                                  },
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": Object {
                                    "baseState": null,
                                    "firstCapturedEffect": null,
                                    "firstCapturedUpdate": null,
                                    "firstEffect": null,
                                    "firstUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "children": <ForwardRef
                                                component="input"
                                                name="test"
                                              />,
                                              "immutable": true,
                                            }
                                          }
                                        />,
                                      },
                                      "tag": 0,
                                    },
                                    "lastCapturedEffect": null,
                                    "lastCapturedUpdate": null,
                                    "lastEffect": null,
                                    "lastUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "children": <ForwardRef
                                                component="input"
                                                name="test"
                                              />,
                                              "immutable": true,
                                            }
                                          }
                                        />,
                                      },
                                      "tag": 0,
                                    },
                                  },
                                },
                                "child": [Circular],
                                "childExpirationTime": 0,
                                "effectTag": 32,
                                "expirationTime": 0,
                                "firstContextDependency": null,
                                "firstEffect": [Circular],
                                "index": 0,
                                "key": null,
                                "lastEffect": [Circular],
                                "memoizedProps": null,
                                "memoizedState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "children": <ForwardRef
                                          component="input"
                                          name="test"
                                        />,
                                        "immutable": true,
                                      }
                                    }
                                  />,
                                },
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <form>
                                      <input
                                        value=""
                                      />
                                    </form>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "didError": false,
                                  "earliestPendingTime": 0,
                                  "earliestSuspendedTime": 0,
                                  "expirationTime": 0,
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "interactionThreadID": 12,
                                  "latestPendingTime": 0,
                                  "latestPingedTime": 0,
                                  "latestSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextExpirationTimeToWorkOn": 0,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "timeoutHandle": -1,
                                },
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "children": <ForwardRef
                                            component="input"
                                            name="test"
                                          />,
                                          "immutable": true,
                                        }
                                      }
                                    />,
                                  },
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": null,
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": null,
                                },
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": WrapperComponent {
                                "_reactInternalFiber": [Circular],
                                "_reactInternalInstance": Object {},
                                "context": Object {},
                                "props": Object {
                                  "Component": [Function],
                                  "context": null,
                                  "props": Object {
                                    "children": <ForwardRef
                                      component="input"
                                      name="test"
                                    />,
                                    "immutable": true,
                                  },
                                },
                                "refs": Object {},
                                "state": Object {
                                  "context": null,
                                  "mount": true,
                                  "props": Object {
                                    "children": <ForwardRef
                                      component="input"
                                      name="test"
                                    />,
                                    "immutable": true,
                                  },
                                },
                                "updater": Object {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "tag": 2,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": Provider {
                              "__reactInternalMemoizedMergedChildContext": Object {
                                "store": Object {
                                  "dispatch": [Function],
                                  "getState": [Function],
                                  "replaceReducer": [Function],
                                  "subscribe": [Function],
                                  Symbol(observable): [Function],
                                },
                              },
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "children": <ForwardRef
                                  component="input"
                                  name="test"
                                />,
                                "immutable": true,
                              },
                              "refs": Object {},
                              "state": null,
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": Form {
                            "__reactInternalMemoizedMaskedChildContext": Object {
                              "store": Object {
                                "dispatch": [Function],
                                "getState": [Function],
                                "replaceReducer": [Function],
                                "subscribe": [Function],
                                Symbol(observable): [Function],
                              },
                            },
                            "__reactInternalMemoizedMergedChildContext": Object {
                              "_reformRedux": Object {
                                "field": Object {
                                  "changeFieldValue": [Function],
                                  "changeFieldsValues": [Function],
                                  "removeField": [Function],
                                  "resetField": [Function],
                                  "resetFields": [Function],
                                  "setFieldDisabled": [Function],
                                  "setFieldErrors": [Function],
                                  "setFieldTouched": [Function],
                                  "setFieldsDisabled": [Function],
                                  "setFieldsErrors": [Function],
                                  "setFieldsTouched": [Function],
                                },
                                "form": Object {
                                  "fieldsCount": Object {
                                    "test": 1,
                                  },
                                  "initialized": false,
                                  "name": "form",
                                  "path": Array [
                                    "form",
                                  ],
                                  "registerField": [Function],
                                  "resetForm": [Function],
                                  "unregisterField": [Function],
                                  "updateForm": [Function],
                                },
                              },
                              "store": Object {
                                "dispatch": [Function],
                                "getState": [Function],
                                "replaceReducer": [Function],
                                "subscribe": [Function],
                                Symbol(observable): [Function],
                              },
                            },
                            "__reactInternalMemoizedUnmaskedChildContext": Object {
                              "store": Object {
                                "dispatch": [Function],
                                "getState": [Function],
                                "replaceReducer": [Function],
                                "subscribe": [Function],
                                Symbol(observable): [Function],
                              },
                            },
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {
                              "store": Object {
                                "dispatch": [Function],
                                "getState": [Function],
                                "replaceReducer": [Function],
                                "subscribe": [Function],
                                Symbol(observable): [Function],
                              },
                            },
                            "decreaseFieldCount": [Function],
                            "fieldsCount": Object {
                              "form": Object {
                                "test": 1,
                              },
                            },
                            "fieldsStack": Object {
                              "form": Object {
                                "test": Immutable.Map {
                                  "value": "",
                                  "errors": Immutable.List [],
                                  "valid": true,
                                  "touched": false,
                                  "changed": false,
                                  "disabled": false,
                                },
                              },
                            },
                            "fieldsValidateStack": Object {
                              "form": Object {
                                "test": Immutable.List [],
                              },
                            },
                            "formName": "form",
                            "handleSubmit": [Function],
                            "increaseFieldCount": [Function],
                            "initialized": true,
                            "path": Array [
                              "form",
                            ],
                            "props": Object {
                              "children": <ForwardRef
                                component="input"
                                name="test"
                              />,
                              "onSubmit": [Function],
                              "onSubmitFailed": [Function],
                              "path": "form",
                            },
                            "refs": Object {},
                            "registerField": [Function],
                            "state": null,
                            "unregisterField": [Function],
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <form>
                          <input
                            value=""
                          />
                        </form>,
                        "tag": 7,
                        "treeBaseDuration": 0,
                        "type": "form",
                        "updateQueue": null,
                      },
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": null,
                      "tag": 13,
                      "treeBaseDuration": 0,
                      "type": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                      "updateQueue": null,
                    },
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 55,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "disabled": false,
                        "onBlur": [Function],
                        "onChange": [Function],
                        "onFocus": [Function],
                        "value": "",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "disabled": false,
                        "onBlur": [Function],
                        "onChange": [Function],
                        "onFocus": [Function],
                        "value": "",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": <input
                        value=""
                      />,
                      "tag": 7,
                      "treeBaseDuration": 0,
                      "type": "input",
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "component": "input",
                      "disabled": false,
                      "innerRef": null,
                      "name": "test",
                      "value": "",
                    },
                    "memoizedState": Object {
                      "field": Immutable.Map {
                        "value": "",
                        "errors": Immutable.List [],
                        "valid": true,
                        "touched": false,
                        "changed": false,
                        "disabled": false,
                      },
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "component": "input",
                      "disabled": false,
                      "innerRef": null,
                      "name": "test",
                      "value": "",
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 53,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "component": "input",
                        "name": "test",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "component": "input",
                        "name": "test",
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 52,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": FiberNode {
                          "_debugID": 51,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": FiberNode {
                            "_debugID": 50,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": FiberNode {
                              "_debugID": 49,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "effectTag": 1,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "memoizedState": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugID": 47,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": FiberNode {
                                  "_debugID": 47,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": [Circular],
                                  "child": null,
                                  "childExpirationTime": 0,
                                  "effectTag": 0,
                                  "expirationTime": 1,
                                  "firstContextDependency": null,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": null,
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": Object {
                                    "containerInfo": <div>
                                      <form>
                                        <input
                                          value=""
                                        />
                                      </form>
                                    </div>,
                                    "context": Object {},
                                    "current": [Circular],
                                    "didError": false,
                                    "earliestPendingTime": 0,
                                    "earliestSuspendedTime": 0,
                                    "expirationTime": 0,
                                    "finishedWork": null,
                                    "firstBatch": null,
                                    "hydrate": false,
                                    "interactionThreadID": 12,
                                    "latestPendingTime": 0,
                                    "latestPingedTime": 0,
                                    "latestSuspendedTime": 0,
                                    "memoizedInteractions": Set {},
                                    "nextExpirationTimeToWorkOn": 0,
                                    "nextScheduledRoot": null,
                                    "pendingChildren": null,
                                    "pendingCommitExpirationTime": 0,
                                    "pendingContext": null,
                                    "pendingInteractionMap": Map {},
                                    "timeoutHandle": -1,
                                  },
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": Object {
                                    "baseState": null,
                                    "firstCapturedEffect": null,
                                    "firstCapturedUpdate": null,
                                    "firstEffect": null,
                                    "firstUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "children": <ForwardRef
                                                component="input"
                                                name="test"
                                              />,
                                              "immutable": true,
                                            }
                                          }
                                        />,
                                      },
                                      "tag": 0,
                                    },
                                    "lastCapturedEffect": null,
                                    "lastCapturedUpdate": null,
                                    "lastEffect": null,
                                    "lastUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "children": <ForwardRef
                                                component="input"
                                                name="test"
                                              />,
                                              "immutable": true,
                                            }
                                          }
                                        />,
                                      },
                                      "tag": 0,
                                    },
                                  },
                                },
                                "child": [Circular],
                                "childExpirationTime": 0,
                                "effectTag": 32,
                                "expirationTime": 0,
                                "firstContextDependency": null,
                                "firstEffect": [Circular],
                                "index": 0,
                                "key": null,
                                "lastEffect": [Circular],
                                "memoizedProps": null,
                                "memoizedState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "children": <ForwardRef
                                          component="input"
                                          name="test"
                                        />,
                                        "immutable": true,
                                      }
                                    }
                                  />,
                                },
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <form>
                                      <input
                                        value=""
                                      />
                                    </form>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "didError": false,
                                  "earliestPendingTime": 0,
                                  "earliestSuspendedTime": 0,
                                  "expirationTime": 0,
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "interactionThreadID": 12,
                                  "latestPendingTime": 0,
                                  "latestPingedTime": 0,
                                  "latestSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextExpirationTimeToWorkOn": 0,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "timeoutHandle": -1,
                                },
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "children": <ForwardRef
                                            component="input"
                                            name="test"
                                          />,
                                          "immutable": true,
                                        }
                                      }
                                    />,
                                  },
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": null,
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": null,
                                },
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": WrapperComponent {
                                "_reactInternalFiber": [Circular],
                                "_reactInternalInstance": Object {},
                                "context": Object {},
                                "props": Object {
                                  "Component": [Function],
                                  "context": null,
                                  "props": Object {
                                    "children": <ForwardRef
                                      component="input"
                                      name="test"
                                    />,
                                    "immutable": true,
                                  },
                                },
                                "refs": Object {},
                                "state": Object {
                                  "context": null,
                                  "mount": true,
                                  "props": Object {
                                    "children": <ForwardRef
                                      component="input"
                                      name="test"
                                    />,
                                    "immutable": true,
                                  },
                                },
                                "updater": Object {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "tag": 2,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "children": <ForwardRef
                                component="input"
                                name="test"
                              />,
                              "immutable": true,
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": <ForwardRef
                                component="input"
                                name="test"
                              />,
                              "immutable": true,
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 49,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "effectTag": 1,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "memoizedState": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugID": 47,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": FiberNode {
                                  "_debugID": 47,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": [Circular],
                                  "child": null,
                                  "childExpirationTime": 0,
                                  "effectTag": 0,
                                  "expirationTime": 1,
                                  "firstContextDependency": null,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": null,
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": Object {
                                    "containerInfo": <div>
                                      <form>
                                        <input
                                          value=""
                                        />
                                      </form>
                                    </div>,
                                    "context": Object {},
                                    "current": [Circular],
                                    "didError": false,
                                    "earliestPendingTime": 0,
                                    "earliestSuspendedTime": 0,
                                    "expirationTime": 0,
                                    "finishedWork": null,
                                    "firstBatch": null,
                                    "hydrate": false,
                                    "interactionThreadID": 12,
                                    "latestPendingTime": 0,
                                    "latestPingedTime": 0,
                                    "latestSuspendedTime": 0,
                                    "memoizedInteractions": Set {},
                                    "nextExpirationTimeToWorkOn": 0,
                                    "nextScheduledRoot": null,
                                    "pendingChildren": null,
                                    "pendingCommitExpirationTime": 0,
                                    "pendingContext": null,
                                    "pendingInteractionMap": Map {},
                                    "timeoutHandle": -1,
                                  },
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": Object {
                                    "baseState": null,
                                    "firstCapturedEffect": null,
                                    "firstCapturedUpdate": null,
                                    "firstEffect": null,
                                    "firstUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "children": <ForwardRef
                                                component="input"
                                                name="test"
                                              />,
                                              "immutable": true,
                                            }
                                          }
                                        />,
                                      },
                                      "tag": 0,
                                    },
                                    "lastCapturedEffect": null,
                                    "lastCapturedUpdate": null,
                                    "lastEffect": null,
                                    "lastUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "children": <ForwardRef
                                                component="input"
                                                name="test"
                                              />,
                                              "immutable": true,
                                            }
                                          }
                                        />,
                                      },
                                      "tag": 0,
                                    },
                                  },
                                },
                                "child": [Circular],
                                "childExpirationTime": 0,
                                "effectTag": 32,
                                "expirationTime": 0,
                                "firstContextDependency": null,
                                "firstEffect": [Circular],
                                "index": 0,
                                "key": null,
                                "lastEffect": [Circular],
                                "memoizedProps": null,
                                "memoizedState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "children": <ForwardRef
                                          component="input"
                                          name="test"
                                        />,
                                        "immutable": true,
                                      }
                                    }
                                  />,
                                },
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <form>
                                      <input
                                        value=""
                                      />
                                    </form>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "didError": false,
                                  "earliestPendingTime": 0,
                                  "earliestSuspendedTime": 0,
                                  "expirationTime": 0,
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "interactionThreadID": 12,
                                  "latestPendingTime": 0,
                                  "latestPingedTime": 0,
                                  "latestSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextExpirationTimeToWorkOn": 0,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "timeoutHandle": -1,
                                },
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "children": <ForwardRef
                                            component="input"
                                            name="test"
                                          />,
                                          "immutable": true,
                                        }
                                      }
                                    />,
                                  },
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": null,
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": null,
                                },
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": WrapperComponent {
                                "_reactInternalFiber": [Circular],
                                "_reactInternalInstance": Object {},
                                "context": Object {},
                                "props": Object {
                                  "Component": [Function],
                                  "context": null,
                                  "props": Object {
                                    "children": <ForwardRef
                                      component="input"
                                      name="test"
                                    />,
                                    "immutable": true,
                                  },
                                },
                                "refs": Object {},
                                "state": Object {
                                  "context": null,
                                  "mount": true,
                                  "props": Object {
                                    "children": <ForwardRef
                                      component="input"
                                      name="test"
                                    />,
                                    "immutable": true,
                                  },
                                },
                                "updater": Object {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "tag": 2,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": Provider {
                              "__reactInternalMemoizedMergedChildContext": Object {
                                "store": Object {
                                  "dispatch": [Function],
                                  "getState": [Function],
                                  "replaceReducer": [Function],
                                  "subscribe": [Function],
                                  Symbol(observable): [Function],
                                },
                              },
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "children": <ForwardRef
                                  component="input"
                                  name="test"
                                />,
                                "immutable": true,
                              },
                              "refs": Object {},
                              "state": null,
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "effectTag": 5,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": <ForwardRef
                              component="input"
                              name="test"
                            />,
                            "onSubmit": [Function],
                            "onSubmitFailed": [Function],
                            "path": "form",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": <ForwardRef
                              component="input"
                              name="test"
                            />,
                            "onSubmit": [Function],
                            "onSubmitFailed": [Function],
                            "path": "form",
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 50,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": FiberNode {
                              "_debugID": 49,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "effectTag": 1,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "memoizedState": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugID": 47,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": FiberNode {
                                  "_debugID": 47,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": [Circular],
                                  "child": null,
                                  "childExpirationTime": 0,
                                  "effectTag": 0,
                                  "expirationTime": 1,
                                  "firstContextDependency": null,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": null,
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": Object {
                                    "containerInfo": <div>
                                      <form>
                                        <input
                                          value=""
                                        />
                                      </form>
                                    </div>,
                                    "context": Object {},
                                    "current": [Circular],
                                    "didError": false,
                                    "earliestPendingTime": 0,
                                    "earliestSuspendedTime": 0,
                                    "expirationTime": 0,
                                    "finishedWork": null,
                                    "firstBatch": null,
                                    "hydrate": false,
                                    "interactionThreadID": 12,
                                    "latestPendingTime": 0,
                                    "latestPingedTime": 0,
                                    "latestSuspendedTime": 0,
                                    "memoizedInteractions": Set {},
                                    "nextExpirationTimeToWorkOn": 0,
                                    "nextScheduledRoot": null,
                                    "pendingChildren": null,
                                    "pendingCommitExpirationTime": 0,
                                    "pendingContext": null,
                                    "pendingInteractionMap": Map {},
                                    "timeoutHandle": -1,
                                  },
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": Object {
                                    "baseState": null,
                                    "firstCapturedEffect": null,
                                    "firstCapturedUpdate": null,
                                    "firstEffect": null,
                                    "firstUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "children": <ForwardRef
                                                component="input"
                                                name="test"
                                              />,
                                              "immutable": true,
                                            }
                                          }
                                        />,
                                      },
                                      "tag": 0,
                                    },
                                    "lastCapturedEffect": null,
                                    "lastCapturedUpdate": null,
                                    "lastEffect": null,
                                    "lastUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "children": <ForwardRef
                                                component="input"
                                                name="test"
                                              />,
                                              "immutable": true,
                                            }
                                          }
                                        />,
                                      },
                                      "tag": 0,
                                    },
                                  },
                                },
                                "child": [Circular],
                                "childExpirationTime": 0,
                                "effectTag": 32,
                                "expirationTime": 0,
                                "firstContextDependency": null,
                                "firstEffect": [Circular],
                                "index": 0,
                                "key": null,
                                "lastEffect": [Circular],
                                "memoizedProps": null,
                                "memoizedState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "children": <ForwardRef
                                          component="input"
                                          name="test"
                                        />,
                                        "immutable": true,
                                      }
                                    }
                                  />,
                                },
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <form>
                                      <input
                                        value=""
                                      />
                                    </form>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "didError": false,
                                  "earliestPendingTime": 0,
                                  "earliestSuspendedTime": 0,
                                  "expirationTime": 0,
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "interactionThreadID": 12,
                                  "latestPendingTime": 0,
                                  "latestPingedTime": 0,
                                  "latestSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextExpirationTimeToWorkOn": 0,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "timeoutHandle": -1,
                                },
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "children": <ForwardRef
                                            component="input"
                                            name="test"
                                          />,
                                          "immutable": true,
                                        }
                                      }
                                    />,
                                  },
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": null,
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": null,
                                },
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": WrapperComponent {
                                "_reactInternalFiber": [Circular],
                                "_reactInternalInstance": Object {},
                                "context": Object {},
                                "props": Object {
                                  "Component": [Function],
                                  "context": null,
                                  "props": Object {
                                    "children": <ForwardRef
                                      component="input"
                                      name="test"
                                    />,
                                    "immutable": true,
                                  },
                                },
                                "refs": Object {},
                                "state": Object {
                                  "context": null,
                                  "mount": true,
                                  "props": Object {
                                    "children": <ForwardRef
                                      component="input"
                                      name="test"
                                    />,
                                    "immutable": true,
                                  },
                                },
                                "updater": Object {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "tag": 2,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "children": <ForwardRef
                                component="input"
                                name="test"
                              />,
                              "immutable": true,
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": <ForwardRef
                                component="input"
                                name="test"
                              />,
                              "immutable": true,
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 49,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "effectTag": 1,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "memoizedState": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugID": 47,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": FiberNode {
                                  "_debugID": 47,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": [Circular],
                                  "child": null,
                                  "childExpirationTime": 0,
                                  "effectTag": 0,
                                  "expirationTime": 1,
                                  "firstContextDependency": null,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": null,
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": Object {
                                    "containerInfo": <div>
                                      <form>
                                        <input
                                          value=""
                                        />
                                      </form>
                                    </div>,
                                    "context": Object {},
                                    "current": [Circular],
                                    "didError": false,
                                    "earliestPendingTime": 0,
                                    "earliestSuspendedTime": 0,
                                    "expirationTime": 0,
                                    "finishedWork": null,
                                    "firstBatch": null,
                                    "hydrate": false,
                                    "interactionThreadID": 12,
                                    "latestPendingTime": 0,
                                    "latestPingedTime": 0,
                                    "latestSuspendedTime": 0,
                                    "memoizedInteractions": Set {},
                                    "nextExpirationTimeToWorkOn": 0,
                                    "nextScheduledRoot": null,
                                    "pendingChildren": null,
                                    "pendingCommitExpirationTime": 0,
                                    "pendingContext": null,
                                    "pendingInteractionMap": Map {},
                                    "timeoutHandle": -1,
                                  },
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": Object {
                                    "baseState": null,
                                    "firstCapturedEffect": null,
                                    "firstCapturedUpdate": null,
                                    "firstEffect": null,
                                    "firstUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "children": <ForwardRef
                                                component="input"
                                                name="test"
                                              />,
                                              "immutable": true,
                                            }
                                          }
                                        />,
                                      },
                                      "tag": 0,
                                    },
                                    "lastCapturedEffect": null,
                                    "lastCapturedUpdate": null,
                                    "lastEffect": null,
                                    "lastUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "children": <ForwardRef
                                                component="input"
                                                name="test"
                                              />,
                                              "immutable": true,
                                            }
                                          }
                                        />,
                                      },
                                      "tag": 0,
                                    },
                                  },
                                },
                                "child": [Circular],
                                "childExpirationTime": 0,
                                "effectTag": 32,
                                "expirationTime": 0,
                                "firstContextDependency": null,
                                "firstEffect": [Circular],
                                "index": 0,
                                "key": null,
                                "lastEffect": [Circular],
                                "memoizedProps": null,
                                "memoizedState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "children": <ForwardRef
                                          component="input"
                                          name="test"
                                        />,
                                        "immutable": true,
                                      }
                                    }
                                  />,
                                },
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <form>
                                      <input
                                        value=""
                                      />
                                    </form>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "didError": false,
                                  "earliestPendingTime": 0,
                                  "earliestSuspendedTime": 0,
                                  "expirationTime": 0,
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "interactionThreadID": 12,
                                  "latestPendingTime": 0,
                                  "latestPingedTime": 0,
                                  "latestSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextExpirationTimeToWorkOn": 0,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "timeoutHandle": -1,
                                },
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "children": <ForwardRef
                                            component="input"
                                            name="test"
                                          />,
                                          "immutable": true,
                                        }
                                      }
                                    />,
                                  },
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": null,
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": null,
                                },
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": WrapperComponent {
                                "_reactInternalFiber": [Circular],
                                "_reactInternalInstance": Object {},
                                "context": Object {},
                                "props": Object {
                                  "Component": [Function],
                                  "context": null,
                                  "props": Object {
                                    "children": <ForwardRef
                                      component="input"
                                      name="test"
                                    />,
                                    "immutable": true,
                                  },
                                },
                                "refs": Object {},
                                "state": Object {
                                  "context": null,
                                  "mount": true,
                                  "props": Object {
                                    "children": <ForwardRef
                                      component="input"
                                      name="test"
                                    />,
                                    "immutable": true,
                                  },
                                },
                                "updater": Object {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "tag": 2,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": Provider {
                              "__reactInternalMemoizedMergedChildContext": Object {
                                "store": Object {
                                  "dispatch": [Function],
                                  "getState": [Function],
                                  "replaceReducer": [Function],
                                  "subscribe": [Function],
                                  Symbol(observable): [Function],
                                },
                              },
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "children": <ForwardRef
                                  component="input"
                                  name="test"
                                />,
                                "immutable": true,
                              },
                              "refs": Object {},
                              "state": null,
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": Form {
                            "__reactInternalMemoizedMaskedChildContext": Object {
                              "store": Object {
                                "dispatch": [Function],
                                "getState": [Function],
                                "replaceReducer": [Function],
                                "subscribe": [Function],
                                Symbol(observable): [Function],
                              },
                            },
                            "__reactInternalMemoizedMergedChildContext": Object {
                              "_reformRedux": Object {
                                "field": Object {
                                  "changeFieldValue": [Function],
                                  "changeFieldsValues": [Function],
                                  "removeField": [Function],
                                  "resetField": [Function],
                                  "resetFields": [Function],
                                  "setFieldDisabled": [Function],
                                  "setFieldErrors": [Function],
                                  "setFieldTouched": [Function],
                                  "setFieldsDisabled": [Function],
                                  "setFieldsErrors": [Function],
                                  "setFieldsTouched": [Function],
                                },
                                "form": Object {
                                  "fieldsCount": Object {
                                    "test": 1,
                                  },
                                  "initialized": false,
                                  "name": "form",
                                  "path": Array [
                                    "form",
                                  ],
                                  "registerField": [Function],
                                  "resetForm": [Function],
                                  "unregisterField": [Function],
                                  "updateForm": [Function],
                                },
                              },
                              "store": Object {
                                "dispatch": [Function],
                                "getState": [Function],
                                "replaceReducer": [Function],
                                "subscribe": [Function],
                                Symbol(observable): [Function],
                              },
                            },
                            "__reactInternalMemoizedUnmaskedChildContext": Object {
                              "store": Object {
                                "dispatch": [Function],
                                "getState": [Function],
                                "replaceReducer": [Function],
                                "subscribe": [Function],
                                Symbol(observable): [Function],
                              },
                            },
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {
                              "store": Object {
                                "dispatch": [Function],
                                "getState": [Function],
                                "replaceReducer": [Function],
                                "subscribe": [Function],
                                Symbol(observable): [Function],
                              },
                            },
                            "decreaseFieldCount": [Function],
                            "fieldsCount": Object {
                              "form": Object {
                                "test": 1,
                              },
                            },
                            "fieldsStack": Object {
                              "form": Object {
                                "test": Immutable.Map {
                                  "value": "",
                                  "errors": Immutable.List [],
                                  "valid": true,
                                  "touched": false,
                                  "changed": false,
                                  "disabled": false,
                                },
                              },
                            },
                            "fieldsValidateStack": Object {
                              "form": Object {
                                "test": Immutable.List [],
                              },
                            },
                            "formName": "form",
                            "handleSubmit": [Function],
                            "increaseFieldCount": [Function],
                            "initialized": true,
                            "path": Array [
                              "form",
                            ],
                            "props": Object {
                              "children": <ForwardRef
                                component="input"
                                name="test"
                              />,
                              "onSubmit": [Function],
                              "onSubmitFailed": [Function],
                              "path": "form",
                            },
                            "refs": Object {},
                            "registerField": [Function],
                            "state": null,
                            "unregisterField": [Function],
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": [Circular],
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": <ForwardRef
                            component="input"
                            name="test"
                          />,
                          "onSubmit": [Function],
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": <ForwardRef
                            component="input"
                            name="test"
                          />,
                          "onSubmit": [Function],
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 51,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": FiberNode {
                            "_debugID": 50,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": FiberNode {
                              "_debugID": 49,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "effectTag": 1,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "memoizedState": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugID": 47,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": FiberNode {
                                  "_debugID": 47,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": [Circular],
                                  "child": null,
                                  "childExpirationTime": 0,
                                  "effectTag": 0,
                                  "expirationTime": 1,
                                  "firstContextDependency": null,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": null,
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": Object {
                                    "containerInfo": <div>
                                      <form>
                                        <input
                                          value=""
                                        />
                                      </form>
                                    </div>,
                                    "context": Object {},
                                    "current": [Circular],
                                    "didError": false,
                                    "earliestPendingTime": 0,
                                    "earliestSuspendedTime": 0,
                                    "expirationTime": 0,
                                    "finishedWork": null,
                                    "firstBatch": null,
                                    "hydrate": false,
                                    "interactionThreadID": 12,
                                    "latestPendingTime": 0,
                                    "latestPingedTime": 0,
                                    "latestSuspendedTime": 0,
                                    "memoizedInteractions": Set {},
                                    "nextExpirationTimeToWorkOn": 0,
                                    "nextScheduledRoot": null,
                                    "pendingChildren": null,
                                    "pendingCommitExpirationTime": 0,
                                    "pendingContext": null,
                                    "pendingInteractionMap": Map {},
                                    "timeoutHandle": -1,
                                  },
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": Object {
                                    "baseState": null,
                                    "firstCapturedEffect": null,
                                    "firstCapturedUpdate": null,
                                    "firstEffect": null,
                                    "firstUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "children": <ForwardRef
                                                component="input"
                                                name="test"
                                              />,
                                              "immutable": true,
                                            }
                                          }
                                        />,
                                      },
                                      "tag": 0,
                                    },
                                    "lastCapturedEffect": null,
                                    "lastCapturedUpdate": null,
                                    "lastEffect": null,
                                    "lastUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "children": <ForwardRef
                                                component="input"
                                                name="test"
                                              />,
                                              "immutable": true,
                                            }
                                          }
                                        />,
                                      },
                                      "tag": 0,
                                    },
                                  },
                                },
                                "child": [Circular],
                                "childExpirationTime": 0,
                                "effectTag": 32,
                                "expirationTime": 0,
                                "firstContextDependency": null,
                                "firstEffect": [Circular],
                                "index": 0,
                                "key": null,
                                "lastEffect": [Circular],
                                "memoizedProps": null,
                                "memoizedState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "children": <ForwardRef
                                          component="input"
                                          name="test"
                                        />,
                                        "immutable": true,
                                      }
                                    }
                                  />,
                                },
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <form>
                                      <input
                                        value=""
                                      />
                                    </form>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "didError": false,
                                  "earliestPendingTime": 0,
                                  "earliestSuspendedTime": 0,
                                  "expirationTime": 0,
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "interactionThreadID": 12,
                                  "latestPendingTime": 0,
                                  "latestPingedTime": 0,
                                  "latestSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextExpirationTimeToWorkOn": 0,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "timeoutHandle": -1,
                                },
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "children": <ForwardRef
                                            component="input"
                                            name="test"
                                          />,
                                          "immutable": true,
                                        }
                                      }
                                    />,
                                  },
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": null,
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": null,
                                },
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": WrapperComponent {
                                "_reactInternalFiber": [Circular],
                                "_reactInternalInstance": Object {},
                                "context": Object {},
                                "props": Object {
                                  "Component": [Function],
                                  "context": null,
                                  "props": Object {
                                    "children": <ForwardRef
                                      component="input"
                                      name="test"
                                    />,
                                    "immutable": true,
                                  },
                                },
                                "refs": Object {},
                                "state": Object {
                                  "context": null,
                                  "mount": true,
                                  "props": Object {
                                    "children": <ForwardRef
                                      component="input"
                                      name="test"
                                    />,
                                    "immutable": true,
                                  },
                                },
                                "updater": Object {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "tag": 2,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "children": <ForwardRef
                                component="input"
                                name="test"
                              />,
                              "immutable": true,
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": <ForwardRef
                                component="input"
                                name="test"
                              />,
                              "immutable": true,
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 49,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "effectTag": 1,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "memoizedState": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugID": 47,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": FiberNode {
                                  "_debugID": 47,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": [Circular],
                                  "child": null,
                                  "childExpirationTime": 0,
                                  "effectTag": 0,
                                  "expirationTime": 1,
                                  "firstContextDependency": null,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": null,
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": Object {
                                    "containerInfo": <div>
                                      <form>
                                        <input
                                          value=""
                                        />
                                      </form>
                                    </div>,
                                    "context": Object {},
                                    "current": [Circular],
                                    "didError": false,
                                    "earliestPendingTime": 0,
                                    "earliestSuspendedTime": 0,
                                    "expirationTime": 0,
                                    "finishedWork": null,
                                    "firstBatch": null,
                                    "hydrate": false,
                                    "interactionThreadID": 12,
                                    "latestPendingTime": 0,
                                    "latestPingedTime": 0,
                                    "latestSuspendedTime": 0,
                                    "memoizedInteractions": Set {},
                                    "nextExpirationTimeToWorkOn": 0,
                                    "nextScheduledRoot": null,
                                    "pendingChildren": null,
                                    "pendingCommitExpirationTime": 0,
                                    "pendingContext": null,
                                    "pendingInteractionMap": Map {},
                                    "timeoutHandle": -1,
                                  },
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": Object {
                                    "baseState": null,
                                    "firstCapturedEffect": null,
                                    "firstCapturedUpdate": null,
                                    "firstEffect": null,
                                    "firstUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "children": <ForwardRef
                                                component="input"
                                                name="test"
                                              />,
                                              "immutable": true,
                                            }
                                          }
                                        />,
                                      },
                                      "tag": 0,
                                    },
                                    "lastCapturedEffect": null,
                                    "lastCapturedUpdate": null,
                                    "lastEffect": null,
                                    "lastUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "children": <ForwardRef
                                                component="input"
                                                name="test"
                                              />,
                                              "immutable": true,
                                            }
                                          }
                                        />,
                                      },
                                      "tag": 0,
                                    },
                                  },
                                },
                                "child": [Circular],
                                "childExpirationTime": 0,
                                "effectTag": 32,
                                "expirationTime": 0,
                                "firstContextDependency": null,
                                "firstEffect": [Circular],
                                "index": 0,
                                "key": null,
                                "lastEffect": [Circular],
                                "memoizedProps": null,
                                "memoizedState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "children": <ForwardRef
                                          component="input"
                                          name="test"
                                        />,
                                        "immutable": true,
                                      }
                                    }
                                  />,
                                },
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <form>
                                      <input
                                        value=""
                                      />
                                    </form>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "didError": false,
                                  "earliestPendingTime": 0,
                                  "earliestSuspendedTime": 0,
                                  "expirationTime": 0,
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "interactionThreadID": 12,
                                  "latestPendingTime": 0,
                                  "latestPingedTime": 0,
                                  "latestSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextExpirationTimeToWorkOn": 0,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "timeoutHandle": -1,
                                },
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "children": <ForwardRef
                                            component="input"
                                            name="test"
                                          />,
                                          "immutable": true,
                                        }
                                      }
                                    />,
                                  },
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": null,
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": null,
                                },
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": WrapperComponent {
                                "_reactInternalFiber": [Circular],
                                "_reactInternalInstance": Object {},
                                "context": Object {},
                                "props": Object {
                                  "Component": [Function],
                                  "context": null,
                                  "props": Object {
                                    "children": <ForwardRef
                                      component="input"
                                      name="test"
                                    />,
                                    "immutable": true,
                                  },
                                },
                                "refs": Object {},
                                "state": Object {
                                  "context": null,
                                  "mount": true,
                                  "props": Object {
                                    "children": <ForwardRef
                                      component="input"
                                      name="test"
                                    />,
                                    "immutable": true,
                                  },
                                },
                                "updater": Object {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "tag": 2,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": Provider {
                              "__reactInternalMemoizedMergedChildContext": Object {
                                "store": Object {
                                  "dispatch": [Function],
                                  "getState": [Function],
                                  "replaceReducer": [Function],
                                  "subscribe": [Function],
                                  Symbol(observable): [Function],
                                },
                              },
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "children": <ForwardRef
                                  component="input"
                                  name="test"
                                />,
                                "immutable": true,
                              },
                              "refs": Object {},
                              "state": null,
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "effectTag": 5,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": <ForwardRef
                              component="input"
                              name="test"
                            />,
                            "onSubmit": [Function],
                            "onSubmitFailed": [Function],
                            "path": "form",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": <ForwardRef
                              component="input"
                              name="test"
                            />,
                            "onSubmit": [Function],
                            "onSubmitFailed": [Function],
                            "path": "form",
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 50,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": FiberNode {
                              "_debugID": 49,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "effectTag": 1,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "memoizedState": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugID": 47,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": FiberNode {
                                  "_debugID": 47,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": [Circular],
                                  "child": null,
                                  "childExpirationTime": 0,
                                  "effectTag": 0,
                                  "expirationTime": 1,
                                  "firstContextDependency": null,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": null,
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": Object {
                                    "containerInfo": <div>
                                      <form>
                                        <input
                                          value=""
                                        />
                                      </form>
                                    </div>,
                                    "context": Object {},
                                    "current": [Circular],
                                    "didError": false,
                                    "earliestPendingTime": 0,
                                    "earliestSuspendedTime": 0,
                                    "expirationTime": 0,
                                    "finishedWork": null,
                                    "firstBatch": null,
                                    "hydrate": false,
                                    "interactionThreadID": 12,
                                    "latestPendingTime": 0,
                                    "latestPingedTime": 0,
                                    "latestSuspendedTime": 0,
                                    "memoizedInteractions": Set {},
                                    "nextExpirationTimeToWorkOn": 0,
                                    "nextScheduledRoot": null,
                                    "pendingChildren": null,
                                    "pendingCommitExpirationTime": 0,
                                    "pendingContext": null,
                                    "pendingInteractionMap": Map {},
                                    "timeoutHandle": -1,
                                  },
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": Object {
                                    "baseState": null,
                                    "firstCapturedEffect": null,
                                    "firstCapturedUpdate": null,
                                    "firstEffect": null,
                                    "firstUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "children": <ForwardRef
                                                component="input"
                                                name="test"
                                              />,
                                              "immutable": true,
                                            }
                                          }
                                        />,
                                      },
                                      "tag": 0,
                                    },
                                    "lastCapturedEffect": null,
                                    "lastCapturedUpdate": null,
                                    "lastEffect": null,
                                    "lastUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "children": <ForwardRef
                                                component="input"
                                                name="test"
                                              />,
                                              "immutable": true,
                                            }
                                          }
                                        />,
                                      },
                                      "tag": 0,
                                    },
                                  },
                                },
                                "child": [Circular],
                                "childExpirationTime": 0,
                                "effectTag": 32,
                                "expirationTime": 0,
                                "firstContextDependency": null,
                                "firstEffect": [Circular],
                                "index": 0,
                                "key": null,
                                "lastEffect": [Circular],
                                "memoizedProps": null,
                                "memoizedState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "children": <ForwardRef
                                          component="input"
                                          name="test"
                                        />,
                                        "immutable": true,
                                      }
                                    }
                                  />,
                                },
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <form>
                                      <input
                                        value=""
                                      />
                                    </form>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "didError": false,
                                  "earliestPendingTime": 0,
                                  "earliestSuspendedTime": 0,
                                  "expirationTime": 0,
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "interactionThreadID": 12,
                                  "latestPendingTime": 0,
                                  "latestPingedTime": 0,
                                  "latestSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextExpirationTimeToWorkOn": 0,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "timeoutHandle": -1,
                                },
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "children": <ForwardRef
                                            component="input"
                                            name="test"
                                          />,
                                          "immutable": true,
                                        }
                                      }
                                    />,
                                  },
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": null,
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": null,
                                },
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": WrapperComponent {
                                "_reactInternalFiber": [Circular],
                                "_reactInternalInstance": Object {},
                                "context": Object {},
                                "props": Object {
                                  "Component": [Function],
                                  "context": null,
                                  "props": Object {
                                    "children": <ForwardRef
                                      component="input"
                                      name="test"
                                    />,
                                    "immutable": true,
                                  },
                                },
                                "refs": Object {},
                                "state": Object {
                                  "context": null,
                                  "mount": true,
                                  "props": Object {
                                    "children": <ForwardRef
                                      component="input"
                                      name="test"
                                    />,
                                    "immutable": true,
                                  },
                                },
                                "updater": Object {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "tag": 2,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "children": <ForwardRef
                                component="input"
                                name="test"
                              />,
                              "immutable": true,
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": <ForwardRef
                                component="input"
                                name="test"
                              />,
                              "immutable": true,
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 49,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "effectTag": 1,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "memoizedState": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "children": <ForwardRef
                                    component="input"
                                    name="test"
                                  />,
                                  "immutable": true,
                                },
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugID": 47,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": FiberNode {
                                  "_debugID": 47,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": [Circular],
                                  "child": null,
                                  "childExpirationTime": 0,
                                  "effectTag": 0,
                                  "expirationTime": 1,
                                  "firstContextDependency": null,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": null,
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": Object {
                                    "containerInfo": <div>
                                      <form>
                                        <input
                                          value=""
                                        />
                                      </form>
                                    </div>,
                                    "context": Object {},
                                    "current": [Circular],
                                    "didError": false,
                                    "earliestPendingTime": 0,
                                    "earliestSuspendedTime": 0,
                                    "expirationTime": 0,
                                    "finishedWork": null,
                                    "firstBatch": null,
                                    "hydrate": false,
                                    "interactionThreadID": 12,
                                    "latestPendingTime": 0,
                                    "latestPingedTime": 0,
                                    "latestSuspendedTime": 0,
                                    "memoizedInteractions": Set {},
                                    "nextExpirationTimeToWorkOn": 0,
                                    "nextScheduledRoot": null,
                                    "pendingChildren": null,
                                    "pendingCommitExpirationTime": 0,
                                    "pendingContext": null,
                                    "pendingInteractionMap": Map {},
                                    "timeoutHandle": -1,
                                  },
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": Object {
                                    "baseState": null,
                                    "firstCapturedEffect": null,
                                    "firstCapturedUpdate": null,
                                    "firstEffect": null,
                                    "firstUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "children": <ForwardRef
                                                component="input"
                                                name="test"
                                              />,
                                              "immutable": true,
                                            }
                                          }
                                        />,
                                      },
                                      "tag": 0,
                                    },
                                    "lastCapturedEffect": null,
                                    "lastCapturedUpdate": null,
                                    "lastEffect": null,
                                    "lastUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "children": <ForwardRef
                                                component="input"
                                                name="test"
                                              />,
                                              "immutable": true,
                                            }
                                          }
                                        />,
                                      },
                                      "tag": 0,
                                    },
                                  },
                                },
                                "child": [Circular],
                                "childExpirationTime": 0,
                                "effectTag": 32,
                                "expirationTime": 0,
                                "firstContextDependency": null,
                                "firstEffect": [Circular],
                                "index": 0,
                                "key": null,
                                "lastEffect": [Circular],
                                "memoizedProps": null,
                                "memoizedState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "children": <ForwardRef
                                          component="input"
                                          name="test"
                                        />,
                                        "immutable": true,
                                      }
                                    }
                                  />,
                                },
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <form>
                                      <input
                                        value=""
                                      />
                                    </form>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "didError": false,
                                  "earliestPendingTime": 0,
                                  "earliestSuspendedTime": 0,
                                  "expirationTime": 0,
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "interactionThreadID": 12,
                                  "latestPendingTime": 0,
                                  "latestPingedTime": 0,
                                  "latestSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextExpirationTimeToWorkOn": 0,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "timeoutHandle": -1,
                                },
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "children": <ForwardRef
                                            component="input"
                                            name="test"
                                          />,
                                          "immutable": true,
                                        }
                                      }
                                    />,
                                  },
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": null,
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": null,
                                },
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": WrapperComponent {
                                "_reactInternalFiber": [Circular],
                                "_reactInternalInstance": Object {},
                                "context": Object {},
                                "props": Object {
                                  "Component": [Function],
                                  "context": null,
                                  "props": Object {
                                    "children": <ForwardRef
                                      component="input"
                                      name="test"
                                    />,
                                    "immutable": true,
                                  },
                                },
                                "refs": Object {},
                                "state": Object {
                                  "context": null,
                                  "mount": true,
                                  "props": Object {
                                    "children": <ForwardRef
                                      component="input"
                                      name="test"
                                    />,
                                    "immutable": true,
                                  },
                                },
                                "updater": Object {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "tag": 2,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": Provider {
                              "__reactInternalMemoizedMergedChildContext": Object {
                                "store": Object {
                                  "dispatch": [Function],
                                  "getState": [Function],
                                  "replaceReducer": [Function],
                                  "subscribe": [Function],
                                  Symbol(observable): [Function],
                                },
                              },
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "children": <ForwardRef
                                  component="input"
                                  name="test"
                                />,
                                "immutable": true,
                              },
                              "refs": Object {},
                              "state": null,
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": Form {
                            "__reactInternalMemoizedMaskedChildContext": Object {
                              "store": Object {
                                "dispatch": [Function],
                                "getState": [Function],
                                "replaceReducer": [Function],
                                "subscribe": [Function],
                                Symbol(observable): [Function],
                              },
                            },
                            "__reactInternalMemoizedMergedChildContext": Object {
                              "_reformRedux": Object {
                                "field": Object {
                                  "changeFieldValue": [Function],
                                  "changeFieldsValues": [Function],
                                  "removeField": [Function],
                                  "resetField": [Function],
                                  "resetFields": [Function],
                                  "setFieldDisabled": [Function],
                                  "setFieldErrors": [Function],
                                  "setFieldTouched": [Function],
                                  "setFieldsDisabled": [Function],
                                  "setFieldsErrors": [Function],
                                  "setFieldsTouched": [Function],
                                },
                                "form": Object {
                                  "fieldsCount": Object {
                                    "test": 1,
                                  },
                                  "initialized": false,
                                  "name": "form",
                                  "path": Array [
                                    "form",
                                  ],
                                  "registerField": [Function],
                                  "resetForm": [Function],
                                  "unregisterField": [Function],
                                  "updateForm": [Function],
                                },
                              },
                              "store": Object {
                                "dispatch": [Function],
                                "getState": [Function],
                                "replaceReducer": [Function],
                                "subscribe": [Function],
                                Symbol(observable): [Function],
                              },
                            },
                            "__reactInternalMemoizedUnmaskedChildContext": Object {
                              "store": Object {
                                "dispatch": [Function],
                                "getState": [Function],
                                "replaceReducer": [Function],
                                "subscribe": [Function],
                                Symbol(observable): [Function],
                              },
                            },
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {
                              "store": Object {
                                "dispatch": [Function],
                                "getState": [Function],
                                "replaceReducer": [Function],
                                "subscribe": [Function],
                                Symbol(observable): [Function],
                              },
                            },
                            "decreaseFieldCount": [Function],
                            "fieldsCount": Object {
                              "form": Object {
                                "test": 1,
                              },
                            },
                            "fieldsStack": Object {
                              "form": Object {
                                "test": Immutable.Map {
                                  "value": "",
                                  "errors": Immutable.List [],
                                  "valid": true,
                                  "touched": false,
                                  "changed": false,
                                  "disabled": false,
                                },
                              },
                            },
                            "fieldsValidateStack": Object {
                              "form": Object {
                                "test": Immutable.List [],
                              },
                            },
                            "formName": "form",
                            "handleSubmit": [Function],
                            "increaseFieldCount": [Function],
                            "initialized": true,
                            "path": Array [
                              "form",
                            ],
                            "props": Object {
                              "children": <ForwardRef
                                component="input"
                                name="test"
                              />,
                              "onSubmit": [Function],
                              "onSubmitFailed": [Function],
                              "path": "form",
                            },
                            "refs": Object {},
                            "registerField": [Function],
                            "state": null,
                            "unregisterField": [Function],
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <form>
                          <input
                            value=""
                          />
                        </form>,
                        "tag": 7,
                        "treeBaseDuration": 0,
                        "type": "form",
                        "updateQueue": null,
                      },
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": null,
                      "tag": 13,
                      "treeBaseDuration": 0,
                      "type": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                      "updateQueue": null,
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": [Circular],
                    "tag": 2,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_reactInternalInstance": Object {},
                  "changeFieldValue": [Function],
                  "changeFieldValueHandler": [Function],
                  "context": Object {
                    "_reformRedux": Object {
                      "field": Object {
                        "changeFieldValue": [Function],
                        "changeFieldsValues": [Function],
                        "removeField": [Function],
                        "resetField": [Function],
                        "resetFields": [Function],
                        "setFieldDisabled": [Function],
                        "setFieldErrors": [Function],
                        "setFieldTouched": [Function],
                        "setFieldsDisabled": [Function],
                        "setFieldsErrors": [Function],
                        "setFieldsTouched": [Function],
                      },
                      "form": Object {
                        "fieldsCount": Object {
                          "test": 1,
                        },
                        "initialized": false,
                        "name": "form",
                        "path": Array [
                          "form",
                        ],
                        "registerField": [Function],
                        "resetForm": [Function],
                        "unregisterField": [Function],
                        "updateForm": [Function],
                      },
                    },
                    "store": Object {
                      "dispatch": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                      Symbol(observable): [Function],
                    },
                  },
                  "getFieldValue": [Function],
                  "initialFieldData": Immutable.Map {
                    "value": "",
                    "errors": Immutable.List [],
                    "valid": true,
                    "touched": false,
                    "changed": false,
                    "disabled": false,
                  },
                  "isCheckbox": [Function],
                  "isRadio": [Function],
                  "isRadioOrCheckbox": [Function],
                  "onBlurFieldHandler": [Function],
                  "onFocusFieldHandler": [Function],
                  "props": Object {
                    "component": "input",
                    "disabled": false,
                    "innerRef": null,
                    "name": "test",
                    "value": "",
                  },
                  "refs": Object {},
                  "registerField": [Function],
                  "setFieldErrors": [Function],
                  "state": Object {
                    "field": Immutable.Map {
                      "value": "",
                      "errors": Immutable.List [],
                      "valid": true,
                      "touched": false,
                      "changed": false,
                      "disabled": false,
                    },
                  },
                  "unsubscribeFromStore": [Function],
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": "input",
                  "disabled": false,
                  "innerRef": null,
                  "name": "test",
                  "value": "",
                },
                "ref": null,
                "rendered": Object {
                  "instance": <input
                    value=""
                  />,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "disabled": false,
                    "onBlur": [Function],
                    "onChange": [Function],
                    "onFocus": [Function],
                    "value": "",
                  },
                  "ref": null,
                  "rendered": Array [
                    undefined,
                  ],
                  "type": "input",
                },
                "type": [Function],
              },
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "render": [Function],
              },
            },
          ],
          "type": "form",
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
